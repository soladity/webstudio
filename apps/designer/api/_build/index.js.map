{
  "version": 3,
  "sources": ["<stdin>", "../../../../node_modules/@remix-run/dev/dist/compiler/shims/react.ts", "../../app/entry.server.tsx", "../../app/critical-css.ts", "../../app/shared/design-system/stitches.config.ts", "../../app/shared/design-system/index.ts", "../../app/shared/design-system/components/label.tsx", "../../app/shared/design-system/components/text.tsx", "../../app/shared/design-system/components/toggle-group.tsx", "../../app/shared/design-system/components/select.tsx", "../../app/shared/icons/index.ts", "../../app/shared/icons/list-nested.tsx", "../../app/shared/icons/brush.tsx", "../../app/shared/icons/form.tsx", "../../app/shared/icons/undo.tsx", "../../app/shared/icons/redo.tsx", "../../app/shared/icons/google.tsx", "../../app/shared/icons/github.tsx", "../../app/shared/icons/devices.tsx", "../../app/shared/icons/tablet.tsx", "../../app/shared/design-system/components/text-field.tsx", "../../app/shared/design-system/components/flex.tsx", "../../app/shared/design-system/components/grid.tsx", "../../app/shared/design-system/components/tabs.tsx", "../../app/shared/design-system/components/sidebar-tabs.tsx", "../../app/shared/design-system/components/card.tsx", "../../app/shared/design-system/components/simple-toggle.tsx", "../../app/shared/design-system/components/box.tsx", "../../app/shared/design-system/components/tooltip.tsx", "../../app/shared/design-system/components/button.tsx", "../../app/shared/design-system/components/icon-button.tsx", "../../app/shared/design-system/components/popover.tsx", "../../app/shared/design-system/components/panel.tsx", "../../app/shared/design-system/components/heading.tsx", "../../app/shared/design-system/components/menu.tsx", "../../app/shared/design-system/components/paragraph.tsx", "../../app/shared/design-system/components/link.tsx", "../../app/shared/design-system/components/dropdown-menu.tsx", "../../app/shared/design-system/components/switch.tsx", "../../app/shared/design-system/components/slider.tsx", "../../app/shared/design-system/components/radio.tsx", "../../app/shared/design-system/components/combobox.tsx", "../../app/config.ts", "../../app/shared/sentry.ts", "../../app/shared/env/namespace.ts", "../../app/shared/env/env.tsx", "../../app/shared/env/env-getter.ts", "../../app/shared/db/prisma.server.ts", "/Users/oleg/work/webstudio/webstudio-designer/apps/designer/app/root.tsx", "/Users/oleg/work/webstudio/webstudio-designer/apps/designer/app/routes/rest/breakpoints.$projectId.ts", "../../app/shared/db/tree.server.ts", "../../app/shared/tree-utils/create-instance.ts", "../../app/shared/canvas-components/primitives/index.ts", "../../app/shared/canvas-components/primitives/box.tsx", "../../app/shared/canvas-components/primitives/text-block.tsx", "../../app/shared/canvas-components/primitives/heading.tsx", "../../app/shared/canvas-components/primitives/paragraph.tsx", "../../app/shared/canvas-components/primitives/link.tsx", "../../app/shared/canvas-components/primitives/bold.tsx", "../../app/shared/canvas-components/primitives/italic.tsx", "../../app/shared/canvas-components/primitives/button.tsx", "../../app/shared/canvas-components/primitives/input.tsx", "../../app/shared/canvas-components/primitives/form.tsx", "../../app/shared/tree-utils/delete-instance.ts", "../../app/shared/tree-utils/insert-instance.ts", "../../app/shared/tree-utils/populate.ts", "../../app/shared/tree-utils/find-instance.ts", "../../app/shared/tree-utils/index.ts", "../../app/shared/tree-utils/set-instance-style.ts", "../../app/shared/tree-utils/set-instance-children.ts", "../../app/shared/tree-utils/get-instance-path.ts", "../../app/shared/tree-utils/find-closest-sibling-instance.ts", "../../app/shared/tree-utils/find-parent-instance.ts", "../../app/shared/tree-utils/clone-instance.ts", "../../app/shared/breakpoints/sort.ts", "../../app/shared/db/project.server.ts", "../../app/shared/db/props.server.ts", "../../app/shared/db/misc.server.ts", "../../app/shared/db/canvas.server.ts", "../../app/shared/db/breakpoints.server.ts", "/Users/oleg/work/webstudio/webstudio-designer/apps/designer/app/routes/rest/project/clone.$domain.ts", "../../app/shared/session/user.server.ts", "../../app/shared/session/use-login-error-message.ts", "/Users/oleg/work/webstudio/webstudio-designer/apps/designer/app/routes/rest/props.$projectId.ts", "/Users/oleg/work/webstudio/webstudio-designer/apps/designer/app/routes/rest/tree.$projectId.ts", "/Users/oleg/work/webstudio/webstudio-designer/apps/designer/app/routes/rest/publish.ts", "/Users/oleg/work/webstudio/webstudio-designer/apps/designer/app/routes/auth/github.tsx", "../../app/services/auth.server.ts", "../../app/services/session.server.ts", "../../app/shared/db/user.server.ts", "/Users/oleg/work/webstudio/webstudio-designer/apps/designer/app/routes/auth/github/callback.tsx", "/Users/oleg/work/webstudio/webstudio-designer/apps/designer/app/routes/auth/google.tsx", "/Users/oleg/work/webstudio/webstudio-designer/apps/designer/app/routes/auth/google/callback.tsx", "/Users/oleg/work/webstudio/webstudio-designer/apps/designer/app/routes/rest/patch.ts", "/Users/oleg/work/webstudio/webstudio-designer/apps/designer/app/routes/dashboard.tsx", "../../app/shared/documents/designer.tsx", "../../app/env.server.ts", "/Users/oleg/work/webstudio/webstudio-designer/apps/designer/app/routes/dashboard/index.tsx", "../../app/dashboard/dashboard.tsx", "../../app/dashboard/components/header.tsx", "../../app/shared/design-system/components/avatar.tsx", "../../app/shared/design-system/components/status.tsx", "../../app/dashboard/components/card.tsx", "/Users/oleg/work/webstudio/webstudio-designer/apps/designer/app/routes/auth/dev.tsx", "/Users/oleg/work/webstudio/webstudio-designer/apps/designer/app/routes/designer.tsx", "/Users/oleg/work/webstudio/webstudio-designer/apps/designer/app/routes/designer/$id.tsx", "../../app/designer/designer.tsx", "../../app/designer/features/sidebar-left/sidebar-left.tsx", "../../app/designer/shared/nano-states/index.ts", "../../app/designer/features/sidebar-left/panels/index.ts", "../../app/designer/features/sidebar-left/panels/components/index.ts", "../../app/designer/features/sidebar-left/panels/components/components.tsx", "../../app/designer/features/sidebar-left/panels/components/custom-drag-layer.tsx", "../../app/designer/features/sidebar-left/panels/components/component-thumb.tsx", "../../app/designer/features/sidebar-left/panels/tree.tsx", "../../app/designer/shared/instance/use-selected-instance-path.ts", "../../app/shared/nano-states/nano-states.ts", "../../app/shared/nano-states/use-subscribe-scroll-state.ts", "../../app/designer/shared/tree/tree.tsx", "../../app/designer/shared/breakpoints/will-render.ts", "../../app/designer/features/style-panel/use-style-data.ts", "../../app/designer/features/style-panel/parse-css-value.ts", "../../app/designer/features/style-panel/get-inherited-style.ts", "../../app/designer/features/style-panel/lib/utils/get-css-rule-for-breakpoint.ts", "../../app/designer/shared/inspector/collapsible-section.tsx", "../../app/designer/shared/inspector/component-info.tsx", "../../app/designer/features/style-panel/settings.tsx", "../../app/shared/style-panel-configs/configs.ts", "../../app/shared/string-utils/index.ts", "../../app/designer/features/style-panel/render-property.tsx", "../../app/designer/features/style-panel/lib/color-picker.tsx", "../../app/designer/features/style-panel/lib/spacing-widget.tsx", "../../app/designer/features/style-panel/lib/utils/use-is-from-current-breakpoint.ts", "../../app/designer/features/style-panel/lib/constants.ts", "../../app/designer/features/style-panel/dependencies.ts", "../../app/designer/features/style-panel/search.tsx", "../../app/designer/features/style-panel/style-panel.tsx", "../../app/designer/features/props-panel/props-panel.tsx", "../../app/designer/features/props-panel/control.tsx", "../../app/shared/design-system/components/checkbox.tsx", "../../app/designer/features/props-panel/use-props-logic.ts", "../../app/designer/features/inspector/inspector.tsx", "../../app/designer/features/topbar/preview.tsx", "../../app/designer/features/topbar/share.tsx", "../../app/designer/features/topbar/publish.tsx", "../../app/designer/features/topbar/sync-status.tsx", "../../app/designer/features/topbar/menu/menu.tsx", "../../app/designer/features/topbar/menu/shortcut-hint.tsx", "../../app/designer/features/breakpoints/breakpoints.tsx", "../../app/designer/features/breakpoints/breakpoints-editor.tsx", "../../app/designer/features/breakpoints/preview.tsx", "../../app/designer/features/breakpoints/zoom-setting.tsx", "../../app/designer/features/breakpoints/trigger-button.tsx", "../../app/designer/features/breakpoints/width-setting.tsx", "../../app/designer/features/breakpoints/use-subscribe-shortcuts.ts", "../../app/designer/features/breakpoints/confirmation-dialog.tsx", "../../app/designer/features/breakpoints/use-update-canvas-width.ts", "../../app/designer/features/breakpoints/use-subscribe-breakpoints.ts", "../../app/designer/features/topbar/topbar.tsx", "../../app/designer/features/breadcrumbs/breadcrumbs.tsx", "../../app/designer/features/tree-preview/tree-preview.tsx", "../../app/designer/features/workspace/canvas-tools/outline/outline.tsx", "../../app/designer/features/workspace/canvas-tools/outline/label.tsx", "../../app/designer/features/workspace/canvas-tools/outline/selected-instance-outline.tsx", "../../app/designer/features/workspace/canvas-tools/outline/hovered-instance-outline.tsx", "../../app/designer/features/workspace/canvas-tools/text-toolbar/text-toolbar.tsx", "../../app/designer/features/workspace/canvas-tools/hooks/use-subscribe-instance-rect.ts", "../../app/designer/features/workspace/canvas-tools/hooks/use-subscribe-selection-rect.ts", "../../app/designer/features/workspace/canvas-tools/hooks/use-subscribe-editing-instance-id.ts", "../../app/designer/features/workspace/canvas-tools/canvas-tools.tsx", "../../app/designer/features/workspace/workspace.tsx", "../../app/designer/features/workspace/use-read-canvas-rect.ts", "../../app/shared/dom-hooks/use-window-resize.ts", "../../app/shared/dom-hooks/use-measure.ts", "../../app/shared/dom-hooks/use-scroll-state.ts", "../../app/designer/features/workspace/canvas-iframe.tsx", "../../app/designer/shared/shortcuts/use-publish-shortcuts.ts", "../../app/shared/shortcuts/index.ts", "/Users/oleg/work/webstudio/webstudio-designer/apps/designer/app/routes/preview.tsx", "../../app/shared/documents/canvas.tsx", "/Users/oleg/work/webstudio/webstudio-designer/apps/designer/app/routes/preview/$projectId.tsx", "/Users/oleg/work/webstudio/webstudio-designer/apps/designer/app/routes/canvas.tsx", "/Users/oleg/work/webstudio/webstudio-designer/apps/designer/app/routes/canvas/$projectId.tsx", "../../app/canvas/canvas.tsx", "../../app/canvas/shared/use-drag-drop-handlers.ts", "../../app/shared/dom-utils/find-closest-child.ts", "../../app/shared/dom-utils/find-insertion-index.ts", "../../app/shared/dom-utils/get-drag-over-info.ts", "../../app/canvas/shared/nano-states.ts", "../../app/canvas/shared/use-shortcuts.ts", "../../app/canvas/shared/copy-paste.ts", "../../app/shared/props-utils/update-props.ts", "../../app/shared/props-utils/delete-prop.ts", "../../app/shared/props-utils/clone-props.ts", "../../app/canvas/shared/instance.ts", "../../app/canvas/shared/style.ts", "../../app/canvas/shared/use-track-selected-element.ts", "../../app/canvas/features/wrapper-component/wrapper-component.tsx", "../../app/canvas/features/wrapper-component/use-css.tsx", "../../app/canvas/features/wrapper-component/use-draggable.ts", "../../app/canvas/features/wrapper-component/use-ensure-focus.ts", "../../app/canvas/features/wrapper-component/text-editor/lexical.ts", "../../app/canvas/features/wrapper-component/text-editor/nodes/node-instance.tsx", "../../app/canvas/features/wrapper-component/text-editor/config.ts", "../../app/canvas/features/wrapper-component/text-editor/hooks/use-content-editable.tsx", "../../app/canvas/features/wrapper-component/text-editor/plugins/plugin-instance.tsx", "../../app/canvas/features/wrapper-component/text-editor/utils/to-lexical-nodes.tsx", "../../app/canvas/features/wrapper-component/text-editor/plugins/plugin-toolbar-connector.tsx", "../../app/canvas/features/wrapper-component/text-editor/plugins/plugin-on-change.tsx", "../../app/canvas/features/wrapper-component/text-editor/utils/to-updates.ts", "../../app/canvas/features/wrapper-component/text-editor/editor.tsx", "../../app/canvas/shared/sync/use-sync.ts", "../../app/canvas/shared/sync/queue.ts", "../../app/canvas/shared/props.ts", "../../app/canvas/shared/breakpoints.ts", "../../app/shared/css-utils/delete-css-rules-by-breakpoint.ts", "../../app/canvas/shared/immerhin.ts", "../../app/canvas/shared/use-track-hovered-element.ts", "../../app/canvas/shared/use-publish-scroll-state.ts", "/Users/oleg/work/webstudio/webstudio-designer/apps/designer/app/routes/logout.tsx", "/Users/oleg/work/webstudio/webstudio-designer/apps/designer/app/routes/index.tsx", "../../app/routes/canvas.tsx", "/Users/oleg/work/webstudio/webstudio-designer/apps/designer/app/routes/login.tsx", "/Users/oleg/work/webstudio/webstudio-designer/apps/designer/app/routes/login/index.tsx", "../../app/auth/login.tsx", "../../app/auth/components/login-button.tsx", "server-assets-manifest:@remix-run/dev/assets-manifest", "server-entry-module:@remix-run/dev/server-build"],
  "sourcesContent": ["export * from \"@remix-run/dev/server-build\";", "// eslint-disable-next-line import/no-extraneous-dependencies\nimport * as React from \"react\";\nexport { React };\n", "import { renderToString } from \"react-dom/server\";\nimport { RemixServer } from \"@remix-run/react\";\nimport { insertCriticalCss } from \"./critical-css\";\nimport type { EntryContext } from \"@remix-run/node\";\nimport * as Sentry from \"@sentry/remix\";\nimport { initSentry } from \"./shared/sentry\";\nimport { prisma } from \"./shared/db/prisma.server\";\n\ninitSentry({\n  integrations: [new Sentry.Integrations.Prisma({ client: prisma })],\n});\n\nexport default function handleRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  let markup = renderToString(\n    <RemixServer context={remixContext} url={request.url} />\n  );\n\n  markup = insertCriticalCss(markup, request.url);\n\n  responseHeaders.set(\"Content-Type\", \"text/html\");\n\n  return new Response(\"<!DOCTYPE html>\" + markup, {\n    status: responseStatusCode,\n    headers: responseHeaders,\n  });\n}\n", "import {\n  insertCriticalCss as insert,\n  getCssText as getCanvasCssText,\n} from \"@webstudio-is/sdk\";\nimport { getCssText as getDesignerCssText } from \"apps/designer/app/shared/design-system\";\nimport config from \"./config\";\n\nconst getCssTextFunctions = {\n  [config.previewPath]: getCanvasCssText,\n  [config.canvasPath]: getCanvasCssText,\n  [config.designerPath]: getDesignerCssText,\n  [config.dashboardPath]: getDesignerCssText,\n  [config.loginPath]: getDesignerCssText,\n};\n\nconst getCssTextFunction = (url: string) => {\n  const { pathname } = new URL(url);\n  let path: keyof typeof getCssTextFunctions;\n  for (path in getCssTextFunctions) {\n    if (pathname.indexOf(path) === 0) {\n      return getCssTextFunctions[path];\n    }\n  }\n  return getCanvasCssText;\n};\n\n/**\n * This works around the problem with getCssTextfunction being a different one\n * depending on createStitches() used in each outlet.\n * @todo find a better way\n */\nexport const insertCriticalCss = (markup: string, url: string): string => {\n  return insert(markup, getCssTextFunction(url));\n};\n", "import { createStitches } from \"@stitches/react\";\nimport {\n  amber,\n  amberA,\n  amberDark,\n  amberDarkA,\n  blackA,\n  blue,\n  blueA,\n  blueDark,\n  blueDarkA,\n  bronze,\n  bronzeA,\n  bronzeDark,\n  bronzeDarkA,\n  brown,\n  brownA,\n  brownDark,\n  brownDarkA,\n  crimson,\n  crimsonA,\n  crimsonDark,\n  crimsonDarkA,\n  cyan,\n  cyanA,\n  cyanDark,\n  cyanDarkA,\n  gold,\n  goldA,\n  goldDark,\n  goldDarkA,\n  grass,\n  grassA,\n  grassDark,\n  grassDarkA,\n  gray,\n  grayA,\n  grayDark,\n  grayDarkA,\n  green,\n  greenA,\n  greenDark,\n  greenDarkA,\n  indigo,\n  indigoA,\n  indigoDark,\n  indigoDarkA,\n  lime,\n  limeA,\n  limeDark,\n  limeDarkA,\n  mauve,\n  mauveA,\n  mauveDark,\n  mauveDarkA,\n  mint,\n  mintA,\n  mintDark,\n  mintDarkA,\n  olive,\n  oliveA,\n  oliveDark,\n  oliveDarkA,\n  orange,\n  orangeA,\n  orangeDark,\n  orangeDarkA,\n  pink,\n  pinkA,\n  pinkDark,\n  pinkDarkA,\n  plum,\n  plumA,\n  plumDark,\n  plumDarkA,\n  purple,\n  purpleA,\n  purpleDark,\n  purpleDarkA,\n  red,\n  redA,\n  redDark,\n  redDarkA,\n  sage,\n  sageA,\n  sageDark,\n  sageDarkA,\n  sand,\n  sandA,\n  sandDark,\n  sandDarkA,\n  sky,\n  skyA,\n  skyDark,\n  skyDarkA,\n  slate,\n  slateA,\n  slateDark,\n  slateDarkA,\n  teal,\n  tealA,\n  tealDark,\n  tealDarkA,\n  tomato,\n  tomatoA,\n  tomatoDark,\n  tomatoDarkA,\n  violet,\n  violetA,\n  violetDark,\n  violetDarkA,\n  whiteA,\n  yellow,\n  yellowA,\n  yellowDark,\n  yellowDarkA,\n} from \"@radix-ui/colors\";\nimport type * as Stitches from \"@stitches/react\";\nexport type { VariantProps } from \"@stitches/react\";\n\nexport const {\n  styled,\n  css,\n  theme,\n  createTheme,\n  getCssText,\n  globalCss,\n  keyframes,\n  config,\n  reset,\n} = createStitches({\n  theme: {\n    colors: {\n      ...gray,\n      ...mauve,\n      ...slate,\n      ...sage,\n      ...olive,\n      ...sand,\n      ...tomato,\n      ...red,\n      ...crimson,\n      ...pink,\n      ...plum,\n      ...purple,\n      ...violet,\n      ...indigo,\n      ...blue,\n      ...sky,\n      ...mint,\n      ...cyan,\n      ...teal,\n      ...green,\n      ...grass,\n      ...lime,\n      ...yellow,\n      ...amber,\n      ...orange,\n      ...brown,\n      ...bronze,\n      ...gold,\n\n      ...grayA,\n      ...mauveA,\n      ...slateA,\n      ...sageA,\n      ...oliveA,\n      ...sandA,\n      ...tomatoA,\n      ...redA,\n      ...crimsonA,\n      ...pinkA,\n      ...plumA,\n      ...purpleA,\n      ...violetA,\n      ...indigoA,\n      ...blueA,\n      ...skyA,\n      ...mintA,\n      ...cyanA,\n      ...tealA,\n      ...greenA,\n      ...grassA,\n      ...limeA,\n      ...yellowA,\n      ...amberA,\n      ...orangeA,\n      ...brownA,\n      ...bronzeA,\n      ...goldA,\n\n      ...whiteA,\n      ...blackA,\n\n      // Semantic colors\n      hiContrast: \"$slate12\",\n      loContrast: \"$slate1\",\n      muted: \"$slate6\",\n      primary: \"$blue12\",\n      canvas: \"hsl(0 0% 93%)\",\n      panel: \"white\",\n      transparentPanel: \"hsl(0 0% 0% / 97%)\",\n      shadowLight: \"hsl(206 22% 7% / 35%)\",\n      shadowDark: \"hsl(206 22% 7% / 20%)\",\n      background: \"$slate1\",\n      text: \"$slate12\",\n    },\n    fonts: {\n      sans: \"Inter, -apple-system, system-ui, sans-serif\",\n      mono: \"S\u00F6hne Mono, menlo, monospace\",\n    },\n    space: {\n      1: \"5px\",\n      2: \"10px\",\n      3: \"15px\",\n      4: \"20px\",\n      5: \"25px\",\n      6: \"35px\",\n      7: \"45px\",\n      8: \"65px\",\n      9: \"80px\",\n    },\n    sizes: {\n      1: \"5px\",\n      2: \"10px\",\n      3: \"15px\",\n      4: \"20px\",\n      5: \"25px\",\n      6: \"35px\",\n      7: \"45px\",\n      8: \"65px\",\n      9: \"80px\",\n    },\n    // space: {\n    //   1: '4px',\n    //   2: '8px',\n    //   3: '16px',\n    //   4: '20px',\n    //   5: '24px',\n    //   6: '32px',\n    //   7: '48px',\n    //   8: '64px',\n    //   9: '80px',\n    // },\n    // sizes: {\n    //   1: '4px',\n    //   2: '8px',\n    //   3: '16px',\n    //   4: '20px',\n    //   5: '24px',\n    //   6: '32px',\n    //   7: '48px',\n    //   8: '64px',\n    //   9: '80px',\n    // },\n    fontSizes: {\n      1: \"12px\",\n      2: \"13px\",\n      3: \"15px\",\n      4: \"17px\",\n      5: \"19px\",\n      6: \"21px\",\n      7: \"27px\",\n      8: \"35px\",\n      9: \"59px\",\n    },\n    // fontSizes: {\n    //   1: '11px',\n    //   2: '12px',\n    //   3: '15px',\n    //   4: '17px',\n    //   5: '20px',\n    //   6: '22px',\n    //   7: '28px',\n    //   8: '36px',\n    //   9: '60px',\n    // },\n    radii: {\n      1: \"4px\",\n      2: \"6px\",\n      3: \"8px\",\n      4: \"12px\",\n      round: \"50%\",\n      pill: \"9999px\",\n    },\n    zIndices: {\n      1: \"100\",\n      2: \"200\",\n      3: \"300\",\n      4: \"400\",\n      max: \"999\",\n    },\n  },\n  media: {\n    bp1: \"(min-width: 520px)\",\n    bp2: \"(min-width: 900px)\",\n    bp3: \"(min-width: 1200px)\",\n    bp4: \"(min-width: 1800px)\",\n    motion: \"(prefers-reduced-motion)\",\n    hover: \"(any-hover: hover)\",\n    dark: \"(prefers-color-scheme: dark)\",\n    light: \"(prefers-color-scheme: light)\",\n  },\n  utils: {\n    p: (value: Stitches.PropertyValue<\"padding\">) => ({\n      padding: value,\n    }),\n    pt: (value: Stitches.PropertyValue<\"paddingTop\">) => ({\n      paddingTop: value,\n    }),\n    pr: (value: Stitches.PropertyValue<\"paddingRight\">) => ({\n      paddingRight: value,\n    }),\n    pb: (value: Stitches.PropertyValue<\"paddingBottom\">) => ({\n      paddingBottom: value,\n    }),\n    pl: (value: Stitches.PropertyValue<\"paddingLeft\">) => ({\n      paddingLeft: value,\n    }),\n    px: (value: Stitches.PropertyValue<\"paddingLeft\">) => ({\n      paddingLeft: value,\n      paddingRight: value,\n    }),\n    py: (value: Stitches.PropertyValue<\"paddingTop\">) => ({\n      paddingTop: value,\n      paddingBottom: value,\n    }),\n\n    m: (value: Stitches.PropertyValue<\"margin\">) => ({\n      margin: value,\n    }),\n    mt: (value: Stitches.PropertyValue<\"marginTop\">) => ({\n      marginTop: value,\n    }),\n    mr: (value: Stitches.PropertyValue<\"marginRight\">) => ({\n      marginRight: value,\n    }),\n    mb: (value: Stitches.PropertyValue<\"marginBottom\">) => ({\n      marginBottom: value,\n    }),\n    ml: (value: Stitches.PropertyValue<\"marginLeft\">) => ({\n      marginLeft: value,\n    }),\n    mx: (value: Stitches.PropertyValue<\"marginLeft\">) => ({\n      marginLeft: value,\n      marginRight: value,\n    }),\n    my: (value: Stitches.PropertyValue<\"marginTop\">) => ({\n      marginTop: value,\n      marginBottom: value,\n    }),\n\n    ta: (value: Stitches.PropertyValue<\"textAlign\">) => ({ textAlign: value }),\n\n    fd: (value: Stitches.PropertyValue<\"flexDirection\">) => ({\n      flexDirection: value,\n    }),\n    fw: (value: Stitches.PropertyValue<\"flexWrap\">) => ({ flexWrap: value }),\n\n    ai: (value: Stitches.PropertyValue<\"alignItems\">) => ({\n      alignItems: value,\n    }),\n    ac: (value: Stitches.PropertyValue<\"alignContent\">) => ({\n      alignContent: value,\n    }),\n    jc: (value: Stitches.PropertyValue<\"justifyContent\">) => ({\n      justifyContent: value,\n    }),\n    as: (value: Stitches.PropertyValue<\"alignSelf\">) => ({ alignSelf: value }),\n    fg: (value: Stitches.PropertyValue<\"flexGrow\">) => ({ flexGrow: value }),\n    fs: (value: Stitches.PropertyValue<\"flexShrink\">) => ({\n      flexShrink: value,\n    }),\n    fb: (value: Stitches.PropertyValue<\"flexBasis\">) => ({ flexBasis: value }),\n\n    bc: (value: Stitches.PropertyValue<\"backgroundColor\">) => ({\n      backgroundColor: value,\n    }),\n\n    br: (value: Stitches.PropertyValue<\"borderRadius\">) => ({\n      borderRadius: value,\n    }),\n    btrr: (value: Stitches.PropertyValue<\"borderTopRightRadius\">) => ({\n      borderTopRightRadius: value,\n    }),\n    bbrr: (value: Stitches.PropertyValue<\"borderBottomRightRadius\">) => ({\n      borderBottomRightRadius: value,\n    }),\n    bblr: (value: Stitches.PropertyValue<\"borderBottomLeftRadius\">) => ({\n      borderBottomLeftRadius: value,\n    }),\n    btlr: (value: Stitches.PropertyValue<\"borderTopLeftRadius\">) => ({\n      borderTopLeftRadius: value,\n    }),\n\n    bs: (value: Stitches.PropertyValue<\"boxShadow\">) => ({ boxShadow: value }),\n\n    lh: (value: Stitches.PropertyValue<\"lineHeight\">) => ({\n      lineHeight: value,\n    }),\n\n    ox: (value: Stitches.PropertyValue<\"overflowX\">) => ({ overflowX: value }),\n    oy: (value: Stitches.PropertyValue<\"overflowY\">) => ({ overflowY: value }),\n\n    pe: (value: Stitches.PropertyValue<\"pointerEvents\">) => ({\n      pointerEvents: value,\n    }),\n    us: (value: Stitches.PropertyValue<\"userSelect\">) => ({\n      WebkitUserSelect: value,\n      userSelect: value,\n    }),\n\n    userSelect: (value: Stitches.PropertyValue<\"userSelect\">) => ({\n      WebkitUserSelect: value,\n      userSelect: value,\n    }),\n\n    size: (value: Stitches.PropertyValue<\"width\">) => ({\n      width: value,\n      height: value,\n    }),\n\n    appearance: (value: Stitches.PropertyValue<\"appearance\">) => ({\n      WebkitAppearance: value,\n      appearance: value,\n    }),\n    backgroundClip: (value: Stitches.PropertyValue<\"backgroundClip\">) => ({\n      WebkitBackgroundClip: value,\n      backgroundClip: value,\n    }),\n  },\n});\n\nexport type CSS = Stitches.CSS<typeof config>;\n\nexport const darkTheme = createTheme(\"dark-theme\", {\n  colors: {\n    ...grayDark,\n    ...mauveDark,\n    ...slateDark,\n    ...sageDark,\n    ...oliveDark,\n    ...sandDark,\n    ...tomatoDark,\n    ...redDark,\n    ...crimsonDark,\n    ...pinkDark,\n    ...plumDark,\n    ...purpleDark,\n    ...violetDark,\n    ...indigoDark,\n    ...blueDark,\n    ...skyDark,\n    ...mintDark,\n    ...cyanDark,\n    ...tealDark,\n    ...greenDark,\n    ...grassDark,\n    ...limeDark,\n    ...yellowDark,\n    ...amberDark,\n    ...orangeDark,\n    ...brownDark,\n    ...bronzeDark,\n    ...goldDark,\n\n    ...grayDarkA,\n    ...mauveDarkA,\n    ...slateDarkA,\n    ...sageDarkA,\n    ...oliveDarkA,\n    ...sandDarkA,\n    ...tomatoDarkA,\n    ...redDarkA,\n    ...crimsonDarkA,\n    ...pinkDarkA,\n    ...plumDarkA,\n    ...purpleDarkA,\n    ...violetDarkA,\n    ...indigoDarkA,\n    ...blueDarkA,\n    ...skyDarkA,\n    ...mintDarkA,\n    ...cyanDarkA,\n    ...tealDarkA,\n    ...greenDarkA,\n    ...grassDarkA,\n    ...limeDarkA,\n    ...yellowDarkA,\n    ...amberDarkA,\n    ...orangeDarkA,\n    ...brownDarkA,\n    ...bronzeDarkA,\n    ...goldDarkA,\n\n    // Semantic colors\n    muted: \"$slate8\",\n    primary: \"$blue9\",\n    hiContrast: \"$slate12\",\n    loContrast: \"$slate1\",\n    canvas: \"hsl(0 0% 15%)\",\n    panel: \"$slate3\",\n    transparentPanel: \"hsl(0 100% 100% / 97%)\",\n    shadowLight: \"hsl(206 22% 7% / 35%)\",\n    shadowDark: \"hsl(206 22% 7% / 20%)\",\n\n    background: \"$slate12\",\n    text: \"$slate1\",\n  },\n});\n", "export {\n  config,\n  createTheme,\n  css,\n  darkTheme,\n  getCssText,\n  globalCss,\n  keyframes,\n  reset,\n  styled,\n  theme,\n  type CSS,\n} from \"./stitches.config\";\n\nexport * as Collapsible from \"@radix-ui/react-collapsible\";\nexport { AccessibleIcon } from \"@radix-ui/react-accessible-icon\";\nexport * as Portal from \"@radix-ui/react-portal\";\n\nexport { Container } from \"./components/container\";\nexport { Label } from \"./components/label\";\nexport * as ToggleGroup from \"./components/toggle-group\";\nexport * from \"./components/select\";\nexport { TextField } from \"./components/text-field\";\nexport { Flex } from \"./components/flex\";\nexport { Grid } from \"./components/grid\";\nexport { Tabs, TabsContent, TabsList, TabsTrigger } from \"./components/tabs\";\nexport {\n  SidebarTabs,\n  SidebarTabsContent,\n  SidebarTabsList,\n  SidebarTabsTrigger,\n} from \"./components/sidebar-tabs\";\nexport { Text } from \"./components/text\";\nexport { Card } from \"./components/card\";\nexport { SimpleToggle } from \"./components/simple-toggle\";\nexport { ScrollArea } from \"./components/scrollbar\";\nexport { Tooltip } from \"./components/tooltip\";\nexport { Button } from \"./components/button\";\nexport { IconButton } from \"./components/icon-button\";\nexport { Box } from \"./components/box\";\nexport {\n  Popover,\n  PopoverContent,\n  PopoverTrigger,\n  PopoverClose,\n} from \"./components/popover\";\nexport { Heading } from \"./components/heading\";\nexport { MenuContent, MenuItem, Menu, MenuAnchor } from \"./components/menu\";\nexport { Paragraph } from \"./components/paragraph\";\nexport { Link } from \"./components/link\";\nexport { Panel } from \"./components/panel\";\nexport * from \"./components/dropdown-menu\";\nexport * from \"./components/switch\";\nexport * from \"./components/slider\";\nexport * from \"./components/control-group\";\nexport * from \"./components/radio\";\nexport * from \"./components/combobox\";\n", "import { styled } from \"../stitches.config\";\nimport * as LabelPrimitive from \"@radix-ui/react-label\";\nimport { Text } from \"./text\";\n\nexport const Label = styled(LabelPrimitive.Root, Text, {\n  display: \"inline-block\",\n  verticalAlign: \"middle\",\n  cursor: \"default\",\n  lineHeight: 1.5,\n});\n", "import { styled } from \"../stitches.config\";\n\nexport const Text = styled(\"div\", {\n  // Reset\n  lineHeight: \"1\",\n  margin: \"0\",\n  fontWeight: 400,\n  fontVariantNumeric: \"tabular-nums\",\n  display: \"block\",\n\n  variants: {\n    size: {\n      \"1\": {\n        fontSize: \"$1\",\n      },\n      \"2\": {\n        fontSize: \"$2\",\n      },\n      \"3\": {\n        fontSize: \"$3\",\n      },\n      \"4\": {\n        fontSize: \"$4\",\n      },\n      \"5\": {\n        fontSize: \"$5\",\n        letterSpacing: \"-.015em\",\n      },\n      \"6\": {\n        fontSize: \"$6\",\n        letterSpacing: \"-.016em\",\n      },\n      \"7\": {\n        fontSize: \"$7\",\n        letterSpacing: \"-.031em\",\n        textIndent: \"-.005em\",\n      },\n      \"8\": {\n        fontSize: \"$8\",\n        letterSpacing: \"-.034em\",\n        textIndent: \"-.018em\",\n      },\n      \"9\": {\n        fontSize: \"$9\",\n        letterSpacing: \"-.055em\",\n        textIndent: \"-.025em\",\n      },\n    },\n    variant: {\n      red: {\n        color: \"$red11\",\n      },\n      crimson: {\n        color: \"$crimson11\",\n      },\n      pink: {\n        color: \"$pink11\",\n      },\n      purple: {\n        color: \"$purple11\",\n      },\n      violet: {\n        color: \"$violet11\",\n      },\n      indigo: {\n        color: \"$indigo11\",\n      },\n      blue: {\n        color: \"$blue11\",\n      },\n      cyan: {\n        color: \"$cyan11\",\n      },\n      teal: {\n        color: \"$teal11\",\n      },\n      green: {\n        color: \"$green11\",\n      },\n      lime: {\n        color: \"$lime11\",\n      },\n      yellow: {\n        color: \"$yellow11\",\n      },\n      orange: {\n        color: \"$orange11\",\n      },\n      gold: {\n        color: \"$gold11\",\n      },\n      bronze: {\n        color: \"$bronze11\",\n      },\n      gray: {\n        color: \"$slate11\",\n      },\n      contrast: {\n        color: \"$hiContrast\",\n      },\n      loContrast: {\n        color: \"$loContrast\",\n      },\n    },\n    gradient: {\n      true: {\n        WebkitBackgroundClip: \"text\",\n        WebkitTextFillColor: \"transparent\",\n      },\n    },\n  },\n  compoundVariants: [\n    {\n      variant: \"red\",\n      gradient: \"true\",\n      css: {\n        background: \"linear-gradient(to right, $red11, $crimson11)\",\n      },\n    },\n    {\n      variant: \"crimson\",\n      gradient: \"true\",\n      css: {\n        background: \"linear-gradient(to right, $crimson11, $pink11)\",\n      },\n    },\n    {\n      variant: \"pink\",\n      gradient: \"true\",\n      css: {\n        background: \"linear-gradient(to right, $pink11, $purple11)\",\n      },\n    },\n    {\n      variant: \"purple\",\n      gradient: \"true\",\n      css: {\n        background: \"linear-gradient(to right, $purple11, $violet11)\",\n      },\n    },\n    {\n      variant: \"violet\",\n      gradient: \"true\",\n      css: {\n        background: \"linear-gradient(to right, $violet11, $indigo11)\",\n      },\n    },\n    {\n      variant: \"indigo\",\n      gradient: \"true\",\n      css: {\n        background: \"linear-gradient(to right, $indigo11, $blue11)\",\n      },\n    },\n    {\n      variant: \"blue\",\n      gradient: \"true\",\n      css: {\n        background: \"linear-gradient(to right, $blue11, $cyan11)\",\n      },\n    },\n    {\n      variant: \"cyan\",\n      gradient: \"true\",\n      css: {\n        background: \"linear-gradient(to right, $cyan11, $teal11)\",\n      },\n    },\n    {\n      variant: \"teal\",\n      gradient: \"true\",\n      css: {\n        background: \"linear-gradient(to right, $teal11, $green11)\",\n      },\n    },\n    {\n      variant: \"green\",\n      gradient: \"true\",\n      css: {\n        background: \"linear-gradient(to right, $green11, $lime11)\",\n      },\n    },\n    {\n      variant: \"lime\",\n      gradient: \"true\",\n      css: {\n        background: \"linear-gradient(to right, $lime11, $yellow11)\",\n      },\n    },\n    {\n      variant: \"yellow\",\n      gradient: \"true\",\n      css: {\n        background: \"linear-gradient(to right, $yellow11, $orange11)\",\n      },\n    },\n    {\n      variant: \"orange\",\n      gradient: \"true\",\n      css: {\n        background: \"linear-gradient(to right, $orange11, $red11)\",\n      },\n    },\n    {\n      variant: \"gold\",\n      gradient: \"true\",\n      css: {\n        background: \"linear-gradient(to right, $gold11, $gold9)\",\n      },\n    },\n    {\n      variant: \"bronze\",\n      gradient: \"true\",\n      css: {\n        background: \"linear-gradient(to right, $bronze11, $bronze9)\",\n      },\n    },\n    {\n      variant: \"gray\",\n      gradient: \"true\",\n      css: {\n        background: \"linear-gradient(to right, $gray11, $gray12)\",\n      },\n    },\n    {\n      variant: \"contrast\",\n      gradient: \"true\",\n      css: {\n        background: \"linear-gradient(to right, $hiContrast, $gray12)\",\n      },\n    },\n  ],\n  defaultVariants: {\n    size: \"3\",\n    variant: \"contrast\",\n  },\n});\n", "import { styled } from \"../stitches.config\";\nimport * as ToggleGroupPrimitive from \"@radix-ui/react-toggle-group\";\n\nexport const Root = styled(ToggleGroupPrimitive.Root, {\n  display: \"inline-flex\",\n  backgroundColor: \"$slate5\",\n  borderRadius: 4,\n  boxShadow: `0 2px 10px $blackA7`,\n});\n\nexport const Item = styled(ToggleGroupPrimitive.Item, {\n  all: \"unset\",\n  backgroundColor: \"$panel\",\n  color: \"$hiContrast\",\n  display: \"flex\",\n  whiteSpace: \"nowrap\",\n  fontSize: 15,\n  lineHeight: 1,\n  alignItems: \"center\",\n  justifyContent: \"center\",\n  marginLeft: 1,\n  \"&\": {\n    px: \"$2\",\n    py: \"$1\",\n  },\n  \"&:first-child\": {\n    marginLeft: 0,\n    borderTopLeftRadius: 4,\n    borderBottomLeftRadius: 4,\n  },\n  \"&:last-child\": { borderTopRightRadius: 4, borderBottomRightRadius: 4 },\n  \"&:hover\": { backgroundColor: \"$slateA3\" },\n  \"&[data-state=on]\": {\n    backgroundColor: \"$slateA5\",\n  },\n  \"&:focus\": {\n    position: \"relative\",\n    boxShadow: `0 0 0 2px black`,\n  },\n});\n", "import * as SelectPrimitive from \"@radix-ui/react-select\";\nimport noop from \"lodash.noop\";\nimport React, { ReactNode, Ref } from \"react\";\nimport {\n  CaretSortIcon,\n  CheckIcon,\n  ChevronDownIcon,\n  ChevronUpIcon,\n} from \"apps/designer/app/shared/icons\";\nimport { styled } from \"../stitches.config\";\n\nconst StyledTrigger = styled(SelectPrimitive.SelectTrigger, {\n  all: \"unset\",\n  display: \"inline-flex\",\n  alignItems: \"center\",\n  justifyContent: \"space-between\",\n  fontVariantNumeric: \"tabular-nums\",\n  gap: \"$2\",\n  flexShrink: 0,\n  borderRadius: \"$1\",\n  backgroundColor: \"$loContrast\",\n  color: \"$hiContrast\",\n  boxShadow: \"inset 0 0 0 1px $colors$slate7\",\n  \"&:hover\": {\n    backgroundColor: \"$slateA3\",\n  },\n  \"&:focus\": {\n    boxShadow:\n      \"inset 0px 0px 0px 1px $colors$blue8, 0px 0px 0px 1px $colors$blue8\",\n  },\n\n  variants: {\n    size: {\n      1: { padding: \"0 $1 0 $2\", fontSize: \"$1\", height: \"$5\" },\n      2: { padding: \"0 $2 0 $3\", height: \"$6\", fontSize: \"$3\" },\n    },\n    ghost: {\n      true: {\n        backgroundColor: \"transparent\",\n        boxShadow: \"none\",\n      },\n    },\n    fullWidth: {\n      true: {\n        width: \"100%\",\n      },\n    },\n  },\n  defaultVariants: {\n    size: 1,\n  },\n});\n\nconst StyledIcon = styled(SelectPrimitive.Icon, {\n  display: \"inline-flex\",\n  alignItems: \"center\",\n});\n\nconst StyledContent = styled(SelectPrimitive.Content, {\n  overflow: \"hidden\",\n  backgroundColor: \"$muted\",\n  borderRadius: \"$1\",\n  boxShadow:\n    \"0px 10px 38px -10px rgba(22, 23, 24, 0.35), 0px 10px 20px -15px rgba(22, 23, 24, 0.2)\",\n});\n\nconst StyledViewport = styled(SelectPrimitive.Viewport, {\n  py: \"$1\",\n});\n\nconst StyledItem = styled(SelectPrimitive.Item, {\n  all: \"unset\",\n  fontSize: \"$1\",\n  lineHeight: 1,\n  color: \"$hiContrast\",\n  display: \"flex\",\n  alignItems: \"center\",\n  height: \"$5\",\n  padding: \"0 $6 0 $5\",\n  position: \"relative\",\n  userSelect: \"none\",\n\n  \"&[data-disabled]\": {\n    color: \"$muted\",\n    pointerEvents: \"none\",\n  },\n\n  \"&:focus\": {\n    backgroundColor: \"$primary\",\n    color: \"$hiContrast\",\n  },\n});\n\nconst StyledItemIndicator = styled(SelectPrimitive.ItemIndicator, {\n  position: \"absolute\",\n  left: 0,\n  width: 25,\n  display: \"inline-flex\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n});\n\nconst scrollButtonStyles = {\n  display: \"flex\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n  height: 25,\n  color: \"$text\",\n  cursor: \"default\",\n};\n\nconst SelectScrollUpButton = styled(\n  SelectPrimitive.ScrollUpButton,\n  scrollButtonStyles\n);\n\nconst SelectScrollDownButton = styled(\n  SelectPrimitive.ScrollDownButton,\n  scrollButtonStyles\n);\n\nconst SelectItemBase = (\n  { children, ...props }: SelectItemProps,\n  forwardedRef: Ref<HTMLDivElement>\n) => {\n  return (\n    <StyledItem {...props} ref={forwardedRef}>\n      <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n      <StyledItemIndicator>\n        <CheckIcon />\n      </StyledItemIndicator>\n    </StyledItem>\n  );\n};\n\ntype SelectItemProps = SelectPrimitive.SelectItemProps & {\n  children: ReactNode;\n};\nconst SelectItem = React.forwardRef(SelectItemBase);\n\nexport type SelectOption = string;\n\nexport type SelectProps<T = SelectOption> = Omit<\n  React.ComponentProps<typeof StyledTrigger>,\n  \"onChange\" | \"value\" | \"defaultValue\"\n> & {\n  options: T[];\n  defaultValue?: T;\n  value?: T;\n  onChange?: (option: T) => void;\n  placeholder?: string;\n  getLabel?: (option: T) => string | undefined;\n};\n\nconst SelectBase = (\n  {\n    options,\n    value,\n    defaultValue,\n    placeholder = \"Select an option\",\n    onChange = noop,\n    getLabel = (option) => option,\n    name,\n    ...props\n  }: SelectProps,\n  forwardedRef: Ref<HTMLButtonElement>\n) => {\n  return (\n    <SelectPrimitive.Root\n      name={name}\n      value={value}\n      defaultValue={defaultValue}\n      onValueChange={onChange}\n    >\n      <StyledTrigger ref={forwardedRef} {...props}>\n        <SelectPrimitive.Value>\n          {value ? getLabel(value) : placeholder}\n        </SelectPrimitive.Value>\n        <StyledIcon>\n          <CaretSortIcon />\n        </StyledIcon>\n      </StyledTrigger>\n\n      <StyledContent>\n        <SelectScrollUpButton>\n          <ChevronUpIcon />\n        </SelectScrollUpButton>\n        <StyledViewport>\n          {options.map((option) => (\n            <SelectItem key={option} value={option} textValue={option}>\n              {getLabel(option)}\n            </SelectItem>\n          ))}\n        </StyledViewport>\n        <SelectScrollDownButton>\n          <ChevronDownIcon />\n        </SelectScrollDownButton>\n      </StyledContent>\n    </SelectPrimitive.Root>\n  );\n};\n\nexport const Select = React.forwardRef(SelectBase);\nSelect.displayName = \"Select\";\n", "export * from \"@radix-ui/react-icons\";\nexport * from \"./list-nested\";\nexport * from \"./brush\";\nexport * from \"./form\";\nexport * from \"./undo\";\nexport * from \"./redo\";\nexport * from \"./google\";\nexport * from \"./github\";\nexport * from \"./devices\";\nexport * from \"./tablet\";\nexport * from \"./types\";\n", "import * as React from \"react\";\nimport { IconProps } from \"./types\";\n\nexport const ListNestedIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = \"currentColor\", ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M4.5 11.5A.5.5 0 0 1 5 11h10a.5.5 0 0 1 0 1H5a.5.5 0 0 1-.5-.5zm-2-4A.5.5 0 0 1 3 7h10a.5.5 0 0 1 0 1H3a.5.5 0 0 1-.5-.5zm-2-4A.5.5 0 0 1 1 3h10a.5.5 0 0 1 0 1H1a.5.5 0 0 1-.5-.5z\"\n        />\n      </svg>\n    );\n  }\n);\n\nListNestedIcon.displayName = \"ListNestedIcon\";\n", "import * as React from \"react\";\nimport { IconProps } from \"./types\";\n\nexport const BrushIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = \"currentColor\", ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 24 24\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M7 14c-1.66 0-3 1.34-3 3 0 1.31-1.16 2-2 2 .92 1.22 2.49 2 4 2 2.21 0 4-1.79 4-4 0-1.66-1.34-3-3-3zm13.71-9.37-1.34-1.34a.9959.9959 0 0 0-1.41 0L9 12.25 11.75 15l8.96-8.96c.39-.39.39-1.02 0-1.41z\"\n        />\n      </svg>\n    );\n  }\n);\n\nBrushIcon.displayName = \"BrushIcon\";\n", "import * as React from \"react\";\nimport { IconProps } from \"./types\";\n\nexport const FormIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = \"currentColor\", ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 24 24\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M13 11H4c-1.1 0-2-.9-2-2V6c0-1.1.9-2 2-2h9v7zM4 9h7V6H4v3zm11 11H4c-1.1 0-2-.9-2-2v-3c0-1.1.9-2 2-2h11v7zM4 18h9v-3H4v3zm18-9h-2l2-5h-7v7h2v9l5-11zM4.75 17.25h1.5v-1.5h-1.5v1.5zm0-9h1.5v-1.5h-1.5v1.5z\"\n        />\n      </svg>\n    );\n  }\n);\n\nFormIcon.displayName = \"FormIcon\";\n", "import * as React from \"react\";\nimport { IconProps } from \"./types\";\n\nexport const UndoIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = \"currentColor\", ...props }, forwardedRef) => {\n    return (\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        height=\"15\"\n        width=\"15\"\n        viewBox=\"0 0 24 24\"\n        fill={color}\n        {...props}\n        ref={forwardedRef}\n      >\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M12.5 8c-2.65 0-5.05.99-6.9 2.6L2 7v9h9l-3.62-3.62c1.39-1.16 3.16-1.88 5.12-1.88 3.54 0 6.55 2.31 7.6 5.5l2.37-.78C21.08 11.03 17.15 8 12.5 8z\" />\n      </svg>\n    );\n  }\n);\n\nUndoIcon.displayName = \"UndoIcon\";\n", "import * as React from \"react\";\nimport { IconProps } from \"./types\";\n\nexport const RedoIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = \"currentColor\", ...props }, forwardedRef) => {\n    return (\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        height=\"15\"\n        width=\"15\"\n        viewBox=\"0 0 24 24\"\n        fill={color}\n        {...props}\n        ref={forwardedRef}\n      >\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M18.4 10.6C16.55 8.99 14.15 8 11.5 8c-4.65 0-8.58 3.03-9.96 7.22L3.9 16c1.05-3.19 4.05-5.5 7.6-5.5 1.95 0 3.73.72 5.12 1.88L13 16h9V7l-3.6 3.6z\" />\n      </svg>\n    );\n  }\n);\n\nRedoIcon.displayName = \"RedoIcon\";\n", "import * as React from \"react\";\nimport { IconProps } from \"./types\";\n\nexport const GoogleIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = \"currentColor\", ...props }, forwardedRef) => {\n    return (\n      <svg\n        role=\"img\"\n        viewBox=\"0 0 24 24\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <title>Google</title>\n        <path\n          d=\"M12.48 10.92v3.28h7.84c-.24 1.84-.853 3.187-1.787 4.133-1.147 1.147-2.933 2.4-6.053 2.4-4.827 0-8.6-3.893-8.6-8.72s3.773-8.72 8.6-8.72c2.6 0 4.507 1.027 5.907 2.347l2.307-2.307C18.747 1.44 16.133 0 12.48 0 5.867 0 .307 5.387.307 12s5.56 12 12.173 12c3.573 0 6.267-1.173 8.373-3.36 2.16-2.16 2.84-5.213 2.84-7.667 0-.76-.053-1.467-.173-2.053H12.48z\"\n          fill={color}\n        />\n      </svg>\n    );\n  }\n);\n\nGoogleIcon.displayName = \"GoogleIcon\";\n", "import * as React from \"react\";\nimport { IconProps } from \"./types\";\n\nexport const GithubIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = \"currentColor\", ...props }, forwardedRef) => {\n    return (\n      <svg\n        role=\"img\"\n        viewBox=\"0 0 24 24\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <title>GitHub</title>\n        <path\n          d=\"M12 .297c-6.63 0-12 5.373-12 12 0 5.303 3.438 9.8 8.205 11.385.6.113.82-.258.82-.577 0-.285-.01-1.04-.015-2.04-3.338.724-4.042-1.61-4.042-1.61C4.422 18.07 3.633 17.7 3.633 17.7c-1.087-.744.084-.729.084-.729 1.205.084 1.838 1.236 1.838 1.236 1.07 1.835 2.809 1.305 3.495.998.108-.776.417-1.305.76-1.605-2.665-.3-5.466-1.332-5.466-5.93 0-1.31.465-2.38 1.235-3.22-.135-.303-.54-1.523.105-3.176 0 0 1.005-.322 3.3 1.23.96-.267 1.98-.399 3-.405 1.02.006 2.04.138 3 .405 2.28-1.552 3.285-1.23 3.285-1.23.645 1.653.24 2.873.12 3.176.765.84 1.23 1.91 1.23 3.22 0 4.61-2.805 5.625-5.475 5.92.42.36.81 1.096.81 2.22 0 1.606-.015 2.896-.015 3.286 0 .315.21.69.825.57C20.565 22.092 24 17.592 24 12.297c0-6.627-5.373-12-12-12\"\n          fill={color}\n        />\n      </svg>\n    );\n  }\n);\n\nGithubIcon.displayName = \"GithubIcon\";\n", "import * as React from \"react\";\nimport { IconProps } from \"./types\";\n\nexport const DevicesIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = \"currentColor\", ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 24 24\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          fill={color}\n          d=\"M22.265 9.51L17.265 9.5C16.715 9.5 16.265 9.95 16.265 10.5V19.5C16.265 20.05 16.715 20.5 17.265 20.5H22.265C22.815 20.5 23.265 20.05 23.265 19.5V10.5C23.265 9.95 22.815 9.51 22.265 9.51ZM22.265 19.5H17.265V10.5H19.5H22.265V19.5ZM20.265 1.5H2.26499C1.15499 1.5 0.264988 2.39 0.264988 3.5V15.5C0.264988 16.6 1.15499 17.5 2.26499 17.5H10.5V19.5H7.26499V20.5H15.265V19.5H12.5V17.5H15.265V16.5H1.26499V2.5H21.265V8.5H22.265V3.5C22.265 2.39 21.365 1.5 20.265 1.5Z\"\n        />\n      </svg>\n    );\n  }\n);\n\nDevicesIcon.displayName = \"DevicesIcon\";\n", "import * as React from \"react\";\nimport { IconProps } from \"./types\";\n\nexport const TabletIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = \"currentColor\", ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 24 24\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          fill={color}\n          d=\"M20 0H6C4.34 0 4 0.84 4 2.5V20.5C4 22.16 5.34 23.5 7 23.5H19C20.66 23.5 22 22.16 22 20.5V2.5C22 0.84 21.66 0 20 0ZM15 22.5H13H11V22H13H15V22.5ZM21 21H13H5V10.5V1H13H21V21Z\"\n        />\n      </svg>\n    );\n  }\n);\n\nTabletIcon.displayName = \"TabletIcon\";\n", "import { styled } from \"../stitches.config\";\n\nexport const TextField = styled(\"input\", {\n  // Reset\n  appearance: \"none\",\n  borderWidth: \"0\",\n  boxSizing: \"border-box\",\n  fontFamily: \"inherit\",\n  margin: \"0\",\n  outline: \"none\",\n  padding: \"0\",\n  width: \"100%\",\n  WebkitTapHighlightColor: \"rgba(0,0,0,0)\",\n  \"&::before\": {\n    boxSizing: \"border-box\",\n  },\n  \"&::after\": {\n    boxSizing: \"border-box\",\n  },\n\n  // Custom\n  backgroundColor: \"$loContrast\",\n  boxShadow: \"inset 0 0 0 1px $colors$slate7\",\n  color: \"$hiContrast\",\n  fontVariantNumeric: \"tabular-nums\",\n\n  \"&:-webkit-autofill\": {\n    boxShadow: \"inset 0 0 0 1px $colors$blue6, inset 0 0 0 100px $colors$blue3\",\n  },\n\n  \"&:-webkit-autofill::first-line\": {\n    fontFamily: \"$untitled\",\n    color: \"$hiContrast\",\n  },\n\n  \"&:focus\": {\n    boxShadow:\n      \"inset 0px 0px 0px 1px $colors$blue8, 0px 0px 0px 1px $colors$blue8\",\n    \"&:-webkit-autofill\": {\n      boxShadow:\n        \"inset 0px 0px 0px 1px $colors$blue8, 0px 0px 0px 1px $colors$blue8, inset 0 0 0 100px $colors$blue3\",\n    },\n  },\n  \"&::placeholder\": {\n    color: \"$slate9\",\n  },\n  \"&:disabled\": {\n    pointerEvents: \"none\",\n    backgroundColor: \"$slate2\",\n    color: \"$slate8\",\n    cursor: \"not-allowed\",\n    \"&::placeholder\": {\n      color: \"$slate7\",\n    },\n  },\n  \"&:read-only\": {\n    backgroundColor: \"$slate2\",\n    \"&:focus\": {\n      boxShadow: \"inset 0px 0px 0px 1px $colors$slate7\",\n    },\n  },\n  '&[type=\"number\"]': {\n    \"&::-webkit-outer-spin-button, &::-webkit-inner-spin-button\": {\n      WebkitAppearance: \"none\",\n      MozAppearance: \"textfield\",\n      margin: 0,\n      display: \"none\",\n    },\n  },\n\n  variants: {\n    size: {\n      \"1\": {\n        borderRadius: \"$1\",\n        height: \"$5\",\n        fontSize: \"$1\",\n        px: \"$1\",\n        lineHeight: \"$sizes$5\",\n        \"&:-webkit-autofill::first-line\": {\n          fontSize: \"$1\",\n        },\n      },\n      \"2\": {\n        borderRadius: \"$2\",\n        height: \"$6\",\n        fontSize: \"$3\",\n        px: \"$2\",\n        lineHeight: \"$sizes$6\",\n        \"&:-webkit-autofill::first-line\": {\n          fontSize: \"$3\",\n        },\n      },\n    },\n    variant: {\n      ghost: {\n        boxShadow: \"none\",\n        backgroundColor: \"transparent\",\n        \"@hover\": {\n          \"&:hover\": {\n            boxShadow: \"inset 0 0 0 1px $colors$slateA7\",\n          },\n        },\n        \"&:focus\": {\n          backgroundColor: \"$loContrast\",\n          boxShadow:\n            \"inset 0px 0px 0px 1px $colors$blue8, 0px 0px 0px 1px $colors$blue8\",\n        },\n        \"&:disabled\": {\n          backgroundColor: \"transparent\",\n        },\n        \"&:read-only\": {\n          backgroundColor: \"transparent\",\n        },\n      },\n    },\n    state: {\n      invalid: {\n        boxShadow: \"inset 0 0 0 1px $colors$red7\",\n        \"&:focus\": {\n          boxShadow:\n            \"inset 0px 0px 0px 1px $colors$red8, 0px 0px 0px 1px $colors$red8\",\n        },\n      },\n      valid: {\n        boxShadow: \"inset 0 0 0 1px $colors$green7\",\n        \"&:focus\": {\n          boxShadow:\n            \"inset 0px 0px 0px 1px $colors$green8, 0px 0px 0px 1px $colors$green8\",\n        },\n      },\n    },\n    cursor: {\n      default: {\n        cursor: \"default\",\n        \"&:focus\": {\n          cursor: \"text\",\n        },\n      },\n      text: {\n        cursor: \"text\",\n      },\n    },\n  },\n  defaultVariants: {\n    size: \"1\",\n  },\n});\n", "import { styled } from \"../stitches.config\";\n\nexport const Flex = styled(\"div\", {\n  boxSizing: \"border-box\",\n  display: \"flex\",\n\n  variants: {\n    direction: {\n      row: {\n        flexDirection: \"row\",\n      },\n      column: {\n        flexDirection: \"column\",\n      },\n      rowReverse: {\n        flexDirection: \"row-reverse\",\n      },\n      columnReverse: {\n        flexDirection: \"column-reverse\",\n      },\n    },\n    align: {\n      start: {\n        alignItems: \"flex-start\",\n      },\n      center: {\n        alignItems: \"center\",\n      },\n      end: {\n        alignItems: \"flex-end\",\n      },\n      stretch: {\n        alignItems: \"stretch\",\n      },\n      baseline: {\n        alignItems: \"baseline\",\n      },\n    },\n    justify: {\n      start: {\n        justifyContent: \"flex-start\",\n      },\n      center: {\n        justifyContent: \"center\",\n      },\n      end: {\n        justifyContent: \"flex-end\",\n      },\n      between: {\n        justifyContent: \"space-between\",\n      },\n    },\n    wrap: {\n      noWrap: {\n        flexWrap: \"nowrap\",\n      },\n      wrap: {\n        flexWrap: \"wrap\",\n      },\n      wrapReverse: {\n        flexWrap: \"wrap-reverse\",\n      },\n    },\n    gap: {\n      1: {\n        gap: \"$1\",\n      },\n      2: {\n        gap: \"$2\",\n      },\n      3: {\n        gap: \"$3\",\n      },\n      4: {\n        gap: \"$4\",\n      },\n      5: {\n        gap: \"$5\",\n      },\n      6: {\n        gap: \"$6\",\n      },\n      7: {\n        gap: \"$7\",\n      },\n      8: {\n        gap: \"$8\",\n      },\n      9: {\n        gap: \"$9\",\n      },\n    },\n  },\n  defaultVariants: {\n    direction: \"row\",\n    align: \"stretch\",\n    justify: \"start\",\n    wrap: \"noWrap\",\n  },\n});\n", "import { styled } from \"../stitches.config\";\n\nexport const Grid = styled(\"div\", {\n  boxSizing: \"border-box\",\n  display: \"grid\",\n\n  variants: {\n    align: {\n      start: {\n        alignItems: \"start\",\n      },\n      center: {\n        alignItems: \"center\",\n      },\n      end: {\n        alignItems: \"end\",\n      },\n      stretch: {\n        alignItems: \"stretch\",\n      },\n      baseline: {\n        alignItems: \"baseline\",\n      },\n    },\n    justify: {\n      start: {\n        justifyContent: \"start\",\n      },\n      center: {\n        justifyContent: \"center\",\n      },\n      end: {\n        justifyContent: \"end\",\n      },\n      between: {\n        justifyContent: \"space-between\",\n      },\n    },\n    flow: {\n      row: {\n        gridAutoFlow: \"row\",\n      },\n      column: {\n        gridAutoFlow: \"column\",\n      },\n      dense: {\n        gridAutoFlow: \"dense\",\n      },\n      rowDense: {\n        gridAutoFlow: \"row dense\",\n      },\n      columnDense: {\n        gridAutoFlow: \"column dense\",\n      },\n    },\n    columns: {\n      1: {\n        gridTemplateColumns: \"repeat(1, 1fr)\",\n      },\n      2: {\n        gridTemplateColumns: \"repeat(2, 1fr)\",\n      },\n      3: {\n        gridTemplateColumns: \"repeat(3, 1fr)\",\n      },\n      4: {\n        gridTemplateColumns: \"repeat(4, 1fr)\",\n      },\n    },\n    gap: {\n      1: {\n        gap: \"$1\",\n      },\n      2: {\n        gap: \"$2\",\n      },\n      3: {\n        gap: \"$3\",\n      },\n      4: {\n        gap: \"$4\",\n      },\n      5: {\n        gap: \"$5\",\n      },\n      6: {\n        gap: \"$6\",\n      },\n      7: {\n        gap: \"$7\",\n      },\n      8: {\n        gap: \"$8\",\n      },\n      9: {\n        gap: \"$9\",\n      },\n    },\n    gapX: {\n      1: {\n        columnGap: \"$1\",\n      },\n      2: {\n        columnGap: \"$2\",\n      },\n      3: {\n        columnGap: \"$3\",\n      },\n      4: {\n        columnGap: \"$4\",\n      },\n      5: {\n        columnGap: \"$5\",\n      },\n      6: {\n        columnGap: \"$6\",\n      },\n      7: {\n        columnGap: \"$7\",\n      },\n      8: {\n        columnGap: \"$8\",\n      },\n      9: {\n        columnGap: \"$9\",\n      },\n    },\n    gapY: {\n      1: {\n        rowGap: \"$1\",\n      },\n      2: {\n        rowGap: \"$2\",\n      },\n      3: {\n        rowGap: \"$3\",\n      },\n      4: {\n        rowGap: \"$4\",\n      },\n      5: {\n        rowGap: \"$5\",\n      },\n      6: {\n        rowGap: \"$6\",\n      },\n      7: {\n        rowGap: \"$7\",\n      },\n      8: {\n        rowGap: \"$8\",\n      },\n      9: {\n        rowGap: \"$9\",\n      },\n    },\n  },\n});\n", "import React from \"react\";\nimport { styled, CSS } from \"../stitches.config\";\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\";\n\nexport const Tabs = styled(TabsPrimitive.Root, {\n  display: \"flex\",\n  '&[data-orientation=\"horizontal\"]': {\n    flexDirection: \"column\",\n  },\n});\n\nexport const TabsTrigger = styled(TabsPrimitive.Trigger, {\n  flexShrink: 0,\n  size: \"$6\",\n  display: \"inline-flex\",\n  lineHeight: 1,\n  fontFamily: \"inherit\",\n  fontSize: \"$1\",\n  px: \"$2\",\n  userSelect: \"none\",\n  outline: \"none\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n  color: \"$slate11\",\n  border: \"none\",\n  borderBottom: \"1px solid transparent\",\n  borderTopLeftRadius: \"$2\",\n  borderTopRightRadius: \"$2\",\n  zIndex: \"10\",\n  backgroundColor: \"transparent\",\n\n  \"@hover\": {\n    \"&:hover\": {\n      color: \"$hiContrast\",\n    },\n  },\n\n  '&[data-state=\"active\"]': {\n    color: \"$hiContrast\",\n    borderColor: \"$slate6\",\n  },\n\n  '&[data-orientation=\"vertical\"]': {\n    justifyContent: \"flex-start\",\n    borderTopRightRadius: 0,\n    borderBottomLeftRadius: \"$2\",\n    borderBottomColor: \"transparent\",\n\n    '&[data-state=\"active\"]': {\n      borderBottomColor: \"$slate6\",\n      borderRightColor: \"transparent\",\n    },\n  },\n});\n\nconst StyledTabsList = styled(TabsPrimitive.List, {\n  flexShrink: 0,\n  display: \"flex\",\n  \"&:focus\": {\n    outline: \"none\",\n    boxShadow: \"inset 0 0 0 1px $slate8, 0 0 0 1px $slate8\",\n  },\n  '&[data-orientation=\"vertical\"]': {\n    flexDirection: \"column\",\n    boxShadow: \"inset -1px 0 0 $slate6\",\n  },\n});\n\ntype TabsListPrimitiveProps = React.ComponentProps<typeof TabsPrimitive.List>;\ntype TabsListProps = TabsListPrimitiveProps & { css?: CSS };\n\nexport const TabsList = React.forwardRef<\n  React.ElementRef<typeof StyledTabsList>,\n  TabsListProps\n>((props, forwardedRef) => (\n  <>\n    <StyledTabsList {...props} ref={forwardedRef} />\n  </>\n));\n\nTabsList.displayName = \"TabsList\";\n\nexport const TabsContent = styled(TabsPrimitive.Content, {\n  flexGrow: 1,\n  \"&:focus\": {\n    outline: \"none\",\n    boxShadow: \"inset 0 0 0 1px $slate8, 0 0 0 1px $slate8\",\n  },\n  '&[data-state=\"inactive\"]': {\n    display: \"none\",\n  },\n});\n", "// @todo this should be a local customization in sidebar left, not a reusable component\nimport React from \"react\";\nimport { CSS, styled } from \"../stitches.config\";\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\";\n\nexport const SidebarTabs = styled(TabsPrimitive.Root, {\n  display: \"flex\",\n  flexDirection: \"column\",\n  alignItems: \"center\",\n});\n\nexport const SidebarTabsTrigger = styled(TabsPrimitive.Trigger, {\n  flexShrink: 0,\n  display: \"flex\",\n  size: \"$6\",\n  m: 0,\n  userSelect: \"none\",\n  outline: \"none\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n  color: \"$slate11\",\n  border: \"1px solid transparent\",\n  zIndex: \"10\",\n  backgroundColor: \"transparent\",\n\n  \"@hover\": {\n    \"&:hover\": {\n      backgroundColor: \"$slateA3\",\n      color: \"$hiContrast\",\n    },\n  },\n\n  '&[data-state=\"active\"]': {\n    color: \"$hiContrast\",\n    backgroundColor: \"$slateA4\",\n    borderColor: \"$slate6\",\n  },\n});\n\nconst StyledTabsList = styled(TabsPrimitive.List, {\n  flexShrink: 0,\n  display: \"flex\",\n  flexDirection: \"column\",\n  alignItems: \"center\",\n  \"&:focus\": {\n    outline: \"none\",\n    boxShadow: \"inset 0 0 0 1px $slate8, 0 0 0 1px $slate8\",\n  },\n  '&[data-orientation=\"vertical\"]': {\n    boxShadow: \"inset -1px 0 0 $slate6\",\n  },\n});\n\ntype TabsListPrimitiveProps = React.ComponentProps<typeof TabsPrimitive.List>;\ntype TabsListProps = TabsListPrimitiveProps & { css?: CSS };\n\nexport const SidebarTabsList = React.forwardRef<\n  React.ElementRef<typeof StyledTabsList>,\n  TabsListProps\n>((props, forwardedRef) => (\n  <>\n    <StyledTabsList {...props} ref={forwardedRef} />\n  </>\n));\n\nSidebarTabsList.displayName = \"SidebarTabsList\";\n\nexport const SidebarTabsContent = styled(TabsPrimitive.Content, {\n  flexGrow: 1,\n  position: \"absolute\",\n  top: 0,\n  left: \"100%\",\n  width: 400,\n  height: \"100%\",\n  bc: \"$loContrast\",\n  outline: \"1px solid $slate6\",\n  \"&:focus\": {\n    outline: \"none\",\n    boxShadow: \"inset 0 0 0 1px $slate8, 0 0 0 1px $slate8\",\n  },\n});\n", "import { styled } from \"../stitches.config\";\n\nexport const Card = styled(\"div\", {\n  appearance: \"none\",\n  border: \"none\",\n  boxSizing: \"border-box\",\n  font: \"inherit\",\n  lineHeight: \"1\",\n  outline: \"none\",\n  textAlign: \"inherit\",\n  verticalAlign: \"middle\",\n  WebkitTapHighlightColor: \"rgba(0, 0, 0, 0)\",\n  backgroundColor: \"$panel\",\n  display: \"block\",\n  textDecoration: \"none\",\n  color: \"inherit\",\n  flexShrink: 0,\n  borderRadius: \"$3\",\n  position: \"relative\",\n\n  \"&::before\": {\n    boxSizing: \"border-box\",\n    content: '\"\"',\n    position: \"absolute\",\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0,\n    boxShadow: \"inset 0 0 0 1px rgba(0,0,0,.1)\",\n    borderRadius: \"$3\",\n    pointerEvents: \"none\",\n  },\n\n  variants: {\n    size: {\n      1: {\n        width: \"$10\",\n        padding: \"$5\",\n      },\n      2: {\n        width: \"$12\",\n        padding: \"$7\",\n      },\n    },\n    variant: {\n      interactive: {\n        \"@hover\": {\n          \"&:hover\": {\n            \"&::before\": {\n              boxShadow: \"inset 0 0 0 1px rgba(0,0,0,.2)\",\n            },\n          },\n        },\n        \"&:focus\": {\n          \"&::before\": {\n            boxShadow: \"inset 0 0 0 1px $colors$blue8, 0 0 0 1px $colors$blue8\",\n          },\n        },\n      },\n      ghost: {\n        backgroundColor: \"transparent\",\n        transition:\n          \"transform 200ms cubic-bezier(0.22, 1, 0.36, 1), background-color 25ms linear\",\n        willChange: \"transform\",\n        \"&::before\": {\n          boxShadow:\n            \"0px 10px 38px -10px rgba(22, 23, 24, 0.35), 0px 10px 20px -15px rgba(22, 23, 24, 0.2)\",\n          opacity: \"0\",\n          transition: \"all 200ms cubic-bezier(0.22, 1, 0.36, 1)\",\n        },\n        \"@hover\": {\n          \"&:hover\": {\n            backgroundColor: \"$panel\",\n            transform: \"translateY(-2px)\",\n            \"&::before\": {\n              opacity: \"1\",\n            },\n          },\n        },\n        \"&:active\": {\n          transform: \"translateY(0)\",\n          transition: \"none\",\n          \"&::before\": {\n            boxShadow:\n              \"0px 5px 16px -5px rgba(22, 23, 24, 0.35), 0px 5px 10px -7px rgba(22, 23, 24, 0.2)\",\n            opacity: \"1\",\n          },\n        },\n        \"&:focus\": {\n          boxShadow: \"inset 0 0 0 1px $colors$blue8, 0 0 0 1px $colors$blue8\",\n        },\n      },\n      active: {\n        transform: \"translateY(0)\",\n        transition: \"none\",\n        \"&::before\": {\n          boxShadow:\n            \"0px 5px 16px -5px rgba(22, 23, 24, 0.35), 0px 5px 10px -7px rgba(22, 23, 24, 0.2)\",\n          opacity: \"1\",\n        },\n        \"&:focus\": {\n          boxShadow: \"inset 0 0 0 1px $colors$blue8, 0 0 0 1px $colors$blue8\",\n        },\n      },\n    },\n  },\n  defaultVariants: {\n    size: \"1\",\n  },\n});\n", "import { styled } from \"../stitches.config\";\nimport * as TogglePrimitive from \"@radix-ui/react-toggle\";\n\nexport const SimpleToggle = styled(TogglePrimitive.Root, {\n  // Reset\n  alignItems: \"center\",\n  appearance: \"none\",\n  borderWidth: \"0\",\n  boxSizing: \"border-box\",\n  display: \"inline-flex\",\n  flexShrink: 0,\n  fontFamily: \"inherit\",\n  fontSize: \"14px\",\n  justifyContent: \"center\",\n  lineHeight: \"1\",\n  outline: \"none\",\n  padding: \"0\",\n  textDecoration: \"none\",\n  userSelect: \"none\",\n  WebkitTapHighlightColor: \"transparent\",\n  color: \"$hiContrast\",\n  \"&::before\": {\n    boxSizing: \"border-box\",\n  },\n  \"&::after\": {\n    boxSizing: \"border-box\",\n  },\n  height: \"$5\",\n  width: \"$5\",\n  backgroundColor: \"transparent\",\n  \"@hover\": {\n    \"&:hover\": {\n      backgroundColor: \"$slateA3\",\n    },\n  },\n  \"&:active\": {\n    backgroundColor: \"$slateA4\",\n  },\n  \"&:focus\": {\n    boxShadow: \"inset 0 0 0 1px $slateA8, 0 0 0 1px $slateA8\",\n    zIndex: 1,\n  },\n\n  '&[data-state=\"on\"]': {\n    backgroundColor: \"$slateA5\",\n    \"@hover\": {\n      \"&:hover\": {\n        backgroundColor: \"$slateA5\",\n      },\n    },\n    \"&:active\": {\n      backgroundColor: \"$slateA7\",\n    },\n  },\n\n  variants: {\n    shape: {\n      circle: {\n        borderRadius: \"$round\",\n      },\n      square: {\n        borderRadius: \"$1\",\n      },\n    },\n  },\n});\n", "import { styled } from \"../stitches.config\";\n\nexport const Box = styled(\"div\", {\n  // Reset\n  boxSizing: \"border-box\",\n});\n", "import React from \"react\";\nimport { styled } from \"../stitches.config\";\nimport * as TooltipPrimitive from \"@radix-ui/react-tooltip\";\nimport { Box } from \"./box\";\nimport { Text } from \"./text\";\n\ntype TooltipProps = React.ComponentProps<typeof TooltipPrimitive.Root> &\n  React.ComponentProps<typeof TooltipPrimitive.Content> & {\n    children: React.ReactElement;\n    content: React.ReactNode;\n    multiline?: boolean;\n    delayDuration?: number;\n  };\n\nconst Content = styled(TooltipPrimitive.Content, {\n  backgroundColor: \"$loContrast\",\n  boxShadow: \"inset 0 0 0 1px $colors$slate7\",\n  color: \"$hiContrast\",\n  borderRadius: \"$1\",\n  padding: \"$1 $2\",\n\n  variants: {\n    multiline: {\n      true: {\n        maxWidth: 250,\n        pb: 7,\n      },\n    },\n  },\n});\n\nexport const Tooltip = ({\n  children,\n  content,\n  open,\n  defaultOpen,\n  onOpenChange,\n  multiline,\n  delayDuration,\n  ...props\n}: TooltipProps) => {\n  return (\n    <TooltipPrimitive.Root\n      open={open}\n      defaultOpen={defaultOpen}\n      onOpenChange={onOpenChange}\n      delayDuration={delayDuration}\n    >\n      <TooltipPrimitive.Trigger asChild>{children}</TooltipPrimitive.Trigger>\n\n      <Content\n        side=\"top\"\n        align=\"center\"\n        sideOffset={5}\n        {...props}\n        multiline={multiline}\n      >\n        <Text\n          size=\"1\"\n          as=\"p\"\n          css={{\n            color: \"currentColor\",\n            lineHeight: multiline ? \"$5\" : undefined,\n          }}\n        >\n          {content}\n        </Text>\n        <Box css={{ color: \"$transparentExtreme\" }}>\n          <TooltipPrimitive.Arrow\n            offset={5}\n            width={11}\n            height={5}\n            style={{\n              fill: \"$loContrast\",\n            }}\n          />\n        </Box>\n      </Content>\n    </TooltipPrimitive.Root>\n  );\n};\n", "import { styled } from \"../stitches.config\";\n\nexport const Button = styled(\"button\", {\n  // Reset\n  all: \"unset\",\n  alignItems: \"center\",\n  boxSizing: \"border-box\",\n  userSelect: \"none\",\n  \"&::before\": {\n    boxSizing: \"border-box\",\n  },\n  \"&::after\": {\n    boxSizing: \"border-box\",\n  },\n\n  // Custom reset?\n  display: \"inline-flex\",\n  flexShrink: 0,\n  justifyContent: \"center\",\n  lineHeight: \"1\",\n  WebkitTapHighlightColor: \"rgba(0,0,0,0)\",\n\n  // Custom\n  height: \"$5\",\n  px: \"$2\",\n  fontFamily: \"$untitled\",\n  fontSize: \"$2\",\n  fontWeight: 500,\n  fontVariantNumeric: \"tabular-nums\",\n\n  \"&:disabled\": {\n    backgroundColor: \"$slate2\",\n    boxShadow: \"inset 0 0 0 1px $colors$slate7\",\n    color: \"$slate8\",\n    pointerEvents: \"none\",\n  },\n\n  variants: {\n    size: {\n      \"1\": {\n        borderRadius: \"$1\",\n        height: \"$5\",\n        px: \"$2\",\n        fontSize: \"$1\",\n        lineHeight: \"$sizes$5\",\n      },\n      \"2\": {\n        borderRadius: \"$2\",\n        height: \"$6\",\n        px: \"$3\",\n        fontSize: \"$3\",\n        lineHeight: \"$sizes$6\",\n      },\n      \"3\": {\n        borderRadius: \"$2\",\n        height: \"$7\",\n        px: \"$4\",\n        fontSize: \"$4\",\n        lineHeight: \"$sizes$7\",\n      },\n    },\n    variant: {\n      gray: {\n        backgroundColor: \"$loContrast\",\n        boxShadow: \"inset 0 0 0 1px $colors$slate7\",\n        color: \"$hiContrast\",\n        \"@hover\": {\n          \"&:hover\": {\n            boxShadow: \"inset 0 0 0 1px $colors$slate8\",\n          },\n        },\n        \"&:active\": {\n          backgroundColor: \"$slate2\",\n          boxShadow: \"inset 0 0 0 1px $colors$slate8\",\n        },\n        \"&:focus\": {\n          boxShadow: \"inset 0 0 0 1px $colors$slate8, 0 0 0 1px $colors$slate8\",\n        },\n        '&[data-state=\"open\"]': {\n          backgroundColor: \"$slate4\",\n          boxShadow: \"inset 0 0 0 1px $colors$slate8\",\n        },\n      },\n      blue: {\n        backgroundColor: \"$blue2\",\n        boxShadow: \"inset 0 0 0 1px $colors$blue7\",\n        color: \"$blue11\",\n        \"@hover\": {\n          \"&:hover\": {\n            boxShadow: \"inset 0 0 0 1px $colors$blue8\",\n          },\n        },\n        \"&:active\": {\n          backgroundColor: \"$blue3\",\n          boxShadow: \"inset 0 0 0 1px $colors$blue8\",\n        },\n        \"&:focus\": {\n          boxShadow: \"inset 0 0 0 1px $colors$blue8, 0 0 0 1px $colors$blue8\",\n        },\n        '&[data-state=\"open\"]': {\n          backgroundColor: \"$blue4\",\n          boxShadow: \"inset 0 0 0 1px $colors$blue8\",\n        },\n      },\n      green: {\n        backgroundColor: \"$green2\",\n        boxShadow: \"inset 0 0 0 1px $colors$green7\",\n        color: \"$green11\",\n        \"@hover\": {\n          \"&:hover\": {\n            boxShadow: \"inset 0 0 0 1px $colors$green8\",\n          },\n        },\n        \"&:active\": {\n          backgroundColor: \"$green3\",\n          boxShadow: \"inset 0 0 0 1px $colors$green8\",\n        },\n        \"&:focus\": {\n          boxShadow: \"inset 0 0 0 1px $colors$green8, 0 0 0 1px $colors$green8\",\n        },\n        '&[data-state=\"open\"]': {\n          backgroundColor: \"$green4\",\n          boxShadow: \"inset 0 0 0 1px $colors$green8\",\n        },\n      },\n      red: {\n        backgroundColor: \"$loContrast\",\n        boxShadow: \"inset 0 0 0 1px $colors$slate7\",\n        color: \"$red11\",\n        \"@hover\": {\n          \"&:hover\": {\n            boxShadow: \"inset 0 0 0 1px $colors$slate8\",\n          },\n        },\n        \"&:active\": {\n          backgroundColor: \"$red3\",\n          boxShadow: \"inset 0 0 0 1px $colors$red8\",\n        },\n        \"&:focus\": {\n          boxShadow: \"inset 0 0 0 1px $colors$red8, 0 0 0 1px $colors$red8\",\n        },\n        '&[data-state=\"open\"]': {\n          backgroundColor: \"$red4\",\n          boxShadow: \"inset 0 0 0 1px $colors$red8\",\n        },\n      },\n      transparentWhite: {\n        backgroundColor: \"hsla(0,100%,100%,.2)\",\n        color: \"white\",\n        \"@hover\": {\n          \"&:hover\": {\n            backgroundColor: \"hsla(0,100%,100%,.25)\",\n          },\n        },\n        \"&:active\": {\n          backgroundColor: \"hsla(0,100%,100%,.3)\",\n        },\n        \"&:focus\": {\n          boxShadow:\n            \"inset 0 0 0 1px hsla(0,100%,100%,.35), 0 0 0 1px hsla(0,100%,100%,.35)\",\n        },\n      },\n      raw: {\n        background: \"transparent\",\n        color: \"inherit\",\n        padding: 0,\n        borderRadius: 0,\n        height: \"auto\",\n      },\n      transparentBlack: {\n        backgroundColor: \"hsla(0,0%,0%,.2)\",\n        color: \"black\",\n        \"@hover\": {\n          \"&:hover\": {\n            backgroundColor: \"hsla(0,0%,0%,.25)\",\n          },\n        },\n        \"&:active\": {\n          backgroundColor: \"hsla(0,0%,0%,.3)\",\n        },\n        \"&:focus\": {\n          boxShadow:\n            \"inset 0 0 0 1px hsla(0,0%,0%,.35), 0 0 0 1px hsla(0,0%,0%,.35)\",\n        },\n      },\n    },\n    state: {\n      active: {\n        backgroundColor: \"$slate4\",\n        boxShadow: \"inset 0 0 0 1px $colors$slate8\",\n        color: \"$slate11\",\n        \"@hover\": {\n          \"&:hover\": {\n            backgroundColor: \"$slate5\",\n            boxShadow: \"inset 0 0 0 1px $colors$slate8\",\n          },\n        },\n        \"&:active\": {\n          backgroundColor: \"$slate5\",\n        },\n        \"&:focus\": {\n          boxShadow: \"inset 0 0 0 1px $colors$slate8, 0 0 0 1px $colors$slate8\",\n        },\n      },\n      waiting: {\n        backgroundColor: \"$slate4\",\n        boxShadow: \"inset 0 0 0 1px $colors$slate8\",\n        color: \"transparent\",\n        pointerEvents: \"none\",\n        \"@hover\": {\n          \"&:hover\": {\n            backgroundColor: \"$slate5\",\n            boxShadow: \"inset 0 0 0 1px $colors$slate8\",\n          },\n        },\n        \"&:active\": {\n          backgroundColor: \"$slate5\",\n        },\n        \"&:focus\": {\n          boxShadow: \"inset 0 0 0 1px $colors$slate8\",\n        },\n      },\n    },\n    ghost: {\n      true: {\n        backgroundColor: \"transparent\",\n        boxShadow: \"none\",\n      },\n    },\n  },\n  compoundVariants: [\n    {\n      variant: \"gray\",\n      ghost: \"true\",\n      css: {\n        backgroundColor: \"transparent\",\n        color: \"$hiContrast\",\n        \"@hover\": {\n          \"&:hover\": {\n            backgroundColor: \"$slateA3\",\n            boxShadow: \"none\",\n          },\n        },\n        \"&:active\": {\n          backgroundColor: \"$slateA4\",\n        },\n        \"&:focus\": {\n          boxShadow:\n            \"inset 0 0 0 1px $colors$slateA8, 0 0 0 1px $colors$slateA8\",\n        },\n        '&[data-state=\"open\"]': {\n          backgroundColor: \"$slateA4\",\n          boxShadow: \"none\",\n        },\n      },\n    },\n    {\n      variant: \"blue\",\n      ghost: \"true\",\n      css: {\n        backgroundColor: \"transparent\",\n        \"@hover\": {\n          \"&:hover\": {\n            backgroundColor: \"$blueA3\",\n            boxShadow: \"none\",\n          },\n        },\n        \"&:active\": {\n          backgroundColor: \"$blueA4\",\n        },\n        \"&:focus\": {\n          boxShadow: \"inset 0 0 0 1px $colors$blueA8, 0 0 0 1px $colors$blueA8\",\n        },\n        '&[data-state=\"open\"]': {\n          backgroundColor: \"$blueA4\",\n          boxShadow: \"none\",\n        },\n      },\n    },\n    {\n      variant: \"green\",\n      ghost: \"true\",\n      css: {\n        backgroundColor: \"transparent\",\n        \"@hover\": {\n          \"&:hover\": {\n            backgroundColor: \"$greenA3\",\n            boxShadow: \"none\",\n          },\n        },\n        \"&:active\": {\n          backgroundColor: \"$greenA4\",\n        },\n        \"&:focus\": {\n          boxShadow:\n            \"inset 0 0 0 1px $colors$greenA8, 0 0 0 1px $colors$greenA8\",\n        },\n        '&[data-state=\"open\"]': {\n          backgroundColor: \"$greenA4\",\n          boxShadow: \"none\",\n        },\n      },\n    },\n    {\n      variant: \"red\",\n      ghost: \"true\",\n      css: {\n        backgroundColor: \"transparent\",\n        \"@hover\": {\n          \"&:hover\": {\n            backgroundColor: \"$redA3\",\n            boxShadow: \"none\",\n          },\n        },\n        \"&:active\": {\n          backgroundColor: \"$redA4\",\n        },\n        \"&:focus\": {\n          boxShadow: \"inset 0 0 0 1px $colors$redA8, 0 0 0 1px $colors$redA8\",\n        },\n        '&[data-state=\"open\"]': {\n          backgroundColor: \"$redA4\",\n          boxShadow: \"none\",\n        },\n      },\n    },\n  ],\n  defaultVariants: {\n    size: \"1\",\n    variant: \"gray\",\n  },\n});\n", "import { styled } from \"../stitches.config\";\n\nexport const IconButton = styled(\"button\", {\n  // Reset\n  alignItems: \"center\",\n  appearance: \"none\",\n  borderWidth: \"0\",\n  boxSizing: \"border-box\",\n  display: \"inline-flex\",\n  flexShrink: 0,\n  fontFamily: \"inherit\",\n  fontSize: \"14px\",\n  justifyContent: \"center\",\n  lineHeight: \"1\",\n  outline: \"none\",\n  padding: \"0\",\n  textDecoration: \"none\",\n  userSelect: \"none\",\n  WebkitTapHighlightColor: \"transparent\",\n  color: \"$hiContrast\",\n  \"&::before\": {\n    boxSizing: \"border-box\",\n  },\n  \"&::after\": {\n    boxSizing: \"border-box\",\n  },\n  backgroundColor: \"$loContrast\",\n  border: \"1px solid $slate7\",\n  \"@hover\": {\n    \"&:hover\": {\n      borderColor: \"$slate8\",\n    },\n  },\n  \"&:active\": {\n    backgroundColor: \"$slate2\",\n  },\n  \"&:focus\": {\n    borderColor: \"$slate8\",\n    boxShadow: \"0 0 0 1px $colors$slate8\",\n  },\n  \"&:disabled\": {\n    pointerEvents: \"none\",\n    backgroundColor: \"transparent\",\n    color: \"$slate6\",\n  },\n\n  variants: {\n    size: {\n      \"1\": {\n        borderRadius: \"$1\",\n        height: \"$5\",\n        width: \"$5\",\n      },\n      \"2\": {\n        borderRadius: \"$2\",\n        height: \"$6\",\n        width: \"$6\",\n      },\n      \"3\": {\n        borderRadius: \"$2\",\n        height: \"$7\",\n        width: \"$7\",\n      },\n      \"4\": {\n        borderRadius: \"$3\",\n        height: \"$8\",\n        width: \"$8\",\n      },\n    },\n    variant: {\n      ghost: {\n        backgroundColor: \"transparent\",\n        borderWidth: \"0\",\n        \"@hover\": {\n          \"&:hover\": {\n            backgroundColor: \"$slateA3\",\n          },\n        },\n        \"&:focus\": {\n          boxShadow:\n            \"inset 0 0 0 1px $colors$slateA8, 0 0 0 1px $colors$slateA8\",\n        },\n        \"&:active\": {\n          backgroundColor: \"$slateA4\",\n        },\n        '&[data-state=\"open\"]': {\n          backgroundColor: \"$slateA4\",\n        },\n      },\n      raised: {\n        boxShadow:\n          \"0 0 transparent, 0 16px 32px hsl(206deg 12% 5% / 25%), 0 3px 5px hsl(0deg 0% 0% / 10%)\",\n        \"@hover\": {\n          \"&:hover\": {\n            boxShadow:\n              \"0 0 transparent, 0 16px 32px hsl(206deg 12% 5% / 25%), 0 3px 5px hsl(0deg 0% 0% / 10%)\",\n          },\n        },\n        \"&:focus\": {\n          borderColor: \"$slate8\",\n          boxShadow:\n            \"0 0 0 1px $colors$slate8, 0 16px 32px hsl(206deg 12% 5% / 25%), 0 3px 5px hsl(0deg 0% 0% / 10%)\",\n        },\n        \"&:active\": {\n          backgroundColor: \"$slate4\",\n        },\n      },\n    },\n    state: {\n      active: {\n        backgroundColor: \"$slate4\",\n        boxShadow: \"inset 0 0 0 1px hsl(206,10%,76%)\",\n        \"@hover\": {\n          \"&:hover\": {\n            boxShadow: \"inset 0 0 0 1px hsl(206,10%,76%)\",\n          },\n        },\n        \"&:active\": {\n          backgroundColor: \"$slate4\",\n        },\n      },\n      waiting: {\n        backgroundColor: \"$slate4\",\n        boxShadow: \"inset 0 0 0 1px hsl(206,10%,76%)\",\n        \"@hover\": {\n          \"&:hover\": {\n            boxShadow: \"inset 0 0 0 1px hsl(206,10%,76%)\",\n          },\n        },\n        \"&:active\": {\n          backgroundColor: \"$slate4\",\n        },\n      },\n    },\n  },\n  defaultVariants: {\n    size: \"1\",\n    variant: \"ghost\",\n  },\n});\n", "import React from \"react\";\nimport { styled, CSS } from \"../stitches.config\";\nimport * as PopoverPrimitive from \"@radix-ui/react-popover\";\nimport { Box } from \"./box\";\nimport { panelStyles } from \"./panel\";\n\ntype PopoverProps = React.ComponentProps<typeof PopoverPrimitive.Root> & {\n  children: React.ReactNode;\n};\n\nexport const Popover = ({ children, ...props }: PopoverProps) => {\n  return <PopoverPrimitive.Root {...props}>{children}</PopoverPrimitive.Root>;\n};\n\nconst StyledContent = styled(PopoverPrimitive.Content, panelStyles, {\n  minWidth: 200,\n  minHeight: \"$6\",\n  maxWidth: 265,\n  \"&:focus\": {\n    outline: \"none\",\n  },\n});\n\ntype PopoverContentPrimitiveProps = React.ComponentProps<\n  typeof PopoverPrimitive.Content\n>;\n\ntype PopoverContentProps = PopoverContentPrimitiveProps & {\n  css?: CSS;\n  hideArrow?: boolean;\n};\n\nexport const PopoverContent = React.forwardRef<\n  React.ElementRef<typeof StyledContent>,\n  PopoverContentProps\n>(({ children, hideArrow, ...props }, fowardedRef) => (\n  <StyledContent sideOffset={0} {...props} ref={fowardedRef}>\n    {children}\n    {!hideArrow && (\n      <Box css={{ color: \"$panel\" }}>\n        <PopoverPrimitive.Arrow\n          width={11}\n          height={5}\n          offset={5}\n          style={{ fill: \"currentColor\" }}\n        />\n      </Box>\n    )}\n  </StyledContent>\n));\nPopoverContent.displayName = \"PopoverContent\";\nexport const PopoverTrigger = PopoverPrimitive.Trigger;\nexport const PopoverClose = PopoverPrimitive.Close;\n", "import { css, styled } from \"../stitches.config\";\n\nexport const panelStyles = css({\n  backgroundColor: \"$panel\",\n  borderRadius: \"$3\",\n  boxShadow:\n    \"$colors$shadowLight 0px 10px 38px -10px, $colors$shadowDark 0px 10px 20px -15px\",\n});\n\nexport const Panel = styled(\"div\", panelStyles);\n", "import React from \"react\";\nimport { Text } from \"./text\";\nimport { VariantProps, CSS } from \"../stitches.config\";\nimport merge from \"lodash.merge\";\n\nconst DEFAULT_TAG = \"h1\";\n\ntype TextSizeVariants = Pick<VariantProps<typeof Text>, \"size\">;\ntype HeadingSizeVariants = \"1\" | \"2\" | \"3\" | \"4\";\ntype HeadingVariants = { size?: HeadingSizeVariants } & Omit<\n  VariantProps<typeof Text>,\n  \"size\"\n>;\ntype HeadingProps = React.ComponentProps<typeof DEFAULT_TAG> &\n  HeadingVariants & { css?: CSS; as?: string };\n\nexport const Heading = React.forwardRef<\n  React.ElementRef<typeof DEFAULT_TAG>,\n  HeadingProps\n>((props, forwardedRef) => {\n  // '2' here is the default heading size variant\n  const { size = \"1\", ...textProps } = props;\n  // This is the mapping of Heading Variants to Text variants\n  const textSize: Record<HeadingSizeVariants, TextSizeVariants[\"size\"]> = {\n    1: { \"@initial\": \"4\", \"@bp2\": \"5\" },\n    2: { \"@initial\": \"6\", \"@bp2\": \"7\" },\n    3: { \"@initial\": \"7\", \"@bp2\": \"8\" },\n    4: { \"@initial\": \"8\", \"@bp2\": \"9\" },\n  };\n\n  // This is the mapping of Heading Variants to Text css\n  const textCss: Record<HeadingSizeVariants, CSS> = {\n    1: { fontWeight: 500, lineHeight: \"20px\", \"@bp2\": { lineHeight: \"23px\" } },\n    2: { fontWeight: 500, lineHeight: \"25px\", \"@bp2\": { lineHeight: \"30px\" } },\n    3: { fontWeight: 500, lineHeight: \"33px\", \"@bp2\": { lineHeight: \"41px\" } },\n    4: { fontWeight: 500, lineHeight: \"35px\", \"@bp2\": { lineHeight: \"55px\" } },\n  };\n\n  return (\n    <Text\n      as={DEFAULT_TAG}\n      {...textProps}\n      ref={forwardedRef}\n      size={textSize[size]}\n      css={{\n        fontVariantNumeric: \"proportional-nums\",\n        ...merge(textCss[size], props.css),\n      }}\n    />\n  );\n});\n\nHeading.displayName = \"Heading\";\n", "import React from \"react\";\nimport * as MenuPrimitive from \"@radix-ui/react-menu\";\nimport { CheckIcon } from \"apps/designer/app/shared/icons\";\nimport { styled, css, CSS } from \"../stitches.config\";\nimport { Box } from \"./box\";\nimport { Flex } from \"./flex\";\nimport { panelStyles } from \"./panel\";\n\nexport const baseItemCss = css({\n  display: \"flex\",\n  alignItems: \"center\",\n  justifyContent: \"space-between\",\n  fontFamily: \"$untitled\",\n  fontSize: \"$1\",\n  fontVariantNumeric: \"tabular-nums\",\n  lineHeight: \"1\",\n  cursor: \"default\",\n  userSelect: \"none\",\n  whiteSpace: \"nowrap\",\n  height: \"$5\",\n  px: \"$5\",\n});\n\nexport const itemCss = css(baseItemCss, {\n  position: \"relative\",\n  color: \"$hiContrast\",\n  \"&:focus, &[data-found]\": {\n    outline: \"none\",\n    backgroundColor: \"$blue9\",\n    color: \"white\",\n  },\n  \"&[data-disabled]\": {\n    color: \"$slate9\",\n  },\n});\n\nexport const labelCss = css(baseItemCss, {\n  color: \"$slate11\",\n});\n\nexport const menuCss = css({\n  boxSizing: \"border-box\",\n  minWidth: 120,\n  py: \"$1\",\n});\n\nexport const separatorCss = css({\n  height: 1,\n  my: \"$1\",\n  backgroundColor: \"$slate6\",\n});\n\nexport const Menu = styled(MenuPrimitive.Root, menuCss);\nexport const MenuContent = styled(MenuPrimitive.Content, panelStyles);\n\nexport const MenuSeparator = styled(MenuPrimitive.Separator, separatorCss);\n\nexport const MenuItem = styled(MenuPrimitive.Item, itemCss);\n\nconst StyledMenuRadioItem = styled(MenuPrimitive.RadioItem, itemCss);\n\ntype MenuRadioItemPrimitiveProps = React.ComponentProps<\n  typeof MenuPrimitive.RadioItem\n>;\ntype MenuRadioItemProps = MenuRadioItemPrimitiveProps & { css?: CSS };\n\nexport const MenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof StyledMenuRadioItem>,\n  MenuRadioItemProps\n>(({ children, ...props }, forwardedRef) => (\n  <StyledMenuRadioItem {...props} ref={forwardedRef}>\n    <Box as=\"span\" css={{ position: \"absolute\", left: \"$1\" }}>\n      <MenuPrimitive.ItemIndicator>\n        <Flex\n          css={{\n            width: \"$3\",\n            height: \"$3\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n          }}\n        >\n          <Box\n            css={{\n              width: \"$1\",\n              height: \"$1\",\n              backgroundColor: \"currentColor\",\n              borderRadius: \"$round\",\n            }}\n          ></Box>\n        </Flex>\n      </MenuPrimitive.ItemIndicator>\n    </Box>\n    {children}\n  </StyledMenuRadioItem>\n));\nMenuRadioItem.displayName = \"MenuRadioItem\";\n\nconst StyledMenuCheckboxItem = styled(MenuPrimitive.CheckboxItem, itemCss);\n\ntype MenuCheckboxItemPrimitiveProps = React.ComponentProps<\n  typeof MenuPrimitive.CheckboxItem\n>;\ntype MenuCheckboxItemProps = MenuCheckboxItemPrimitiveProps & { css?: CSS };\n\nexport const MenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof StyledMenuCheckboxItem>,\n  MenuCheckboxItemProps\n>(({ children, ...props }, forwardedRef) => (\n  <StyledMenuCheckboxItem {...props} ref={forwardedRef}>\n    <Box as=\"span\" css={{ position: \"absolute\", left: \"$1\" }}>\n      <MenuPrimitive.ItemIndicator>\n        <CheckIcon />\n      </MenuPrimitive.ItemIndicator>\n    </Box>\n    {children}\n  </StyledMenuCheckboxItem>\n));\nMenuCheckboxItem.displayName = \"MenuCheckboxItem\";\n\nexport const MenuLabel = styled(MenuPrimitive.Label, labelCss);\nexport const MenuRadioGroup = styled(MenuPrimitive.RadioGroup, {});\nexport const MenuGroup = styled(MenuPrimitive.Group, {});\nexport const MenuAnchor = MenuPrimitive.MenuAnchor;\n", "import React from \"react\";\nimport { Text } from \"./text\";\nimport { VariantProps, CSS } from \"../stitches.config\";\nimport merge from \"lodash.merge\";\n\nconst DEFAULT_TAG = \"p\";\n\ntype TextSizeVariants = Pick<VariantProps<typeof Text>, \"size\">;\ntype ParagraphSizeVariants = \"1\" | \"2\";\ntype ParagraphVariants = { size?: ParagraphSizeVariants } & Omit<\n  VariantProps<typeof Text>,\n  \"size\"\n>;\ntype ParagraphProps = React.ComponentProps<typeof DEFAULT_TAG> &\n  ParagraphVariants & { css?: CSS; as?: string };\n\nexport const Paragraph = React.forwardRef<\n  React.ElementRef<typeof DEFAULT_TAG>,\n  ParagraphProps\n>((props, forwardedRef) => {\n  // '2' here is the default Paragraph size variant\n  const { size = \"1\", ...textProps } = props;\n\n  // This is the mapping of Paragraph Variants to Text variants\n  const textSize: Record<ParagraphSizeVariants, TextSizeVariants[\"size\"]> = {\n    1: { \"@initial\": \"2\", \"@bp2\": \"4\" },\n    2: { \"@initial\": \"5\", \"@bp2\": \"6\" },\n  };\n\n  // This is the mapping of Paragraph Variants to Text css\n  const textCss: Record<ParagraphSizeVariants, CSS> = {\n    1: { lineHeight: \"25px\", \"@bp2\": { lineHeight: \"27px\" } },\n    2: {\n      color: \"$slate11\",\n      lineHeight: \"27px\",\n      \"@bp2\": { lineHeight: \"30px\" },\n    },\n  };\n  return (\n    <Text\n      as={DEFAULT_TAG}\n      {...textProps}\n      ref={forwardedRef}\n      size={textSize[size]}\n      css={{\n        ...merge(textCss[size], props.css),\n      }}\n    />\n  );\n});\n\nParagraph.displayName = \"Paragraph\";\n", "import { styled } from \"../stitches.config\";\nimport { Text } from \"./text\";\n\nexport const Link = styled(\"a\", {\n  alignItems: \"center\",\n  gap: \"$1\",\n  flexShrink: 0,\n  outline: \"none\",\n  textDecorationLine: \"none\",\n  textUnderlineOffset: \"3px\",\n  textDecorationColor: \"$slate4\",\n  WebkitTapHighlightColor: \"rgba(0,0,0,0)\",\n  lineHeight: \"inherit\",\n  \"@hover\": {\n    \"&:hover\": {\n      textDecorationLine: \"underline\",\n    },\n  },\n  \"&:focus\": {\n    outlineWidth: \"2px\",\n    outlineStyle: \"solid\",\n    outlineOffset: \"2px\",\n    textDecorationLine: \"none\",\n  },\n  [`& ${Text}`]: {\n    color: \"inherit\",\n  },\n  variants: {\n    variant: {\n      blue: {\n        color: \"$blue11\",\n        textDecorationColor: \"$blue4\",\n        \"&:focus\": {\n          outlineColor: \"$blue8\",\n        },\n      },\n      subtle: {\n        color: \"$slate11\",\n        textDecorationColor: \"$slate4\",\n        \"&:focus\": {\n          outlineColor: \"$slate8\",\n        },\n      },\n      contrast: {\n        color: \"$hiContrast\",\n        textDecoration: \"underline\",\n        textDecorationColor: \"$slate4\",\n        \"@hover\": {\n          \"&:hover\": {\n            textDecorationColor: \"$slate7\",\n          },\n        },\n        \"&:focus\": {\n          outlineColor: \"$slate8\",\n        },\n      },\n    },\n  },\n  defaultVariants: {\n    variant: \"contrast\",\n  },\n});\n", "import React from \"react\";\nimport { CheckIcon } from \"apps/designer/app/shared/icons\";\nimport { styled, CSS } from \"../stitches.config\";\nimport * as DropdownMenuPrimitive from \"@radix-ui/react-dropdown-menu\";\nimport { menuCss, separatorCss, itemCss, labelCss } from \"./menu\";\nimport { Box } from \"./box\";\nimport { Flex } from \"./flex\";\nimport { panelStyles } from \"./panel\";\n\nexport const DropdownMenu = DropdownMenuPrimitive.Root;\nexport const DropdownMenuArrow = styled(DropdownMenuPrimitive.Arrow, {\n  fill: \"$panel\",\n});\nexport const DropdownMenuTrigger = DropdownMenuPrimitive.Trigger;\nexport const DropdownMenuContent = styled(\n  DropdownMenuPrimitive.Content,\n  menuCss,\n  panelStyles\n);\nexport const DropdownMenuSeparator = styled(\n  DropdownMenuPrimitive.Separator,\n  separatorCss\n);\nexport const DropdownMenuItem = styled(DropdownMenuPrimitive.Item, itemCss);\n\nconst StyledDropdownMenuRadioItem = styled(\n  DropdownMenuPrimitive.RadioItem,\n  itemCss\n);\n\ntype DialogMenuRadioItemPrimitiveProps = React.ComponentProps<\n  typeof DropdownMenuPrimitive.RadioItem\n>;\ntype DialogMenuRadioItemProps = DialogMenuRadioItemPrimitiveProps & {\n  css?: CSS;\n};\n\nexport const DropdownMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof StyledDropdownMenuRadioItem>,\n  DialogMenuRadioItemProps\n>(({ children, ...props }, forwardedRef) => (\n  <StyledDropdownMenuRadioItem {...props} ref={forwardedRef}>\n    <Box as=\"span\" css={{ position: \"absolute\", left: \"$1\" }}>\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Flex\n          css={{\n            width: \"$3\",\n            height: \"$3\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n          }}\n        >\n          <Box\n            css={{\n              width: \"$1\",\n              height: \"$1\",\n              backgroundColor: \"currentColor\",\n              borderRadius: \"$round\",\n            }}\n          />\n        </Flex>\n      </DropdownMenuPrimitive.ItemIndicator>\n    </Box>\n    {children}\n  </StyledDropdownMenuRadioItem>\n));\n\nDropdownMenuRadioItem.displayName = \"DropdownMenuRadioItem\";\n\nconst StyledDropdownMenuCheckboxItem = styled(\n  DropdownMenuPrimitive.CheckboxItem,\n  itemCss\n);\n\ntype DialogMenuCheckboxItemPrimitiveProps = React.ComponentProps<\n  typeof DropdownMenuPrimitive.CheckboxItem\n>;\ntype DialogMenuCheckboxItemProps = DialogMenuCheckboxItemPrimitiveProps & {\n  css?: CSS;\n};\n\nexport const DropdownMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof StyledDropdownMenuCheckboxItem>,\n  DialogMenuCheckboxItemProps\n>(({ children, ...props }, forwardedRef) => (\n  <StyledDropdownMenuCheckboxItem {...props} ref={forwardedRef}>\n    <Box as=\"span\" css={{ position: \"absolute\", left: \"$1\" }}>\n      <DropdownMenuPrimitive.ItemIndicator>\n        <CheckIcon />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </Box>\n    {children}\n  </StyledDropdownMenuCheckboxItem>\n));\n\nDropdownMenuCheckboxItem.displayName = \"DropdownMenuCheckboxItem\";\n\nexport const DropdownMenuLabel = styled(DropdownMenuPrimitive.Label, labelCss);\nexport const DropdownMenuRadioGroup = styled(\n  DropdownMenuPrimitive.RadioGroup,\n  {}\n);\nexport const DropdownMenuGroup = styled(DropdownMenuPrimitive.Group, {});\n", "import React from \"react\";\nimport { styled, VariantProps, CSS } from \"../stitches.config\";\nimport * as SwitchPrimitive from \"@radix-ui/react-switch\";\n\nconst StyledThumb = styled(SwitchPrimitive.Thumb, {\n  position: \"absolute\",\n  left: 0,\n  width: 13,\n  height: 13,\n  backgroundColor: \"white\",\n  borderRadius: \"$round\",\n  boxShadow: \"rgba(0, 0, 0, 0.3) 0px 0px 1px, rgba(0, 0, 0, 0.2) 0px 1px 2px;\",\n  transition: \"transform 100ms cubic-bezier(0.22, 1, 0.36, 1)\",\n  transform: \"translateX(1px)\",\n  willChange: \"transform\",\n\n  '&[data-state=\"checked\"]': {\n    transform: \"translateX(11px)\",\n  },\n});\n\nconst StyledSwitch = styled(SwitchPrimitive.Root, {\n  all: \"unset\",\n  boxSizing: \"border-box\",\n  userSelect: \"none\",\n  flexShrink: 0,\n  \"&::before\": {\n    boxSizing: \"border-box\",\n  },\n  \"&::after\": {\n    boxSizing: \"border-box\",\n  },\n\n  // Reset\n  alignItems: \"center\",\n  display: \"inline-flex\",\n  justifyContent: \"center\",\n  lineHeight: \"1\",\n  margin: \"0\",\n  outline: \"none\",\n  WebkitTapHighlightColor: \"rgba(0,0,0,0)\",\n\n  backgroundColor: \"$slate5\",\n  borderRadius: \"$pill\",\n  position: \"relative\",\n  \"&:focus\": {\n    boxShadow: \"0 0 0 2px $colors$slate8\",\n  },\n\n  '&[data-state=\"checked\"]': {\n    backgroundColor: \"$blue9\",\n    \"&:focus\": {\n      boxShadow: \"0 0 0 2px $colors$blue8\",\n    },\n  },\n\n  variants: {\n    size: {\n      \"1\": {\n        width: \"$5\",\n        height: \"$3\",\n      },\n      \"2\": {\n        width: \"$7\",\n        height: \"$5\",\n        [`& ${StyledThumb}`]: {\n          width: 21,\n          height: 21,\n          transform: \"translateX(2px)\",\n          '&[data-state=\"checked\"]': {\n            transform: \"translateX(22px)\",\n          },\n        },\n      },\n    },\n  },\n  defaultVariants: {\n    size: \"1\",\n  },\n});\n\ntype SwitchVariants = VariantProps<typeof StyledSwitch>;\ntype SwitchPrimitiveProps = React.ComponentProps<typeof SwitchPrimitive.Root>;\ntype SwitchProps = SwitchPrimitiveProps & SwitchVariants & { css?: CSS };\n\nexport const Switch = React.forwardRef<\n  React.ElementRef<typeof StyledSwitch>,\n  SwitchProps\n>((props, forwardedRef) => (\n  <StyledSwitch {...props} ref={forwardedRef}>\n    <StyledThumb />\n  </StyledSwitch>\n));\n\nSwitch.displayName = \"Switch\";\n", "import React from \"react\";\nimport { styled, CSS } from \"../stitches.config\";\nimport * as SliderPrimitive from \"@radix-ui/react-slider\";\n\nconst SliderTrack = styled(SliderPrimitive.Track, {\n  position: \"relative\",\n  flexGrow: 1,\n  backgroundColor: \"$slate7\",\n  borderRadius: \"$pill\",\n  '&[data-orientation=\"horizontal\"]': {\n    height: 2,\n  },\n  '&[data-orientation=\"vertical\"]': {\n    width: 2,\n    height: 100,\n  },\n});\n\nconst SliderRange = styled(SliderPrimitive.Range, {\n  position: \"absolute\",\n  background: \"$blue9\",\n  borderRadius: \"inherit\",\n  '&[data-orientation=\"horizontal\"]': {\n    height: \"100%\",\n  },\n  '&[data-orientation=\"vertical\"]': {\n    width: \"100%\",\n  },\n});\n\nconst SliderThumb = styled(SliderPrimitive.Thumb, {\n  position: \"relative\",\n  display: \"block\",\n  width: 15,\n  height: 15,\n  outline: \"none\",\n  backgroundColor: \"white\",\n  boxShadow: \"0 0 1px rgba(0,0,0,.3), 0 1px 4px rgba(0,0,0,.15)\",\n  borderRadius: \"$round\",\n\n  \"&::after\": {\n    content: '\"\"',\n    position: \"absolute\",\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0,\n    zIndex: -2,\n    backgroundColor: \"hsla(0,0%,0%,.035)\",\n    transform: \"scale(1)\",\n    borderRadius: \"$round\",\n    transition: \"transform 200ms cubic-bezier(0.22, 1, 0.36, 1)\",\n  },\n\n  \"&:focus\": {\n    \"&::after\": {\n      transform: \"scale(2)\",\n    },\n  },\n});\n\nexport const StyledSlider = styled(SliderPrimitive.Root, {\n  position: \"relative\",\n  display: \"flex\",\n  alignItems: \"center\",\n  flexShrink: 0,\n  userSelect: \"none\",\n  touchAction: \"none\",\n  height: 15,\n  flexGrow: 1,\n\n  '&[data-orientation=\"vertical\"]': {\n    flexDirection: \"column\",\n    width: 15,\n  },\n\n  \"@hover\": {\n    \"&:hover\": {\n      [`& ${SliderTrack}`]: {\n        backgroundColor: \"$slate8\",\n      },\n    },\n  },\n});\n\ntype SliderPrimitiveProps = Omit<\n  React.ComponentProps<typeof SliderPrimitive.Root>,\n  \"value\" | \"defaultValue\"\n> & {\n  value?: number | number[];\n  defaultValue?: number | number[];\n};\ntype SliderProps = SliderPrimitiveProps & { css?: CSS };\n\nexport const Slider = React.forwardRef<\n  React.ElementRef<typeof StyledSlider>,\n  SliderProps\n>(({ value, defaultValue, ...props }, forwardedRef) => {\n  const realValue = value || defaultValue || 0;\n  const hasRange = Array.isArray(realValue);\n  const thumbsArray = hasRange ? realValue : [realValue];\n\n  return (\n    <StyledSlider {...props} ref={forwardedRef}>\n      <SliderTrack>\n        <SliderRange />\n      </SliderTrack>\n      {thumbsArray?.map((_, i: number) => (\n        <SliderThumb key={i} />\n      ))}\n    </StyledSlider>\n  );\n});\nSlider.displayName = \"Slider\";\n", "import React from \"react\";\nimport { styled, CSS, VariantProps } from \"../stitches.config\";\nimport * as RadioGroupPrimitive from \"@radix-ui/react-radio-group\";\n\nexport const RadioGroup = styled(RadioGroupPrimitive.Root, {\n  display: \"flex\",\n});\n\nconst StyledIndicator = styled(RadioGroupPrimitive.Indicator, {\n  alignItems: \"center\",\n  display: \"flex\",\n  height: \"100%\",\n  justifyContent: \"center\",\n  width: \"100%\",\n  position: \"relative\",\n  \"&::after\": {\n    content: '\"\"',\n    display: \"block\",\n    width: \"7px\",\n    height: \"7px\",\n    borderRadius: \"50%\",\n    backgroundColor: \"$blue9\",\n  },\n});\n\nconst StyledRadio = styled(RadioGroupPrimitive.Item, {\n  all: \"unset\",\n  boxSizing: \"border-box\",\n  userSelect: \"none\",\n  \"&::before\": {\n    boxSizing: \"border-box\",\n  },\n  \"&::after\": {\n    boxSizing: \"border-box\",\n  },\n  alignItems: \"center\",\n  appearance: \"none\",\n  display: \"inline-flex\",\n  justifyContent: \"center\",\n  lineHeight: \"1\",\n  margin: \"0\",\n  outline: \"none\",\n  padding: \"0\",\n  textDecoration: \"none\",\n  WebkitTapHighlightColor: \"rgba(0,0,0,0)\",\n\n  borderRadius: \"50%\",\n  color: \"$hiContrast\",\n  boxShadow: \"inset 0 0 0 1px $colors$slate7\",\n  overflow: \"hidden\",\n  \"@hover\": {\n    \"&:hover\": {\n      boxShadow: \"inset 0 0 0 1px $colors$slate8\",\n    },\n  },\n  \"&:focus\": {\n    outline: \"none\",\n    borderColor: \"$red7\",\n    boxShadow: \"inset 0 0 0 1px $colors$blue9, 0 0 0 1px $colors$blue9\",\n  },\n\n  variants: {\n    size: {\n      \"1\": {\n        width: \"$3\",\n        height: \"$3\",\n      },\n      \"2\": {\n        width: \"$5\",\n        height: \"$5\",\n\n        [`& ${StyledIndicator}`]: {\n          \"&::after\": {\n            width: \"$3\",\n            height: \"$3\",\n          },\n        },\n      },\n    },\n  },\n  defaultVariants: {\n    size: \"1\",\n  },\n});\n\ntype RadioVariants = VariantProps<typeof StyledRadio>;\ntype RadioGroupItemPrimitiveProps = React.ComponentProps<\n  typeof RadioGroupPrimitive.Item\n>;\ntype RadioProps = RadioGroupItemPrimitiveProps & RadioVariants & { css?: CSS };\n\nexport const Radio = React.forwardRef<\n  React.ElementRef<typeof StyledRadio>,\n  RadioProps\n>((props, forwardedRef) => (\n  <StyledRadio {...props} ref={forwardedRef}>\n    <StyledIndicator />\n  </StyledRadio>\n));\n\nRadio.displayName = \"Radio\";\n", "import { type ComponentProps, useState, useEffect } from \"react\";\nimport { ChevronDownIcon } from \"apps/designer/app/shared/icons\";\nimport { TextField } from \"./text-field\";\nimport { IconButton } from \"./icon-button\";\nimport { MenuAnchor, Menu, MenuContent, MenuItem } from \"./menu\";\n\ntype Item = { label: string };\n\ntype ComboboxProps = ComponentProps<typeof TextField> & {\n  items: Array<Item>;\n  onValueSelect: (value: string) => void;\n  onValueEnter: (value: string) => void;\n  onItemEnter: (value: string) => void;\n  onItemLeave: (value: string) => void;\n  value: string;\n};\n\nexport const Combobox = ({\n  items,\n  onValueSelect,\n  onValueEnter,\n  onItemEnter,\n  onItemLeave,\n  value,\n  css,\n  ...rest\n}: ComboboxProps) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [currentValue, setCurrentValue] = useState(value);\n\n  useEffect(() => {\n    setCurrentValue(value);\n  }, [value]);\n\n  return (\n    <Menu open={isOpen} modal={true} onOpenChange={setIsOpen}>\n      <MenuAnchor asChild>\n        <TextField\n          {...rest}\n          value={currentValue}\n          autoComplete=\"off\"\n          // @todo avoid hardcoding padding\n          css={{ ...css, paddingRight: 30 }}\n          onChange={(event) => {\n            setCurrentValue(event.target.value);\n          }}\n          onKeyDown={(event) => {\n            switch (event.key) {\n              case \"ArrowDown\":\n              case \"ArrowUp\": {\n                setIsOpen(true);\n                break;\n              }\n              case \"Enter\": {\n                onValueEnter(event.currentTarget.value);\n                break;\n              }\n            }\n          }}\n        />\n      </MenuAnchor>\n      <IconButton\n        variant=\"ghost\"\n        size=\"1\"\n        // @todo avoid hardcoding margin\n        css={{ marginLeft: -32 }}\n        onClick={() => {\n          setIsOpen(true);\n        }}\n      >\n        <ChevronDownIcon />\n      </IconButton>\n      <MenuContent loop portalled asChild>\n        <div>\n          {items.map(({ label }, index) => {\n            return (\n              <MenuItem\n                key={index}\n                onMouseEnter={() => {\n                  onItemEnter(label);\n                }}\n                onMouseLeave={() => {\n                  onItemLeave(label);\n                }}\n                onFocus={() => {\n                  onItemEnter(label);\n                }}\n                onSelect={() => {\n                  onValueSelect(label);\n                }}\n              >\n                {label}\n              </MenuItem>\n            );\n          })}\n        </div>\n      </MenuContent>\n    </Menu>\n  );\n};\n", "const config = {\n  previewPath: \"/preview\",\n  canvasPath: \"/canvas\",\n  designerPath: \"/designer\",\n  dashboardPath: \"/dashboard\",\n  loginPath: \"/login\",\n  logoutPath: \"/logout\",\n  googleCallbackPath: \"/google/callback\",\n  githubCallbackPath: \"/github/callback\",\n  authPath: \"/auth\",\n};\nexport default config;\nexport type Config = typeof config;\n", "import * as Sentry from \"@sentry/remix\";\nimport { Extras, Integration } from \"@sentry/types\";\nimport env from \"apps/designer/app/shared/env\";\n\nexport const initSentry = ({\n  integrations = [],\n}: { integrations?: Integration[] } = {}) =>\n  env.SENTRY_DSN\n    ? Sentry.init({\n        dsn: env.SENTRY_DSN,\n        tracesSampleRate: 1.0,\n        environment: env.VERCEL_ENV || \"development\",\n        integrations: integrations,\n      })\n    : () => null;\n\ntype SentryHelperProps = {\n  message: string;\n  extra?: Extras;\n  skipLogging?: boolean;\n};\n\nexport const sentryMessage = ({\n  message,\n  extra,\n  skipLogging = false,\n}: SentryHelperProps) => {\n  if (env.SENTRY_DSN) {\n    Sentry.withScope((scope) => {\n      if (extra) scope.setExtras(extra);\n      Sentry.captureMessage(message);\n    });\n  }\n\n  if (skipLogging !== true) {\n    // eslint-disable-next-line no-console\n    console.log(message);\n  }\n};\n\nexport const sentryException = ({\n  message,\n  extra,\n  skipLogging = false,\n}: SentryHelperProps) => {\n  if (env.SENTRY_DSN) {\n    Sentry.withScope((scope) => {\n      if (extra) scope.setExtras(extra);\n      Sentry.captureException(message);\n    });\n  }\n  if (skipLogging !== true) {\n    // eslint-disable-next-line no-console\n    console.error(message);\n  }\n};\n", "// Global namespace on window.\nexport const namespace = \"__webstudioEnv\";\n", "import { useLoaderData } from \"@remix-run/react\";\nimport { namespace } from \"./namespace\";\n\n// @todo remove once remix has a built-in way\n// https://github.com/remix-run/remix/discussions/2769\n// This renders env config as a script tag so we can have access to it before any scripts run\nexport const Env = () => {\n  const data = useLoaderData();\n  return (\n    <script\n      dangerouslySetInnerHTML={{\n        __html: `window[\"${namespace}\"] = ${JSON.stringify(data.env)}`,\n      }}\n    />\n  );\n};\n", "import { namespace } from \"./namespace\";\nimport type { Env } from \"apps/designer/app/env.server\";\n\n// @todo remove once remix has a built-in way\n// https://github.com/remix-run/remix/discussions/2769\n// This provides an access to a config over window by accessing a property in an env proxy object\nexport default new Proxy(\n  {},\n  {\n    get(_target, prop) {\n      if (typeof window === \"undefined\") {\n        return prop in process.env ? process.env[prop as keyof Env] : undefined;\n      }\n      const env = (window[namespace as never] ?? {}) as unknown as Env;\n      return prop in env ? env[prop as keyof Env] : undefined;\n    },\n  }\n) as Env;\n", "import { PrismaClient, Prisma } from \"@prisma/client\";\nimport { PrismaClientKnownRequestError } from \"@prisma/client/runtime\";\n\ndeclare global {\n  // allow global `var` declarations\n  // eslint-disable-next-line no-var\n  var prisma: PrismaClient | undefined;\n}\n\n// this fixes the issue with `warn(prisma-client) There are already 10 instances of Prisma Client actively running.`\n// explanation here\n// https://www.prisma.io/docs/guides/database/troubleshooting-orm/help-articles/nextjs-prisma-client-dev-practices\nexport const prisma = global.prisma || new PrismaClient();\n\nif (process.env.NODE_ENV !== \"production\") global.prisma = prisma;\n\nexport { Prisma, PrismaClientKnownRequestError };\n", "// Our root outlet doesn't contain a layout because we have 2 types of documents: canvas and designer and we need to decide down the line which one to render, thre is no single root document.\nimport { Outlet } from \"@remix-run/react\";\nimport { withSentryRouteTracing } from \"@sentry/remix\";\nimport { ErrorBoundary } from \"@sentry/remix\";\nimport { OutletProps } from \"react-router-dom\";\n\nconst RootWithErrorBoundary = (props: OutletProps) => (\n  <ErrorBoundary>\n    <Outlet {...props} />\n  </ErrorBoundary>\n);\n\nexport default withSentryRouteTracing(\n  // withSentryRouteTracing() expects a type from component that is not necessary true.\n  RootWithErrorBoundary as () => JSX.Element\n);\n", "import type { LoaderFunction } from \"@remix-run/node\";\nimport type { Breakpoint } from \"@webstudio-is/sdk\";\nimport * as db from \"apps/designer/app/shared/db\";\n\nexport type ErrorData = {\n  errors: string;\n};\n\nexport const loader: LoaderFunction = async ({\n  params,\n}): Promise<Array<Breakpoint> | ErrorData> => {\n  try {\n    const project = await db.project.loadById(params.projectId);\n    if (project === null) {\n      throw new Error(`Project ${params.projectId} not found`);\n    }\n    if (project.prodTreeId === null) {\n      throw new Error(\n        `Project ${params.projectId} needs to be published first`\n      );\n    }\n    const data = await db.breakpoints.load(project.prodTreeId);\n    if (data === null) {\n      throw new Error(\n        `Breakpoints not found for project ${params.projectId} and tree ID ${project.prodTreeId}`\n      );\n    }\n    return data.values;\n  } catch (error) {\n    if (error instanceof Error) {\n      return {\n        errors: error.message,\n      };\n    }\n  }\n  return { errors: \"Unexpected error\" };\n};\n", "import { type Instance, type Breakpoint, type Tree } from \"@webstudio-is/sdk\";\nimport { applyPatches, type Patch } from \"immer\";\nimport { prisma } from \"./prisma.server\";\nimport { createInstance } from \"apps/designer/app/shared/tree-utils\";\nimport { sort } from \"apps/designer/app/shared/breakpoints\";\nimport { Tree as DbTree } from \"@prisma/client\";\nimport { Project } from \"./project.server\";\n\nexport const createRootInstance = (breakpoints: Array<Breakpoint>) => {\n  // Take the smallest breakpoint as default\n  const defaultBreakpoint = sort(breakpoints)[0];\n  if (defaultBreakpoint === undefined) {\n    throw new Error(\"A breakpoint with minWidth 0 is required\");\n  }\n  // @todo this should be part of a root primitive in primitives\n  const rootConfig: Pick<Instance, \"component\" | \"cssRules\"> = {\n    component: \"Box\",\n    cssRules: [\n      {\n        breakpoint: defaultBreakpoint.id,\n        style: {\n          backgroundColor: {\n            type: \"keyword\",\n            value: \"white\",\n          },\n          fontFamily: {\n            type: \"keyword\",\n            value: \"Arial\",\n          },\n          fontSize: {\n            type: \"unit\",\n            unit: \"px\",\n            value: 14,\n          },\n          lineHeight: {\n            type: \"unit\",\n            unit: \"number\",\n            value: 1.5,\n          },\n          color: {\n            type: \"keyword\",\n            value: \"#232323\",\n          },\n          minHeight: {\n            type: \"unit\",\n            unit: \"vh\",\n            value: 100,\n          },\n          flexDirection: {\n            type: \"keyword\",\n            value: \"column\",\n          },\n        },\n      },\n    ],\n  };\n  return createInstance(rootConfig);\n};\n\nexport const create = async (root: Instance): Promise<DbTree> => {\n  const newRoot = JSON.stringify(root);\n  return await prisma.tree.create({\n    data: { root: newRoot },\n  });\n};\n\nexport const loadById = async (treeId: string): Promise<Tree | null> => {\n  const tree = await prisma.tree.findUnique({\n    where: { id: treeId },\n  });\n\n  if (tree === null) return null;\n\n  return {\n    ...tree,\n    root: JSON.parse(tree.root),\n  };\n};\n\nexport const loadByProject = async (\n  project: Project | null,\n  env: \"production\" | \"development\" = \"development\"\n) => {\n  if (project === null) {\n    throw new Error(\"Project required\");\n  }\n\n  const treeId = env === \"production\" ? project.prodTreeId : project.devTreeId;\n\n  if (treeId === null) {\n    throw new Error(\"Site needs to be published, production tree ID is null.\");\n  }\n\n  return await loadById(treeId);\n};\n\nexport const clone = async (treeId: string) => {\n  const tree = await loadById(treeId);\n  if (tree === null) {\n    throw new Error(`Tree ${treeId} not found`);\n  }\n  return await create(tree.root);\n};\n\nexport const patchRoot = async (\n  { treeId }: { treeId: Tree[\"id\"] },\n  patches: Array<Patch>\n) => {\n  const tree = await loadById(treeId);\n  if (tree === null) {\n    throw new Error(`Tree ${treeId} not found`);\n  }\n  const root = applyPatches(tree.root, patches);\n  await prisma.tree.update({\n    data: { root: JSON.stringify(root) },\n    where: { id: treeId },\n  });\n};\n", "import ObjectId from \"bson-objectid\";\nimport { type CssRule, type Instance } from \"@webstudio-is/sdk\";\nimport { primitives } from \"apps/designer/app/shared/canvas-components\";\n\nexport const createInstance = ({\n  component,\n  id,\n  children,\n  cssRules,\n}: {\n  component: Instance[\"component\"];\n  id?: Instance[\"id\"];\n  children?: Instance[\"children\"];\n  cssRules?: Array<CssRule>;\n}): Instance => {\n  const primitive = primitives[component];\n  return {\n    component,\n    id: id === undefined ? ObjectId().toString() : id,\n    cssRules: cssRules ?? [],\n    children:\n      children === undefined\n        ? \"children\" in primitive\n          ? primitive.children\n          : []\n        : children,\n  };\n};\n", "export * as Box from \"./box\";\nexport * as TextBlock from \"./text-block\";\nexport * as Heading from \"./heading\";\nexport * as Paragraph from \"./paragraph\";\nexport * as Link from \"./link\";\nexport * as Bold from \"./bold\";\nexport * as Italic from \"./italic\";\nexport * as Button from \"./button\";\nexport * as Input from \"./input\";\nexport * as Form from \"./form\";\n", "import { type Style, components } from \"@webstudio-is/sdk\";\nexport { SquareIcon as Icon } from \"apps/designer/app/shared/icons\";\n\n// Webstudio specific default styles for the node type.\nexport const defaultStyle: Style = {\n  boxSizing: {\n    type: \"keyword\",\n    value: \"border-box\",\n  },\n};\n\nexport const canAcceptChild = (): boolean => {\n  return true;\n};\n\nexport const isContentEditable = false;\n\n// Can only be created from content editable fields\nexport const isInlineOnly = false;\n\nexport const Component = components.Box;\n\nexport const label = \"Box\";\n", "import { type Style, components } from \"@webstudio-is/sdk\";\nexport { TextIcon as Icon } from \"apps/designer/app/shared/icons\";\n\n// Webstudio specific default styles for the node type.\nexport const defaultStyle: Style = {\n  minHeight: {\n    type: \"unit\",\n    unit: \"em\",\n    value: 1,\n  },\n};\n\nexport const children = [\"Block of text you can edit\"];\n\nexport const canAcceptChild = (): boolean => {\n  return false;\n};\n\nexport const isContentEditable = true;\n\n// Can only be created from content editable fields\nexport const isInlineOnly = false;\n\nexport const label = \"Text Block\";\n\nexport const Component = components.TextBlock;\n", "import { type Style, components } from \"@webstudio-is/sdk\";\nexport { HeadingIcon as Icon } from \"apps/designer/app/shared/icons\";\n\n// Webstudio specific default styles for the node type.\nexport const defaultStyle: Style = {};\n\nexport const children = [\"Heading you can edit\"];\n\nexport const canAcceptChild = (): boolean => {\n  return false;\n};\n\nexport const isContentEditable = true;\n\n// Can only be created from content editable fields\nexport const isInlineOnly = false;\n\nexport const label = \"Heading\";\n\nexport const Component = components.Heading;\n", "import { type Style, components } from \"@webstudio-is/sdk\";\nexport { TextAlignLeftIcon as Icon } from \"apps/designer/app/shared/icons\";\n\n// Webstudio specific default styles for the node type.\nexport const defaultStyle: Style = {};\n\nexport const children = [\"Pragraph you can edit\"];\n\nexport const canAcceptChild = (): boolean => {\n  return false;\n};\n\nexport const isContentEditable = true;\n\n// Can only be created from content editable fields\nexport const isInlineOnly = false;\n\nexport const label = \"Paragraph\";\n\nexport const Component = components.Paragraph;\n", "import { type Style, components } from \"@webstudio-is/sdk\";\nexport { Link2Icon as Icon } from \"apps/designer/app/shared/icons\";\n\n// Webstudio specific default styles for the node type.\nexport const defaultStyle: Style = {\n  minHeight: {\n    type: \"unit\",\n    unit: \"em\",\n    value: 1,\n  },\n  display: {\n    type: \"keyword\",\n    value: \"inline-block\",\n  },\n};\n\nexport const children = [\"Link text you can edit\"];\n\nexport const canAcceptChild = (): boolean => {\n  return false;\n};\n\nexport const isContentEditable = true;\n\n// Can only be created from content editable fields\nexport const isInlineOnly = false;\n\nexport const label = \"Link\";\n\nexport const Component = components.Link;\n", "import { components } from \"@webstudio-is/sdk\";\nexport { FontBoldIcon as Icon } from \"apps/designer/app/shared/icons\";\n\nexport const canAcceptChild = (): boolean => {\n  return false;\n};\n\nexport const isContentEditable = false;\n\nexport const label = \"Bold Text\";\n\n// Can only be created from content editable fields\nexport const isInlineOnly = true;\n\nexport const Component = components.Bold;\n", "import { components } from \"@webstudio-is/sdk\";\nexport { FontBoldIcon as Icon } from \"apps/designer/app/shared/icons\";\n\nexport const canAcceptChild = (): boolean => {\n  return false;\n};\n\nexport const isContentEditable = false;\n\nexport const label = \"Italic Text\";\n\n// Can only be created from content editable fields\nexport const isInlineOnly = true;\n\nexport const Component = components.Italic;\n", "import { type Style, components } from \"@webstudio-is/sdk\";\nexport { ButtonIcon as Icon } from \"apps/designer/app/shared/icons\";\n\n// Webstudio specific default styles for the node type.\nexport const defaultStyle: Style = {};\n\nexport const canAcceptChild = (): boolean => {\n  // @todo could accept an icon in the future\n  return false;\n};\n\nexport const isContentEditable = true;\n\n// Can only be created from content editable fields\nexport const isInlineOnly = false;\n\nexport const children = [\"Button text you can edit\"];\n\nexport const Component = components.Button;\n\nexport const label = \"Button\";\n", "import { type Style, components } from \"@webstudio-is/sdk\";\nexport { InputIcon as Icon } from \"apps/designer/app/shared/icons\";\n\n// Webstudio specific default styles for the node type.\nexport const defaultStyle: Style = {};\n\nexport const canAcceptChild = (): boolean => {\n  return false;\n};\n\nexport const isContentEditable = false;\n\n// Can only be created from content editable fields\nexport const isInlineOnly = false;\n\nexport const Component = components.Input;\n\n// @todo we can't render label as a tag using psuedo elements for an input\n// we either need to start rendering tags outside or wrap elements which can't have children\nexport const label = \"Input\";\n", "import { type Style, components } from \"@webstudio-is/sdk\";\nexport { FormIcon as Icon } from \"apps/designer/app/shared/icons\";\n\n// Webstudio specific default styles for the node type.\nexport const defaultStyle: Style = {\n  minHeight: {\n    type: \"unit\",\n    unit: \"px\",\n    value: 20,\n  },\n  boxSizing: {\n    type: \"keyword\",\n    value: \"border-box\",\n  },\n};\n\nexport const canAcceptChild = (): boolean => {\n  return true;\n};\n\nexport const isContentEditable = false;\n\n// Can only be created from content editable fields\nexport const isInlineOnly = false;\n\nexport const Component = components.Form;\n\nexport const label = \"Form\";\n", "import { type Instance } from \"@webstudio-is/sdk\";\n\nexport const deleteInstanceMutable = (\n  instance: Instance,\n  instanceId: Instance[\"id\"]\n): boolean => {\n  if (instance.id === instanceId) return true;\n\n  for (const child of instance.children) {\n    if (typeof child === \"string\") continue;\n    const shouldDelete = deleteInstanceMutable(child, instanceId);\n    if (shouldDelete === true) {\n      const index = instance.children.indexOf(child);\n      instance.children.splice(index, 1);\n      return false;\n    }\n  }\n  return false;\n};\n", "import { type Instance } from \"@webstudio-is/sdk\";\n\nexport type InstanceInsertionSpec = {\n  parentId: Instance[\"id\"];\n  position: number | \"end\";\n};\n\nexport const insertInstanceMutable = (\n  rootInstance: Instance,\n  instance: Instance,\n  spec: InstanceInsertionSpec\n): boolean => {\n  if (spec.parentId !== rootInstance.id) {\n    for (const child of rootInstance.children) {\n      if (typeof child === \"string\") continue;\n      const hasInserted = insertInstanceMutable(child, instance, spec);\n      if (hasInserted === true) return true;\n    }\n    return false;\n  }\n\n  // Inserting inside the selected/hovered instance.\n  if (typeof spec.position === \"number\") {\n    rootInstance.children.splice(spec.position, 0, instance);\n    return true;\n  }\n\n  // Inserting after all children\n  if (spec.position === \"end\") {\n    rootInstance.children.push(instance);\n    return true;\n  }\n\n  return true;\n};\n", "import { type Instance } from \"@webstudio-is/sdk\";\nimport { primitives } from \"apps/designer/app/shared/canvas-components\";\n\n/**\n * Populate instance with:\n * - defaultStyles\n * @todo rewrite using immer\n */\nexport const populateInstance = (instance: Instance): Instance => {\n  const populatedInstance = { ...instance };\n  const primitive = primitives[instance.component];\n  if (primitive !== undefined && \"defaultStyle\" in primitive) {\n    const cssRule = {\n      breakpoint: \"\",\n      style: primitive.defaultStyle,\n    };\n    populatedInstance.cssRules.push(cssRule);\n  }\n  return populatedInstance;\n};\n", "import { type Instance } from \"@webstudio-is/sdk\";\n\n// @todo should be optimized because it will be a frequent operation on a potentially large tree.\nexport const findInstanceById = (\n  instance: Instance,\n  id: Instance[\"id\"]\n): Instance | undefined => {\n  if (instance.id === id) {\n    return instance;\n  }\n\n  if (instance.children !== undefined) {\n    for (const child of instance.children) {\n      if (typeof child === \"string\") continue;\n      const foundInstance = findInstanceById(child, id);\n      if (foundInstance !== undefined) return foundInstance;\n    }\n  }\n};\n", "export * from \"./create-instance\";\nexport * from \"./delete-instance\";\nexport * from \"./insert-instance\";\nexport * from \"./populate\";\nexport * from \"./find-instance\";\nexport { createElementsTree, type OnChangeChildren } from \"@webstudio-is/sdk\";\nexport * from \"./set-instance-style\";\nexport * from \"./set-instance-children\";\nexport * from \"./get-instance-path\";\nexport * from \"./find-closest-sibling-instance\";\nexport * from \"./find-parent-instance\";\nexport * from \"./clone-instance\";\n", "import { Breakpoint, type Instance } from \"@webstudio-is/sdk\";\nimport { type StyleUpdates } from \"apps/designer/app/shared/canvas-components\";\nimport { findInstanceById } from \"./find-instance\";\n\nexport const setInstanceStyleMutable = (\n  rootInstance: Instance,\n  id: Instance[\"id\"],\n  updates: StyleUpdates[\"updates\"],\n  breakpoint: Breakpoint\n) => {\n  const instance = findInstanceById(rootInstance, id);\n  if (instance === undefined) return false;\n  let cssRule = instance.cssRules.find(\n    (cssRule) => cssRule.breakpoint === breakpoint.id\n  );\n  if (cssRule === undefined) {\n    cssRule = { style: {}, breakpoint: breakpoint.id };\n    instance.cssRules.push(cssRule);\n  }\n\n  for (const update of updates) {\n    cssRule.style[update.property] = update.value;\n  }\n  return true;\n};\n", "import { type ChildrenUpdates } from \"@webstudio-is/sdk\";\nimport { type Instance } from \"@webstudio-is/sdk\";\nimport { createInstance } from \"./create-instance\";\nimport { findInstanceById } from \"./find-instance\";\n\n/**\n * Update children of an instance with new text.\n * When child is an instance - we update it's children with a single text entry.\n */\nexport const setInstanceChildrenMutable = (\n  id: Instance[\"id\"],\n  // Not a consistent format now, maybe better:\n  // [{set: 'string'}, {set: instance}, {update: {id,text}}]\n  updates: ChildrenUpdates,\n  rootInstance: Instance\n) => {\n  const instance = findInstanceById(rootInstance, id);\n  if (instance === undefined) return false;\n  const children = [];\n\n  for (const update of updates) {\n    // Set a string as a child\n    if (typeof update === \"string\") {\n      children.push(update);\n      continue;\n    }\n    // We need to create an instance\n    if (\"createInstance\" in update) {\n      const childInstance = createInstance({\n        id: update.id,\n        component: update.component,\n        children: [update.text],\n      });\n      children.push(childInstance);\n      continue;\n    }\n\n    // Set text as a single child of a child instance\n    if (\"text\" in update) {\n      const childInstance = findInstanceById(instance, update.id);\n      // It should be impossible to have not found that instance\n      if (childInstance === undefined) continue;\n      children.push({ ...childInstance, children: [update.text] });\n      continue;\n    }\n\n    // It's a new instance.\n    children.push(update);\n  }\n\n  instance.children = children;\n  return true;\n};\n", "import { Instance } from \"@webstudio-is/sdk\";\n\nexport const getInstancePath = (\n  instance: Instance,\n  instanceId: Instance[\"id\"]\n) => {\n  const path = [];\n\n  const find = (instance: Instance) => {\n    if (instance.id === instanceId) return true;\n    for (const child of instance.children) {\n      if (typeof child === \"string\") continue;\n      const found = find(child);\n      if (found) {\n        path.push(child);\n        return true;\n      }\n    }\n  };\n\n  if (find(instance)) {\n    path.push(instance);\n  }\n\n  return path.reverse();\n};\n", "import { type Instance } from \"@webstudio-is/sdk\";\n\nexport const findClosestSiblingInstance = (\n  instance: Instance,\n  instanceId: Instance[\"id\"]\n): Instance | undefined => {\n  if (instance.children.length === 0) return;\n  const children = instance.children.filter(\n    (instance) => typeof instance === \"object\"\n  ) as Array<Instance>;\n  const index = children.findIndex((instance) => instance.id === instanceId);\n  if (index === -1) return;\n  const nextInstance = children[index + 1];\n  if (nextInstance !== undefined) return nextInstance;\n  const previousInstance = children[index - 1];\n  return previousInstance;\n};\n", "import { type Instance } from \"@webstudio-is/sdk\";\n\nexport const findParentInstance = (\n  instance: Instance,\n  instanceId: Instance[\"id\"]\n): Instance | undefined => {\n  const find = (\n    childInstance: Instance,\n    parentInstance?: Instance\n  ): Instance | undefined => {\n    if (childInstance.id === instanceId) return parentInstance;\n    for (const child of childInstance.children) {\n      if (typeof child === \"string\") continue;\n      const foundInstance = find(child, childInstance);\n      if (foundInstance !== undefined) return foundInstance;\n    }\n  };\n  return find(instance);\n};\n", "import ObjectId from \"bson-objectid\";\nimport produce from \"immer\";\nimport { type Instance } from \"@webstudio-is/sdk\";\n\nconst updateIds = (instance: Instance) => {\n  instance.id = ObjectId().toString();\n  for (const child of instance.children) {\n    if (typeof child === \"string\") continue;\n    updateIds(child);\n  }\n};\n\nexport const cloneInstance = (instance: Instance): Instance =>\n  produce(updateIds)(instance);\n", "/**\n * Sort by minWidth descending.\n * We want media querries with bigger minWidth to override the smaller once.\n */\nexport const sort = <BreakpointSubset extends { minWidth: number }>(\n  breakpoints: Array<BreakpointSubset>\n) => {\n  return [...breakpoints].sort((breakpointA, breakpointB) => {\n    return breakpointA.minWidth - breakpointB.minWidth;\n  });\n};\n", "import slugify from \"slugify\";\nimport { nanoid } from \"nanoid\";\nimport type { Project as BaseProject, User } from \"@webstudio-is/sdk\";\nimport { prisma, Prisma } from \"./prisma.server\";\nimport * as db from \".\";\n\nexport type Project = Omit<BaseProject, \"prodTreeIdHistory\"> & {\n  prodTreeIdHistory: string[];\n};\n\nconst parseProject = (project: BaseProject | null): Project | null =>\n  project\n    ? {\n        ...project,\n        prodTreeIdHistory: JSON.parse(project.prodTreeIdHistory),\n      }\n    : null;\n\nexport const loadById = async (\n  projectId?: Project[\"id\"]\n): Promise<Project | null> => {\n  if (typeof projectId !== \"string\") {\n    throw new Error(\"Project ID required\");\n  }\n\n  const project = await prisma.project.findUnique({\n    where: { id: projectId },\n  });\n\n  return parseProject(project);\n};\n\nexport const loadByDomain = async (domain: string): Promise<Project | null> => {\n  const project = await prisma.project.findUnique({ where: { domain } });\n\n  return parseProject(project);\n};\n\nexport const loadManyByUserId = async (\n  userId: User[\"id\"]\n): Promise<Array<Project>> => {\n  const projects = await prisma.project.findMany({\n    where: {\n      User: {\n        id: userId,\n      },\n    },\n  });\n\n  return projects.map(parseProject) as Project[];\n};\n\nconst slugifyOptions = { lower: true, strict: true };\n\nconst MIN_DOMAIN_LENGTH = 10;\nconst MIN_TITLE_LENGTH = 2;\n\nconst generateDomain = (title: string) => {\n  const slugifiedTitle = slugify(title, slugifyOptions);\n  const domain = `${slugifiedTitle}-${nanoid(\n    // If user entered a long title already, we just add 5 chars generated id\n    // Otherwise we add the amount of chars to satisfy min length\n    Math.max(MIN_DOMAIN_LENGTH - slugifiedTitle.length - 1, 5)\n  )}`;\n  return domain;\n};\n\nexport const create = async ({\n  userId,\n  title,\n}: {\n  userId: string;\n  title: string;\n}): Promise<Project | null> => {\n  if (title.length < MIN_TITLE_LENGTH) {\n    throw new Error(`Minimum ${MIN_TITLE_LENGTH} characters required`);\n  }\n\n  const domain = generateDomain(title);\n  const breakpoints = db.breakpoints.getBreakpointsWithId();\n  const tree = await db.tree.create(db.tree.createRootInstance(breakpoints));\n  const project = await prisma.project.create({\n    data: {\n      userId,\n      title,\n      domain,\n      devTreeId: tree.id,\n    },\n  });\n\n  await db.breakpoints.create(tree.id, breakpoints);\n  return parseProject(project);\n};\n\nexport const clone = async (\n  clonableDomain: string,\n  userId: string\n): Promise<Project> => {\n  const clonableProject = await loadByDomain(clonableDomain);\n  if (clonableProject === null) {\n    throw new Error(`Not found project \"${clonableDomain}\"`);\n  }\n  if (clonableProject.prodTreeId === null) {\n    throw new Error(\"Expected project to be published first\");\n  }\n\n  const tree = await db.tree.clone(clonableProject.prodTreeId);\n  const domain = generateDomain(clonableProject.title);\n  const [project] = await Promise.all([\n    prisma.project.create({\n      data: {\n        userId: userId,\n        title: clonableProject.title,\n        domain,\n        devTreeId: tree.id,\n      },\n    }),\n    db.props.clone({\n      previousTreeId: clonableProject.prodTreeId,\n      nextTreeId: tree.id,\n    }),\n    db.breakpoints.clone({\n      previousTreeId: clonableProject.prodTreeId,\n      nextTreeId: tree.id,\n    }),\n  ]);\n\n  const parsedProject = parseProject(project);\n  if (parsedProject === null) {\n    throw new Error(`Not found project \"${clonableDomain}\"`);\n  }\n  return parsedProject;\n};\n\nexport const update = async ({\n  id,\n  ...data\n}: {\n  id: string;\n  domain?: string;\n  prodTreeId?: string;\n  devTreeId?: string;\n  prodTreeIdHistory: Array<string>;\n}): Promise<BaseProject> => {\n  if (data.domain) {\n    data.domain = slugify(data.domain, slugifyOptions);\n    if (data.domain.length < MIN_DOMAIN_LENGTH) {\n      throw new Error(`Minimum ${MIN_DOMAIN_LENGTH} characters required`);\n    }\n  }\n\n  try {\n    const project = await prisma.project.update({\n      data: {\n        ...data,\n        prodTreeIdHistory: JSON.stringify(data.prodTreeIdHistory),\n      },\n      where: { id },\n    });\n    return project;\n  } catch (error) {\n    if (\n      error instanceof Prisma.PrismaClientKnownRequestError &&\n      error.code === \"P2002\"\n    ) {\n      throw new Error(`Domain \"${data.domain}\" is already used`);\n    }\n    throw error;\n  }\n};\n", "import { type Tree, type AllUserProps } from \"@webstudio-is/sdk\";\nimport { applyPatches, type Patch } from \"immer\";\nimport { prisma } from \"./prisma.server\";\nimport { Project } from \"./project.server\";\n\nexport const loadByProject = async (\n  project: Project | null,\n  env: \"production\" | \"development\" = \"development\"\n) => {\n  if (project === null) {\n    throw new Error(\"Project required\");\n  }\n\n  const treeId = env === \"production\" ? project.prodTreeId : project.devTreeId;\n\n  if (treeId === null) {\n    throw new Error(\"Site needs to be published, production tree ID is null.\");\n  }\n\n  return loadByTreeId(treeId);\n};\n\nexport const loadByTreeId = async (treeId: Tree[\"id\"]) => {\n  const instancePropsEntries = await prisma.instanceProps.findMany({\n    where: { treeId },\n  });\n\n  return instancePropsEntries.map((tree) => ({\n    ...tree,\n    props: JSON.parse(tree.props),\n  }));\n};\n\nexport const clone = async ({\n  previousTreeId,\n  nextTreeId,\n}: {\n  previousTreeId: string;\n  nextTreeId: string;\n}) => {\n  const props = await prisma.instanceProps.findMany({\n    where: { treeId: previousTreeId },\n  });\n  if (props.length === 0) return;\n  const data = props.map(({ id: _id, treeId: _treeId, ...rest }) => ({\n    ...rest,\n    treeId: nextTreeId,\n  }));\n\n  await prisma.$transaction(\n    data.map((prop) =>\n      prisma.instanceProps.create({\n        data: prop,\n      })\n    )\n  );\n};\n\nexport const patch = async (\n  { treeId }: { treeId: Tree[\"id\"]; projectId: Project[\"id\"] },\n  patches: Array<Patch>\n) => {\n  const allProps = await loadByTreeId(treeId);\n\n  // We should get rid of this by applying patches on the client to the original\n  // model instead of the instanceId map.\n  // The map is handy for accessing props, but probably should be just cached interface, not the main data structure.\n  const allPropsMapByInstanceId = allProps.reduce((acc, prop) => {\n    acc[prop.instanceId] = prop;\n    return acc;\n  }, {} as AllUserProps);\n  const nextProps = applyPatches<AllUserProps>(\n    allPropsMapByInstanceId,\n    patches\n  );\n\n  await Promise.all(\n    Object.values(nextProps).map(({ id, instanceId, treeId, props }) =>\n      prisma.instanceProps.upsert({\n        where: { id: id },\n        create: { id: id, instanceId, treeId, props: JSON.stringify(props) },\n        update: {\n          props: JSON.stringify(props),\n        },\n      })\n    )\n  );\n};\n", "import * as db from \".\";\n\n/**\n * Conceptually publishing is cloning all data that affects user site\n * and referencing it under a new tree id.\n */\nexport const publish = async ({\n  projectId,\n  domain,\n}: {\n  projectId: string | null;\n  domain: string | null;\n}) => {\n  if (projectId === null) {\n    throw new Error(\"Project ID required\");\n  }\n  if (domain === null) {\n    throw new Error(\"Domain required\");\n  }\n\n  const project = await db.project.loadById(projectId);\n  if (project === null) {\n    throw new Error(`Project \"${projectId}\" not found`);\n  }\n\n  const tree = await db.tree.clone(project.devTreeId);\n  await db.props.clone({\n    previousTreeId: project.devTreeId,\n    nextTreeId: tree.id,\n  });\n  await db.breakpoints.clone({\n    previousTreeId: project.devTreeId,\n    nextTreeId: tree.id,\n  });\n  const prodTreeIdHistory = project.prodTreeIdHistory;\n  if (project.prodTreeId) {\n    prodTreeIdHistory.push(project.prodTreeId);\n  }\n  const updatedProject = await db.project.update({\n    id: projectId,\n    domain,\n    prodTreeId: tree.id,\n    prodTreeIdHistory,\n  });\n  return updatedProject;\n};\n", "import { type Data } from \"@webstudio-is/sdk\";\nimport * as db from \".\";\nimport { Project } from \"./project.server\";\n\nexport type CanvasData = Data & { project: Project };\n\nexport type ErrorData = {\n  errors: string;\n};\n\nconst loadData = async (projectId: Project[\"id\"]) => {\n  const project = await db.project.loadById(projectId);\n\n  if (project === null) throw new Error(`Project \"${projectId}\" not found`);\n\n  const [tree, props, breakpoints] = await Promise.all([\n    db.tree.loadByProject(project, \"development\"),\n    db.props.loadByProject(project, \"development\"),\n    db.breakpoints.load(project.devTreeId),\n  ]);\n\n  if (tree === null) {\n    throw new Error(\n      `Tree ${project.devTreeId} not found for project ${projectId}`\n    );\n  }\n\n  if (breakpoints === null) {\n    throw new Error(`Breakpoints not found for project ${projectId}`);\n  }\n\n  return {\n    tree,\n    props,\n    project,\n    breakpoints: breakpoints.values,\n  };\n};\n\nexport const loadCanvasData = async ({\n  projectId,\n}: {\n  projectId: Project[\"id\"];\n}): Promise<CanvasData | ErrorData> => {\n  return await loadData(projectId);\n};\n\nexport type PreviewData = Data;\n\nexport const loadPreviewData = async ({\n  projectId,\n}: {\n  projectId: Project[\"id\"];\n}): Promise<PreviewData | ErrorData> => {\n  const { tree, props, breakpoints } = await loadData(projectId);\n  return { tree, props, breakpoints };\n};\n", "import {\n  initialBreakpoints,\n  type Project,\n  type Tree,\n  type Breakpoint,\n} from \"@webstudio-is/sdk\";\nimport ObjectId from \"bson-objectid\";\nimport { applyPatches, type Patch } from \"immer\";\nimport { prisma } from \"./prisma.server\";\n\nexport const load = async (treeId?: Tree[\"id\"]) => {\n  if (typeof treeId !== \"string\") {\n    throw new Error(\"Tree ID required\");\n  }\n\n  const breakpoint = await prisma.breakpoints.findUnique({\n    where: { treeId },\n  });\n\n  if (breakpoint === null) {\n    throw new Error(\"Breakpoint not found\");\n  }\n\n  return {\n    ...breakpoint,\n    values: JSON.parse(breakpoint.values),\n  };\n};\n\nexport const getBreakpointsWithId = () =>\n  initialBreakpoints.map((breakpoint) => ({\n    ...breakpoint,\n    id: ObjectId().toString(),\n  }));\n\nexport const create = async (\n  treeId: Project[\"id\"],\n  breakpoints: Array<Breakpoint>\n) => {\n  const data = {\n    treeId,\n    values: JSON.stringify(breakpoints),\n  };\n  await prisma.breakpoints.create({ data });\n  return {\n    ...data,\n    breakpoints,\n  };\n};\n\nexport const clone = async ({\n  previousTreeId,\n  nextTreeId,\n}: {\n  previousTreeId: Tree[\"id\"];\n  nextTreeId: Tree[\"id\"];\n}) => {\n  const breakpoints = await load(previousTreeId);\n  if (breakpoints === null) {\n    throw new Error(`Didn't find breakpoints with tree id \"${previousTreeId}\"`);\n  }\n  await create(nextTreeId, breakpoints.values);\n};\n\nexport const patch = async (\n  { treeId }: { treeId: Tree[\"id\"]; projectId: Project[\"id\"] },\n  patches: Array<Patch>\n) => {\n  const breakpoints = await load(treeId);\n  if (breakpoints === null) return;\n  const nextBreakpoints = applyPatches(breakpoints.values, patches);\n  await prisma.breakpoints.update({\n    where: { treeId },\n    data: { values: nextBreakpoints },\n  });\n};\n", "import { type LoaderFunction, redirect } from \"@remix-run/node\";\nimport type { User } from \"@webstudio-is/sdk\";\nimport * as db from \"apps/designer/app/shared/db\";\nimport { ensureUserCookie } from \"apps/designer/app/shared/session\";\nimport config from \"apps/designer/app/config\";\nimport type { Project } from \"apps/designer/app/shared/db/project.server\";\n\nconst ensureProject = async ({\n  userId,\n  domain,\n}: {\n  userId: User[\"id\"];\n  domain: string;\n}): Promise<Project> => {\n  const projects = await db.project.loadManyByUserId(userId);\n  if (projects.length !== 0) return projects[0];\n\n  return await db.project.clone(domain, userId);\n};\n\n/**\n * Currently this is used to demo the designer from landing page without\n * having to sign up.\n *\n * 1. Set cookie with a random user id if not already set\n * 2. Clone the project by domain if user doesn't have any projects yet\n * 3. Redirect user to the designer with the cloned project\n */\nexport const loader: LoaderFunction = async ({ request, params }) => {\n  if (params.domain === undefined) return { errors: \"Domain required\" };\n  const { headers, userId } = await ensureUserCookie(request);\n  try {\n    const project = await ensureProject({ userId, domain: params.domain });\n    return redirect(`${config.designerPath}/${project?.id}`, { headers });\n  } catch (error: unknown) {\n    if (error instanceof Error) {\n      return { errors: error.message };\n    }\n  }\n  return { errors: \"Unexpected error\" };\n};\n", "import ObjectId from \"bson-objectid\";\nimport { createCookie } from \"@remix-run/node\";\n\nconst userIdParser = createCookie(\"user-id\", {\n  maxAge: 604_800, // one week\n});\n\nexport const ensureUserCookie = async (\n  request: Request\n): Promise<{ userId: string; headers?: { [key: string]: string } }> => {\n  const cookieString = request.headers.get(\"Cookie\");\n  const userId = await userIdParser.parse(cookieString);\n  if (userId !== null) return { userId };\n  // We use a generated id temporarily as a way to demonstrate the designer\n  // to a new user without a signup.\n  const generatedUserId = ObjectId().toString();\n  return {\n    headers: {\n      \"Set-Cookie\": await userIdParser.serialize(generatedUserId),\n    },\n    userId: userId || generatedUserId,\n  };\n};\n", "import isNil from \"lodash/isNil\";\nimport { useEffect, useState } from \"react\";\nimport { useSearchParams } from \"react-router-dom\";\nimport { sentryException } from \"../sentry\";\n\nexport const AUTH_PROVIDERS = {\n  LOGIN_DEV: \"login_dev\",\n  LOGIN_GITHUB: \"login_github\",\n  LOGIN_GOOGLE: \"login_google\",\n};\n\nexport const LOGIN_ERROR_MESSAGES = {\n  [AUTH_PROVIDERS.LOGIN_DEV]: \"There has been an issue logging you in with dev\",\n  [AUTH_PROVIDERS.LOGIN_GITHUB]:\n    \"There has been an issue logging you in with Github\",\n  [AUTH_PROVIDERS.LOGIN_GOOGLE]:\n    \"There has been an issue logging you in with Google\",\n};\n\nexport const useLoginErrorMessage = (): string => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [messageToReturn, setMessageToReturn] = useState(\"\");\n\n  useEffect(() => {\n    const error = searchParams.get(\"error\");\n    const message = searchParams.get(\"message\");\n\n    const hasMessageToShow =\n      error !== null && !isNil(message) && message !== \"\";\n\n    if (hasMessageToShow) {\n      sentryException({\n        message: message,\n      });\n      setMessageToReturn(message);\n\n      setSearchParams({});\n      return;\n    }\n\n    switch (error) {\n      case AUTH_PROVIDERS.LOGIN_DEV:\n        setMessageToReturn(LOGIN_ERROR_MESSAGES[AUTH_PROVIDERS.LOGIN_DEV]);\n        break;\n      case AUTH_PROVIDERS.LOGIN_GITHUB:\n        setMessageToReturn(LOGIN_ERROR_MESSAGES[AUTH_PROVIDERS.LOGIN_GITHUB]);\n        break;\n      case AUTH_PROVIDERS.LOGIN_GOOGLE:\n        setMessageToReturn(LOGIN_ERROR_MESSAGES[AUTH_PROVIDERS.LOGIN_GOOGLE]);\n        break;\n\n      default:\n        break;\n    }\n\n    setSearchParams({});\n  }, [searchParams, setSearchParams]);\n\n  return messageToReturn;\n};\n", "import { type LoaderFunction } from \"@remix-run/node\";\nimport { type InstanceProps } from \"@webstudio-is/sdk\";\nimport * as db from \"apps/designer/app/shared/db\";\n\ntype ErrorData = {\n  errors: string;\n};\n\nexport const loader: LoaderFunction = async ({\n  params,\n}): Promise<Array<InstanceProps> | ErrorData> => {\n  try {\n    const project = await db.project.loadById(params.projectId);\n    return await db.props.loadByProject(project, \"production\");\n  } catch (error) {\n    if (error instanceof Error) {\n      return {\n        errors: error.message,\n      };\n    }\n  }\n  return { errors: \"Unexpected error\" };\n};\n", "import { type LoaderFunction } from \"@remix-run/node\";\nimport type { Tree } from \"@webstudio-is/sdk\";\nimport * as db from \"apps/designer/app/shared/db\";\n\nexport type ErrorData = {\n  errors: string;\n};\n\nexport const loader: LoaderFunction = async ({\n  params,\n}): Promise<Tree | null | ErrorData> => {\n  try {\n    const project = await db.project.loadById(params.projectId);\n    return await db.tree.loadByProject(project, \"production\");\n  } catch (error) {\n    if (error instanceof Error) {\n      return {\n        errors: error.message,\n      };\n    }\n  }\n  return { errors: \"Unexpected error\" };\n};\n", "import { type ActionFunction } from \"@remix-run/node\";\nimport * as db from \"apps/designer/app/shared/db\";\n\nexport const action: ActionFunction = async ({ request }) => {\n  const formData = await request.formData();\n  const domain = formData.get(\"domain\") as string | null;\n  const projectId = formData.get(\"projectId\") as string | null;\n  try {\n    const project = await db.misc.publish({ projectId, domain });\n    return { domain: project.domain };\n  } catch (error) {\n    if (error instanceof Error) {\n      return {\n        errors: error.message,\n      };\n    }\n  }\n  return { errors: \"Unexpected error\" };\n};\n", "import { ActionFunction, redirect } from \"@remix-run/node\";\nimport config from \"apps/designer/app/config\";\nimport { authenticator } from \"apps/designer/app/services/auth.server\";\nimport { sentryException } from \"apps/designer/app/shared/sentry\";\nimport {\n  ensureUserCookie,\n  AUTH_PROVIDERS,\n} from \"apps/designer/app/shared/session\";\n\nexport default function GH() {\n  return null;\n}\n\nexport const action: ActionFunction = async ({ request }) => {\n  try {\n    const { userId } = await ensureUserCookie(request);\n    return await authenticator.authenticate(\"github\", request, {\n      context: {\n        userId,\n      },\n      successRedirect: config.dashboardPath,\n      throwOnError: true,\n    });\n  } catch (error: unknown) {\n    // all redirects are basically errors and in that case we don't want to catch it\n    if (error instanceof Response) return error;\n    if (error instanceof Error) {\n      sentryException({\n        message: error.message,\n        extra: {\n          loginMethod: AUTH_PROVIDERS.LOGIN_GITHUB,\n        },\n      });\n      return redirect(\n        `${config.loginPath}?error=${AUTH_PROVIDERS.LOGIN_GITHUB}&message=${\n          error?.message || \"\"\n        }`\n      );\n    }\n  }\n};\n", "import { User } from \"@prisma/client\";\nimport { Authenticator } from \"remix-auth\";\nimport { FormStrategy } from \"remix-auth-form\";\nimport { GitHubStrategy } from \"remix-auth-github\";\nimport { GoogleStrategy } from \"remix-auth-google\";\nimport config from \"apps/designer/app/config\";\nimport { sessionStorage } from \"apps/designer/app/services/session.server\";\nimport {\n  createOrLoginWithDev,\n  createOrLoginWithGithub,\n  createOrLoginWithGoogle,\n} from \"apps/designer/app/shared/db/user.server\";\nimport { sentryException } from \"apps/designer/app/shared/sentry\";\nimport { AUTH_PROVIDERS } from \"apps/designer/app/shared/session\";\n\nconst url = `${\n  process.env.VERCEL_URL\n    ? `https://${process.env.VERCEL_URL}`\n    : `http://localhost:${process.env.PORT || 3000}`\n}${config.authPath}`;\n\nconst github = new GitHubStrategy(\n  {\n    clientID: process.env.GH_CLIENT_ID as string,\n    clientSecret: process.env.GH_CLIENT_SECRET as string,\n    callbackURL: `${url}${config.githubCallbackPath}`,\n  },\n  async ({ profile, context }) => {\n    const user = await createOrLoginWithGithub(profile, context?.userId);\n\n    return user;\n  }\n);\n\nconst google = new GoogleStrategy(\n  {\n    clientID: process.env.GOOGLE_CLIENT_ID as string,\n    clientSecret: process.env.GOOGLE_CLIENT_SECRET as string,\n    callbackURL: `${url}${config.googleCallbackPath}`,\n  },\n  async ({ profile, context }) => {\n    const user = await createOrLoginWithGoogle(profile, context?.userId);\n\n    return user;\n  }\n);\n\n// Create an instance of the authenticator, pass a generic with what\n// strategies will return and will store in the session\nexport const authenticator = new Authenticator<User>(sessionStorage);\nif (process.env.GH_CLIENT_ID && process.env.GH_CLIENT_SECRET) {\n  authenticator.use(github, \"github\");\n}\nif (process.env.GOOGLE_CLIENT_ID && process.env.GOOGLE_CLIENT_SECRET) {\n  authenticator.use(google, \"google\");\n}\nif (process.env.DEV_LOGIN === \"true\") {\n  authenticator.use(\n    new FormStrategy(async ({ form }) => {\n      const secret = form.get(\"secret\");\n\n      if (secret === process.env.AUTH_SECRET) {\n        try {\n          const user = await createOrLoginWithDev(secret);\n          return user;\n        } catch (error: unknown) {\n          if (error instanceof Error) {\n            sentryException({\n              message: error.message,\n              extra: {\n                loginMethod: AUTH_PROVIDERS.LOGIN_DEV,\n              },\n            });\n          }\n        }\n      }\n\n      throw new Error(\"The dev login code is incorrect\");\n    }),\n    \"dev\"\n  );\n}\n", "import { createCookieSessionStorage } from \"@remix-run/node\";\n\n// export the whole sessionStorage object\nexport const sessionStorage = createCookieSessionStorage({\n  cookie: {\n    maxAge: 60 * 60 * 24 * 30,\n    name: \"_session\", // use any name you want here\n    sameSite: \"lax\", // this helps with CSRF\n    path: \"/\", // remember to add this so the cookie will work in all routes\n    httpOnly: true, // for security reasons, make this cookie http only\n    secrets: process.env.AUTH_SECRET ? [process.env.AUTH_SECRET] : undefined, // replace this with an actual secret\n    secure: process.env.NODE_ENV === \"production\", // enable this in prod only\n  },\n});\n\n// you can also export the methods individually for your own usage\nexport const { getSession, commitSession, destroySession } = sessionStorage;\n", "import { User } from \"@prisma/client\";\nimport { GitHubProfile } from \"remix-auth-github\";\nimport { GoogleProfile } from \"remix-auth-google\";\nimport { prisma } from \"./prisma.server\";\n\nconst genericCreateAccount = async (\n  userData: {\n    email: string;\n    username: string;\n    image: string;\n    provider: string;\n  },\n  userId: string\n): Promise<User> => {\n  const existingUserWithId = await prisma.user.findUnique({\n    where: {\n      id: userId,\n    },\n  });\n  if (existingUserWithId) {\n    const connectedUser = await prisma.user.update({\n      where: {\n        id: userId,\n      },\n      data: userData,\n    });\n\n    if (connectedUser.teamId) {\n      return connectedUser;\n    }\n\n    await prisma.team.create({\n      data: {\n        users: {\n          connect: {\n            id: connectedUser.id,\n          },\n        },\n      },\n    });\n\n    return connectedUser;\n  }\n\n  const existingUserWithEmail = await prisma.user.findUnique({\n    where: {\n      email: userData.email,\n    },\n  });\n\n  if (existingUserWithEmail) {\n    if (existingUserWithEmail.teamId) {\n      return existingUserWithEmail;\n    }\n    await prisma.team.create({\n      data: {\n        users: {\n          connect: {\n            id: existingUserWithEmail.id,\n          },\n        },\n      },\n    });\n\n    return existingUserWithEmail;\n  }\n\n  const newTeam = await prisma.team.create({\n    data: {\n      users: {\n        create: {\n          id: userId,\n          ...userData,\n        },\n      },\n    },\n    include: {\n      users: {\n        where: {\n          id: userId,\n        },\n      },\n    },\n  });\n\n  return newTeam.users[0];\n};\n\nexport const createOrLoginWithGithub = async (\n  profile: GitHubProfile,\n  userId: string\n): Promise<User> => {\n  const userData = {\n    email: profile._json.email,\n    username: profile.displayName,\n    image: profile._json.avatar_url,\n    provider: profile.provider,\n  };\n  const newUser = await genericCreateAccount(userData, userId);\n  return newUser;\n};\n\nexport const createOrLoginWithGoogle = async (\n  profile: GoogleProfile,\n  userId: string\n): Promise<User> => {\n  const userData = {\n    email: profile._json.email,\n    username: profile.displayName,\n    image: profile._json.picture,\n    provider: profile.provider,\n  };\n  const newUser = await genericCreateAccount(userData, userId);\n  return newUser;\n};\n\nexport const createOrLoginWithDev = async (userId: string): Promise<User> => {\n  const userData = {\n    email: \"hello@webstudio.is\",\n    username: \"admin\",\n    image: \"\",\n    provider: \"dev\",\n  };\n\n  const newUser = await genericCreateAccount(userData, userId);\n  return newUser;\n};\n", "import { LoaderFunction, redirect } from \"@remix-run/node\";\nimport config from \"apps/designer/app/config\";\nimport { authenticator } from \"apps/designer/app/services/auth.server\";\nimport {\n  ensureUserCookie,\n  AUTH_PROVIDERS,\n} from \"apps/designer/app/shared/session\";\n\nexport const loader: LoaderFunction = async ({ request }) => {\n  const { userId } = await ensureUserCookie(request);\n  const url = new URL(request.url);\n  const error = url.searchParams.get(\"error\");\n  const error_description = url.searchParams.get(\"error_description\");\n  if (error) {\n    return redirect(\n      `${config.loginPath}?error=${AUTH_PROVIDERS.LOGIN_GITHUB}&message=${\n        error_description || error\n      }`\n    );\n  }\n  return authenticator.authenticate(\"github\", request, {\n    context: {\n      userId,\n    },\n    successRedirect: config.dashboardPath,\n    failureRedirect: config.loginPath,\n  });\n};\n", "import { ActionFunction, LoaderFunction, redirect } from \"@remix-run/node\";\nimport config from \"apps/designer/app/config\";\nimport { authenticator } from \"apps/designer/app/services/auth.server\";\nimport { sentryException } from \"apps/designer/app/shared/sentry\";\nimport {\n  ensureUserCookie,\n  AUTH_PROVIDERS,\n} from \"apps/designer/app/shared/session\";\n\nexport default function Google() {\n  return null;\n}\n\nexport const loader: LoaderFunction = () => redirect(\"/login\");\n\nexport const action: ActionFunction = async ({ request }) => {\n  try {\n    const { userId } = await ensureUserCookie(request);\n    return await authenticator.authenticate(\"google\", request, {\n      context: {\n        userId,\n      },\n      successRedirect: config.dashboardPath,\n      throwOnError: true,\n    });\n  } catch (error: unknown) {\n    // all redirects are basically errors and in that case we don't want to catch it\n    if (error instanceof Response) return error;\n    if (error instanceof Error) {\n      sentryException({\n        message: error.message,\n        extra: {\n          loginMethod: AUTH_PROVIDERS.LOGIN_GOOGLE,\n        },\n      });\n      return redirect(\n        `${config.loginPath}?error=${AUTH_PROVIDERS.LOGIN_GOOGLE}&message=${\n          error?.message || \"\"\n        }`\n      );\n    }\n  }\n};\n", "import { LoaderFunction } from \"@remix-run/node\";\nimport config from \"apps/designer/app/config\";\nimport { authenticator } from \"apps/designer/app/services/auth.server\";\nimport { ensureUserCookie } from \"apps/designer/app/shared/session\";\n\nexport const loader: LoaderFunction = async ({ request }) => {\n  const { userId } = await ensureUserCookie(request);\n  return authenticator.authenticate(\"google\", request, {\n    successRedirect: config.dashboardPath,\n    failureRedirect: config.loginPath,\n    context: {\n      userId,\n    },\n  });\n};\n", "import { type ActionFunction } from \"@remix-run/node\";\nimport * as db from \"apps/designer/app/shared/db\";\nimport { type SyncItem } from \"immerhin\";\nimport { type Project, type Tree } from \"@webstudio-is/sdk\";\n\nconst updaters = {\n  root: db.tree.patchRoot,\n  props: db.props.patch,\n  breakpoints: db.breakpoints.patch,\n};\n\ntype UpdaterKey = keyof typeof updaters;\n\ntype PatchData = {\n  transactions: Array<SyncItem>;\n  treeId: Tree[\"id\"];\n  projectId: Project[\"id\"];\n};\n\nexport const action: ActionFunction = async ({ request }) => {\n  const { treeId, projectId, transactions }: PatchData = await request.json();\n  if (treeId === undefined) return { errors: \"Tree id required\" };\n  if (projectId === undefined) return { errors: \"Project id required\" };\n  // @todo parallelize the updates\n  // currently not possible because we fetch the entire tree\n  // and parallelized updates will cause unpredictable side effects\n  for await (const transaction of transactions) {\n    for await (const change of transaction.changes) {\n      const { namespace, patches } = change;\n      if (namespace in updaters === false) {\n        return { errors: `Unknown namespace \"${namespace}\"` };\n      }\n      await updaters[namespace as UpdaterKey]({ treeId, projectId }, patches);\n    }\n  }\n  return { status: \"ok\" };\n};\n", "import type { LoaderFunction, MetaFunction } from \"@remix-run/node\";\nimport { Designer } from \"apps/designer/app/shared/documents/designer\";\nimport env from \"apps/designer/app/env.server\";\n\nexport const loader: LoaderFunction = () => ({\n  env,\n});\n\nexport const meta: MetaFunction = () => {\n  return { title: \"Webstudio Dashboard\" };\n};\n\nexport default Designer;\n", "import { Links, LiveReload, Meta, Outlet, Scripts } from \"@remix-run/react\";\nimport { CriticalCss } from \"@webstudio-is/sdk\";\nimport { darkTheme } from \"apps/designer/app/shared/design-system\";\nimport { Env } from \"apps/designer/app/shared/env\";\n\nexport const Designer = () => {\n  return (\n    <html lang=\"en\">\n      <head>\n        <meta charSet=\"utf-8\" />\n        <meta name=\"viewport\" content=\"width=device-width,initial-scale=1\" />\n        <Meta />\n        <Links />\n        <CriticalCss />\n      </head>\n      <body className={darkTheme}>\n        <Outlet />\n        <Env />\n        <Scripts />\n        {process.env.NODE_ENV === \"development\" && <LiveReload />}\n      </body>\n    </html>\n  );\n};\n", "// Environment variables we want to send to the UI inlined in the document.\n// Never use a private key here, because it will become public.\nconst env = {\n  SENTRY_DSN: process.env.SENTRY_DSN,\n  VERCEL_ENV: process.env.VERCEL_ENV,\n} as const;\n\nexport default env;\n\nexport type Env = typeof env;\n", "import { useLoaderData } from \"@remix-run/react\";\nimport {\n  redirect,\n  type LoaderFunction,\n  type ActionFunction,\n  json,\n} from \"@remix-run/node\";\nimport { Dashboard, links } from \"apps/designer/app/dashboard\";\nimport * as db from \"apps/designer/app/shared/db\";\nimport config from \"apps/designer/app/config\";\nimport { ensureUserCookie } from \"apps/designer/app/shared/session\";\nimport { authenticator } from \"apps/designer/app/services/auth.server\";\nexport { links };\n\nexport const action: ActionFunction = async ({ request }) => {\n  const formData = await request.formData();\n  const title = formData.get(\"project\");\n  if (typeof title !== \"string\") return { errors: \"Title required\" };\n  const { userId, headers } = await ensureUserCookie(request);\n  const authenticatedUser = await authenticator.isAuthenticated(request);\n  try {\n    const project = await db.project.create({\n      title,\n      userId: authenticatedUser?.id || userId,\n    });\n    return redirect(`${config.designerPath}/${project?.id}`, { headers });\n  } catch (error) {\n    if (error instanceof Error) {\n      return { errors: error.message };\n    }\n  }\n  return { errors: \"Unexpected error\" };\n};\n\nexport const loader: LoaderFunction = async ({ request }) => {\n  const user = await authenticator.isAuthenticated(request);\n  if (!user) {\n    return redirect(config.loginPath);\n  }\n  const { headers } = await ensureUserCookie(request);\n  const projects = await db.project.loadManyByUserId(user.id);\n  return json({ config, projects, user }, headers);\n};\n\nconst DashboardRoute = () => {\n  const { config, projects, user } = useLoaderData();\n  return <Dashboard config={config} user={user} projects={projects} />;\n};\n\nexport default DashboardRoute;\n", "import { useActionData } from \"@remix-run/react\";\n\nimport { Flex } from \"apps/designer/app/shared/design-system\";\nimport interStyles from \"~/shared/font-faces/inter.css\";\nimport dashboardStyles from \"./dashboard.css\";\nimport { User } from \"@prisma/client\";\nimport { DashboardHeader } from \"./components/header\";\nimport { SelectProjectCard } from \"./components/card\";\n\nexport const links = () => {\n  return [\n    {\n      rel: \"stylesheet\",\n      href: interStyles,\n    },\n    {\n      rel: \"stylesheet\",\n      href: dashboardStyles,\n    },\n  ];\n};\n\ntype DashboardProps = {\n  projects?: Array<{ id: string; title: string }>;\n  user: User;\n  config: { designerPath: \"string\" };\n};\n\nexport const Dashboard = ({ projects = [], config, user }: DashboardProps) => {\n  const actionData = useActionData();\n  return (\n    <>\n      <DashboardHeader user={user} />\n      <Flex\n        css={{ height: \"100vh\" }}\n        direction=\"column\"\n        align=\"center\"\n        justify=\"center\"\n      >\n        <SelectProjectCard\n          projects={projects}\n          config={config}\n          errors={actionData?.errors}\n        />\n      </Flex>\n    </>\n  );\n};\n", "import { ChevronDownIcon } from \"@radix-ui/react-icons\";\nimport { Avatar } from \"apps/designer/app/shared/design-system/components/avatar\";\nimport {\n  DropdownMenu,\n  DropdownMenuTrigger,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  Button,\n  Text,\n  Flex,\n} from \"apps/designer/app/shared/design-system\";\nimport { User } from \"@prisma/client\";\nimport { useNavigate } from \"react-router-dom\";\n\nexport const DashboardHeader = ({ user }: { user: User }) => {\n  const navigate = useNavigate();\n  const userNameFallback = (user?.username || user?.email || \"X\")\n    .charAt(0)\n    .toLocaleUpperCase();\n\n  return (\n    <Flex\n      as=\"header\"\n      align=\"center\"\n      justify=\"end\"\n      css={{\n        p: \"$1\",\n        bc: \"$loContrast\",\n        borderBottom: \"1px solid $slate8\",\n      }}\n    >\n      <Flex gap=\"1\" align=\"center\">\n        <DropdownMenu>\n          <DropdownMenuTrigger asChild>\n            <Button variant=\"raw\" aria-label=\"Menu Button\">\n              <Flex gap=\"1\" align=\"center\" css={{ height: \"$5\" }}>\n                <Avatar\n                  src={user?.image || undefined}\n                  fallback={userNameFallback}\n                />\n\n                <ChevronDownIcon width={15} height={15} color=\"white\" />\n              </Flex>\n            </Button>\n          </DropdownMenuTrigger>\n          <DropdownMenuContent>\n            <DropdownMenuItem onSelect={() => navigate(\"/logout\")}>\n              <Text>Logout</Text>\n            </DropdownMenuItem>\n          </DropdownMenuContent>\n        </DropdownMenu>\n      </Flex>\n    </Flex>\n  );\n};\n", "import React from \"react\";\nimport { styled, VariantProps, CSS } from \"../stitches.config\";\nimport * as AvatarPrimitive from \"@radix-ui/react-avatar\";\nimport { Box } from \"./box\";\nimport { Status } from \"./status\";\n\nconst StyledAvatar = styled(AvatarPrimitive.Root, {\n  alignItems: \"center\",\n  justifyContent: \"center\",\n  verticalAlign: \"middle\",\n  overflow: \"hidden\",\n  userSelect: \"none\",\n  boxSizing: \"border-box\",\n  display: \"flex\",\n  flexShrink: 0,\n  position: \"relative\",\n  border: \"none\",\n  fontFamily: \"inherit\",\n  lineHeight: \"1\",\n  margin: \"0\",\n  outline: \"none\",\n  padding: \"0\",\n  fontWeight: \"500\",\n  color: \"$hiContrast\",\n\n  \"&::before\": {\n    content: '\"\"',\n    position: \"absolute\",\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0,\n    borderRadius: \"inherit\",\n    boxShadow: \"inset 0px 0px 1px rgba(0, 0, 0, 0.12)\",\n  },\n\n  variants: {\n    size: {\n      \"1\": {\n        width: \"$3\",\n        height: \"$3\",\n      },\n      \"2\": {\n        width: \"$5\",\n        height: \"$5\",\n      },\n      \"3\": {\n        width: \"$6\",\n        height: \"$6\",\n      },\n      \"4\": {\n        width: \"$7\",\n        height: \"$7\",\n      },\n      \"5\": {\n        width: \"$8\",\n        height: \"$8\",\n      },\n      \"6\": {\n        width: \"$9\",\n        height: \"$9\",\n      },\n    },\n    variant: {\n      hiContrast: {\n        backgroundColor: \"$hiContrast\",\n        color: \"$loContrast\",\n      },\n      gray: {\n        backgroundColor: \"$slate5\",\n      },\n      tomato: {\n        backgroundColor: \"$tomato5\",\n      },\n      red: {\n        backgroundColor: \"$red5\",\n      },\n      crimson: {\n        backgroundColor: \"$crimson5\",\n      },\n      pink: {\n        backgroundColor: \"$pink5\",\n      },\n      plum: {\n        backgroundColor: \"$plum5\",\n      },\n      purple: {\n        backgroundColor: \"$purple5\",\n      },\n      violet: {\n        backgroundColor: \"$violet5\",\n      },\n      indigo: {\n        backgroundColor: \"$indigo5\",\n      },\n      blue: {\n        backgroundColor: \"$blue5\",\n      },\n      cyan: {\n        backgroundColor: \"$cyan5\",\n      },\n      teal: {\n        backgroundColor: \"$teal5\",\n      },\n      green: {\n        backgroundColor: \"$green5\",\n      },\n      grass: {\n        backgroundColor: \"$grass5\",\n      },\n      brown: {\n        backgroundColor: \"$brown5\",\n      },\n      bronze: {\n        backgroundColor: \"$bronze5\",\n      },\n      gold: {\n        backgroundColor: \"$gold5\",\n      },\n      sky: {\n        backgroundColor: \"$sky5\",\n      },\n      mint: {\n        backgroundColor: \"$mint5\",\n      },\n      lime: {\n        backgroundColor: \"$lime5\",\n      },\n      yellow: {\n        backgroundColor: \"$yellow5\",\n      },\n      amber: {\n        backgroundColor: \"$amber5\",\n      },\n      orange: {\n        backgroundColor: \"$orange5\",\n      },\n    },\n    shape: {\n      square: {\n        borderRadius: \"$2\",\n      },\n      circle: {\n        borderRadius: \"50%\",\n      },\n    },\n    inactive: {\n      true: {\n        opacity: \".3\",\n      },\n    },\n    interactive: {\n      true: {\n        \"&::after\": {\n          content: '\"\"',\n          position: \"absolute\",\n          top: \"0\",\n          right: \"0\",\n          bottom: \"0\",\n          left: \"0\",\n          backgroundColor: \"rgba(0,0,0,.08)\",\n          opacity: \"0\",\n          pointerEvents: \"none\",\n          transition: \"opacity 25ms linear\",\n        },\n        \"@hover\": {\n          \"&:hover\": {\n            \"&::after\": {\n              opacity: \"1\",\n            },\n          },\n        },\n        '&[data-state=\"open\"]': {\n          \"&::after\": {\n            backgroundColor: \"rgba(0,0,0,.12)\",\n            opacity: \"1\",\n          },\n        },\n      },\n    },\n  },\n  defaultVariants: {\n    size: \"2\",\n    variant: \"gray\",\n    shape: \"circle\",\n  },\n});\n\nconst StyledAvatarImage = styled(AvatarPrimitive.Image, {\n  display: \"flex\",\n  objectFit: \"cover\",\n  boxSizing: \"border-box\",\n  height: \"100%\",\n  verticalAlign: \"middle\",\n  width: \"100%\",\n});\n\nconst StyledAvatarFallback = styled(AvatarPrimitive.Fallback, {\n  textTransform: \"uppercase\",\n  borderRadius: \"50%\",\n  variants: {\n    size: {\n      \"1\": {\n        fontSize: \"10px\",\n        lineHeight: \"15px\",\n      },\n      \"2\": {\n        fontSize: \"$3\",\n      },\n      \"3\": {\n        fontSize: \"$6\",\n      },\n      \"4\": {\n        fontSize: \"$7\",\n      },\n      \"5\": {\n        fontSize: \"$8\",\n      },\n      \"6\": {\n        fontSize: \"$9\",\n      },\n    },\n  },\n  defaultVariants: {\n    size: \"2\",\n  },\n});\n\nexport const AvatarNestedItem = styled(\"div\", {\n  boxShadow: \"0 0 0 2px $colors$loContrast\",\n  borderRadius: \"50%\",\n});\n\nexport const AvatarGroup = styled(\"div\", {\n  display: \"flex\",\n  flexDirection: \"row-reverse\",\n  [`& ${AvatarNestedItem}:nth-child(n+2)`]: {\n    marginRight: \"-$1\",\n  },\n});\n\ntype StatusVariants = React.ComponentProps<typeof Status>;\ntype StatusColors = Pick<StatusVariants, \"variant\">;\n\ntype AvatarVariants = VariantProps<typeof StyledAvatar>;\ntype AvatarPrimitiveProps = React.ComponentProps<typeof AvatarPrimitive.Root>;\ntype AvatarOwnProps = AvatarPrimitiveProps &\n  AvatarVariants & {\n    css?: CSS;\n    alt?: string;\n    src?: string;\n    fallback?: React.ReactNode;\n    status?: StatusColors[\"variant\"];\n  };\n\nexport const Avatar = React.forwardRef<\n  React.ElementRef<typeof StyledAvatar>,\n  AvatarOwnProps\n>(\n  (\n    { alt, src, fallback, size, variant, shape, css, status, ...props },\n    forwardedRef\n  ) => {\n    return (\n      <Box\n        css={{\n          ...css,\n          position: \"relative\",\n          height: \"fit-content\",\n          width: \"fit-content\",\n        }}\n      >\n        <StyledAvatar\n          {...props}\n          ref={forwardedRef}\n          size={size}\n          variant={variant}\n          shape={shape}\n        >\n          <StyledAvatarImage alt={alt} src={src} />\n          <StyledAvatarFallback size={size}>{fallback}</StyledAvatarFallback>\n        </StyledAvatar>\n        {status && (\n          <Box\n            css={{\n              position: \"absolute\",\n              bottom: \"0\",\n              right: \"0\",\n              boxShadow: \"0 0 0 3px $colors$loContrast\",\n              borderRadius: \"$round\",\n              mr: \"-3px\",\n              mb: \"-3px\",\n            }}\n          >\n            <Status size={size && size > 2 ? \"2\" : \"1\"} variant={status} />\n          </Box>\n        )}\n      </Box>\n    );\n  }\n);\n\nAvatar.displayName = \"Avatar\";\n", "import { styled } from \"../stitches.config\";\n\nexport const Status = styled(\"div\", {\n  borderRadius: \"50%\",\n  flexShrink: 0,\n\n  variants: {\n    size: {\n      \"1\": {\n        width: 5,\n        height: 5,\n      },\n      \"2\": {\n        width: 9,\n        height: 9,\n      },\n    },\n    variant: {\n      gray: {\n        backgroundColor: \"$slate7\",\n      },\n      blue: {\n        backgroundColor: \"$blue9\",\n      },\n      green: {\n        backgroundColor: \"$green9\",\n      },\n      yellow: {\n        backgroundColor: \"$yellow9\",\n      },\n      red: {\n        backgroundColor: \"$red9\",\n      },\n    },\n  },\n  defaultVariants: {\n    size: \"2\",\n    variant: \"gray\",\n  },\n});\n", "import { useState } from \"react\";\nimport { Form, useTransition } from \"@remix-run/react\";\nimport { useNavigate } from \"react-router-dom\";\n\nimport {\n  Flex,\n  Card,\n  Select,\n  TextField,\n  Button,\n  Heading,\n  Text,\n} from \"apps/designer/app/shared/design-system\";\n\ntype SelectProjectProjectCardProps = {\n  projects: Array<{ id: string; title: string }>;\n  config: { designerPath: \"string\" };\n  errors: string;\n};\n\nexport const SelectProjectCard = ({\n  projects,\n  config,\n  errors,\n}: SelectProjectProjectCardProps) => {\n  const [selectedProject, setSelectedProject] = useState(\"\");\n  const [newProject, setNewProject] = useState(\"My awesome project\");\n  const navigate = useNavigate();\n  const transition = useTransition();\n\n  const handleOpen = () => {\n    navigate(`${config.designerPath}/${selectedProject}`);\n  };\n\n  const options = [\"\", ...projects.map((project) => project.id)];\n\n  return (\n    <Card size={2}>\n      <Flex direction=\"column\" gap=\"4\">\n        <Heading size=\"2\" css={{ textAlign: \"center\" }}>\n          Select a project\n        </Heading>\n        <Select\n          size={2}\n          name=\"project\"\n          options={options}\n          onChange={setSelectedProject}\n          value={selectedProject}\n          placeholder=\"Create new project\"\n          getLabel={(option) =>\n            projects.find((project) => project.id === option)?.title ||\n            \"Create new project\"\n          }\n        />\n        {selectedProject === \"\" ? (\n          <Form method=\"post\">\n            <Flex gap=\"1\">\n              <TextField\n                size={2}\n                state={errors ? \"invalid\" : undefined}\n                name=\"project\"\n                defaultValue={newProject}\n                onFocus={(event) => {\n                  event.target.select();\n                }}\n                onChange={(event) => {\n                  setNewProject(event.target.value);\n                }}\n              />\n              <Button\n                size={2}\n                disabled={\n                  newProject.length === 0 || transition.state === \"submitting\"\n                }\n                type=\"submit\"\n              >\n                {transition.state === \"submitting\" ? \"Creating...\" : \"Create\"}\n              </Button>\n            </Flex>\n            {errors ? (\n              <Text variant=\"red\" css={{ marginTop: \"$1\" }}>\n                {errors}\n              </Text>\n            ) : null}\n          </Form>\n        ) : (\n          <Button onClick={handleOpen} size={2}>\n            Open\n          </Button>\n        )}\n      </Flex>\n    </Card>\n  );\n};\n", "import { ActionFunction, redirect } from \"@remix-run/node\";\nimport config from \"apps/designer/app/config\";\nimport { authenticator } from \"apps/designer/app/services/auth.server\";\nimport { AUTH_PROVIDERS } from \"apps/designer/app/shared/session\";\n\nexport default function Dev() {\n  return null;\n}\n\nexport const action: ActionFunction = async ({ request }) => {\n  try {\n    return await authenticator.authenticate(\"dev\", request, {\n      successRedirect: config.dashboardPath,\n      throwOnError: true,\n    });\n  } catch (error: unknown) {\n    // all redirects are basically errors and in that case we don't want to catch it\n    if (error instanceof Response) return error;\n    if (error instanceof Error) {\n      return redirect(\n        `${config.loginPath}?error=${AUTH_PROVIDERS.LOGIN_DEV}&message=${\n          error?.message || \"\"\n        }`\n      );\n    }\n  }\n};\n", "import type { LoaderFunction, MetaFunction } from \"@remix-run/node\";\nimport { Designer } from \"apps/designer/app/shared/documents/designer\";\nimport env from \"apps/designer/app/env.server\";\n\nexport const loader: LoaderFunction = () => ({\n  env,\n});\n\nexport const meta: MetaFunction = () => {\n  return { title: \"Webstudio\" };\n};\n\nexport default Designer;\n", "import { useLoaderData } from \"@remix-run/react\";\nimport type { LoaderFunction } from \"@remix-run/node\";\nimport type { Project } from \"@webstudio-is/sdk\";\nimport { Designer, links } from \"apps/designer/app/designer\";\nimport * as db from \"apps/designer/app/shared/db\";\nimport config from \"apps/designer/app/config\";\nimport env from \"apps/designer/app/env.server\";\nexport { links };\n\nexport const loader: LoaderFunction = async ({ params }) => {\n  if (params.id === undefined) throw new Error(\"Project id undefined\");\n  const project = await db.project.loadById(params.id);\n  if (project === null) {\n    return { errors: `Project \"${params.id}\" not found` };\n  }\n  return { config, project, env };\n};\n\ntype Data = {\n  config: typeof config;\n  project: Project;\n};\n\ntype Error = {\n  errors: \"string\";\n};\n\nconst DesignerRoute = () => {\n  const data = useLoaderData<Data | Error>();\n  if (\"errors\" in data) {\n    return <p>{data.errors}</p>;\n  }\n  return <Designer {...data} />;\n};\n\nexport default DesignerRoute;\n", "import { useCallback, useState } from \"react\";\nimport { DndProvider } from \"react-dnd\";\nimport { HTML5Backend } from \"react-dnd-html5-backend\";\nimport { type Project, useSubscribe, usePublish } from \"@webstudio-is/sdk\";\nimport type { Config } from \"apps/designer/app/config\";\nimport type {\n  HoveredInstanceData,\n  SelectedInstanceData,\n} from \"apps/designer/app/shared/canvas-components\";\nimport {\n  Box,\n  Flex,\n  Grid,\n  type CSS,\n} from \"apps/designer/app/shared/design-system\";\nimport interStyles from \"~/shared/font-faces/inter.css\";\nimport { SidebarLeft } from \"./features/sidebar-left\";\nimport { Inspector } from \"./features/inspector\";\nimport {\n  useHoveredInstanceData,\n  useSelectedInstanceData,\n  useSyncStatus,\n} from \"./shared/nano-states\";\nimport { Topbar } from \"./features/topbar\";\nimport designerStyles from \"./designer.css\";\nimport { Breadcrumbs } from \"./features/breadcrumbs\";\nimport { TreePrevew } from \"./features/tree-preview\";\nimport {\n  useUpdateCanvasWidth,\n  useSubscribeBreakpoints,\n} from \"./features/breakpoints\";\nimport {\n  useReadCanvasRect,\n  Workspace,\n  CanvasIframe,\n} from \"./features/workspace\";\nimport { usePublishShortcuts } from \"./shared/shortcuts\";\nimport { type SyncStatus } from \"apps/designer/app/shared/sync\";\nimport {\n  useIsPreviewMode,\n  useRootInstance,\n} from \"apps/designer/app/shared/nano-states\";\n\nexport const links = () => {\n  return [\n    { rel: \"stylesheet\", href: interStyles },\n    { rel: \"stylesheet\", href: designerStyles },\n  ];\n};\n\nconst useSubscribeRootInstance = () => {\n  const [, setValue] = useRootInstance();\n  useSubscribe<\"loadRootInstance\">(\"loadRootInstance\", setValue);\n};\n\nconst useSubscribeSelectedInstanceData = () => {\n  const [, setValue] = useSelectedInstanceData();\n  useSubscribe<\"selectInstance\", SelectedInstanceData>(\n    \"selectInstance\",\n    setValue\n  );\n};\n\nconst useSubscribeHoveredInstanceData = () => {\n  const [, setValue] = useHoveredInstanceData();\n  useSubscribe<\"hoverInstance\", HoveredInstanceData>(\"hoverInstance\", setValue);\n};\n\nconst useSubscribeSyncStatus = () => {\n  const [, setValue] = useSyncStatus();\n  useSubscribe<\"syncStatus\", SyncStatus>(\"syncStatus\", setValue);\n};\n\nconst useIsDragging = (): [boolean, (isDragging: boolean) => void] => {\n  const [isDragging, setIsDragging] = useState<boolean>(false);\n  useSubscribe<\"dragStartInstance\">(\"dragStartInstance\", () => {\n    setIsDragging(true);\n  });\n  useSubscribe<\"dragEndInstance\">(\"dragEndInstance\", () => {\n    setIsDragging(false);\n  });\n  return [isDragging, setIsDragging];\n};\n\ntype SidePanelProps = {\n  children: JSX.Element | Array<JSX.Element>;\n  isPreviewMode: boolean;\n  css?: CSS;\n  gridArea: \"inspector\" | \"sidebar\";\n};\n\nconst SidePanel = ({\n  children,\n  isPreviewMode,\n  gridArea,\n  css,\n}: SidePanelProps) => {\n  if (isPreviewMode === true) return null;\n  return (\n    <Box\n      as=\"aside\"\n      css={{\n        gridArea,\n        display: \"flex\",\n        px: 0,\n        fg: 0,\n        // Left sidebar tabs won't be able to pop out to the right if we set overflowX to auto.\n        //overflowY: \"auto\",\n        bc: \"$loContrast\",\n        height: \"100%\",\n        ...css,\n      }}\n    >\n      {children}\n    </Box>\n  );\n};\n\nconst Main = ({ children }: { children: Array<JSX.Element> }) => (\n  <Flex\n    as=\"main\"\n    direction=\"column\"\n    css={{\n      gridArea: \"main\",\n      overflow: \"hidden\",\n    }}\n  >\n    {children}\n  </Flex>\n);\n\ntype ChromeWrapperProps = {\n  children: Array<JSX.Element>;\n  isPreviewMode: boolean;\n};\n\nconst ChromeWrapper = ({ children, isPreviewMode }: ChromeWrapperProps) => {\n  const gridLayout = isPreviewMode\n    ? {\n        gridTemplateColumns: \"auto 1fr\",\n        gridTemplateRows: \"auto 1fr\",\n        gridTemplateAreas: `\n                \"header header\"\n                \"sidebar main\"\n              `,\n      }\n    : {\n        gridTemplateColumns: \"auto 1fr 240px\",\n        gridTemplateRows: \"auto 1fr\",\n        gridTemplateAreas: `\n                \"header header header\"\n                \"sidebar main inspector\"\n              `,\n      };\n  return (\n    <Grid\n      css={{\n        height: \"100vh\",\n        overflow: \"hidden\",\n        display: \"grid\",\n        ...gridLayout,\n      }}\n    >\n      {children}\n    </Grid>\n  );\n};\n\ntype DesignerProps = {\n  config: Config;\n  project: Project;\n};\n\nexport const Designer = ({ config, project }: DesignerProps) => {\n  useSubscribeSyncStatus();\n  useSubscribeRootInstance();\n  useSubscribeSelectedInstanceData();\n  useSubscribeHoveredInstanceData();\n  useSubscribeBreakpoints();\n  const [publish, publishRef] = usePublish();\n  const [isPreviewMode] = useIsPreviewMode();\n  const [isDragging, setIsDragging] = useIsDragging();\n  usePublishShortcuts(publish);\n  const onRefReadCanvasWidth = useUpdateCanvasWidth();\n  const { onRef: onRefReadCanvas, onTransitionEnd } = useReadCanvasRect();\n\n  const iframeRefCallback = useCallback(\n    (ref) => {\n      publishRef.current = ref;\n      onRefReadCanvasWidth(ref);\n      onRefReadCanvas(ref);\n    },\n    [publishRef, onRefReadCanvasWidth, onRefReadCanvas]\n  );\n\n  return (\n    <DndProvider backend={HTML5Backend}>\n      <ChromeWrapper isPreviewMode={isPreviewMode}>\n        <SidePanel gridArea=\"sidebar\" isPreviewMode={isPreviewMode}>\n          <SidebarLeft onDragChange={setIsDragging} publish={publish} />\n        </SidePanel>\n        <Topbar\n          css={{ gridArea: \"header\" }}\n          config={config}\n          project={project}\n          publish={publish}\n        />\n        <Main>\n          <Workspace onTransitionEnd={onTransitionEnd} publish={publish}>\n            <CanvasIframe\n              ref={iframeRefCallback}\n              src={`${config.canvasPath}/${project.id}`}\n              pointerEvents={isDragging ? \"none\" : \"all\"}\n              title={project.title}\n              css={{\n                height: \"100%\",\n                width: \"100%\",\n              }}\n            />\n          </Workspace>\n          <Breadcrumbs publish={publish} />\n        </Main>\n        <SidePanel\n          gridArea=\"inspector\"\n          isPreviewMode={isPreviewMode}\n          css={{ overflow: \"hidden\" }}\n        >\n          {isDragging ? <TreePrevew /> : <Inspector publish={publish} />}\n        </SidePanel>\n      </ChromeWrapper>\n    </DndProvider>\n  );\n};\n", "import { useState, useCallback } from \"react\";\nimport { useSubscribe, type Publish } from \"@webstudio-is/sdk\";\nimport {\n  Box,\n  SidebarTabs,\n  SidebarTabsContent,\n  SidebarTabsList,\n  SidebarTabsTrigger,\n} from \"apps/designer/app/shared/design-system\";\nimport { useSelectedInstanceData } from \"../../shared/nano-states\";\nimport * as panels from \"./panels\";\nimport type { TabName } from \"./types\";\n\nconst sidebarTabsContentStyle = {\n  position: \"absolute\",\n  left: \"100%\",\n  width: 250,\n  height: \"100%\",\n  bc: \"$loContrast\",\n  outline: \"1px solid $slate6\",\n};\n\nconst none = { TabContent: () => null };\n\ntype SidebarLeftProps = {\n  onDragChange: (isDragging: boolean) => void;\n  publish: Publish;\n};\n\nexport const SidebarLeft = ({ onDragChange, publish }: SidebarLeftProps) => {\n  const [selectedInstanceData] = useSelectedInstanceData();\n  const [activeTab, setActiveTab] = useState<TabName>(\"none\");\n  const [isDragging, setIsDragging] = useState(false);\n  const { TabContent } = activeTab === \"none\" ? none : panels[activeTab];\n\n  useSubscribe<\"clickCanvas\">(\"clickCanvas\", () => {\n    setActiveTab(\"none\");\n  });\n  useSubscribe(\"dragStartInstance\", () => {\n    setIsDragging(true);\n  });\n  useSubscribe(\"dragEndInstance\", () => {\n    setIsDragging(false);\n  });\n\n  const handleDragChange = useCallback(\n    (isDragging: boolean) => {\n      // After dragging is done, container is going to become visible\n      // and we need to close it for good.\n      if (isDragging === false) setActiveTab(\"none\");\n      setIsDragging(isDragging);\n      onDragChange(isDragging);\n    },\n    [onDragChange]\n  );\n\n  return (\n    <Box css={{ position: \"relative\", zIndex: 1 }}>\n      <SidebarTabs activationMode=\"manual\" value={activeTab}>\n        <SidebarTabsList>\n          {(Object.keys(panels) as Array<TabName>).map((tabName: TabName) => (\n            <SidebarTabsTrigger\n              aria-label={tabName}\n              key={tabName}\n              value={tabName}\n              onClick={() => {\n                setActiveTab(activeTab !== tabName ? tabName : \"none\");\n              }}\n            >\n              {tabName === \"none\" ? null : panels[tabName].icon}\n            </SidebarTabsTrigger>\n          ))}\n        </SidebarTabsList>\n        <SidebarTabsContent\n          value={activeTab === \"none\" ? \"\" : activeTab}\n          css={{\n            ...sidebarTabsContentStyle,\n            // We need the node to be rendered but hidden\n            // to keep receiving the drag events.\n            visibility: isDragging ? \"hidden\" : \"visible\",\n            overflow: \"auto\",\n          }}\n        >\n          <TabContent\n            selectedInstanceData={selectedInstanceData}\n            publish={publish}\n            onSetActiveTab={setActiveTab}\n            onDragChange={handleDragChange}\n          />\n        </SidebarTabsContent>\n      </SidebarTabs>\n    </Box>\n  );\n};\n", "import { createValueContainer, useValue } from \"react-nano-state\";\nimport { type Breakpoint } from \"@webstudio-is/sdk\";\nimport {\n  type SelectedInstanceData,\n  type HoveredInstanceData,\n} from \"apps/designer/app/shared/canvas-components\";\nimport { type SyncStatus } from \"apps/designer/app/shared/sync\";\n\nconst selectedInstanceDataContainer = createValueContainer<\n  SelectedInstanceData | undefined\n>();\nexport const useSelectedInstanceData = () =>\n  useValue(selectedInstanceDataContainer);\n\nconst hoveredInstanceDataContainer = createValueContainer<\n  HoveredInstanceData | undefined\n>();\nexport const useHoveredInstanceData = () =>\n  useValue(hoveredInstanceDataContainer);\n\nconst isShareDialogOpenContainer = createValueContainer<boolean>(false);\nexport const useIsShareDialogOpen = () => useValue(isShareDialogOpenContainer);\n\nconst isPublishDialogOpenContainer = createValueContainer<boolean>(false);\nexport const useIsPublishDialogOpen = () =>\n  useValue(isPublishDialogOpenContainer);\n\nconst selectedBreakpointContainer = createValueContainer<\n  Breakpoint | undefined\n>();\nexport const useSelectedBreakpoint = () =>\n  useValue(selectedBreakpointContainer);\n\nconst zoomContainer = createValueContainer<number>(100);\nexport const useZoom = () => useValue(zoomContainer);\n\nconst canvasWidthContainer = createValueContainer<number>(0);\nexport const useCanvasWidth = () => useValue(canvasWidthContainer);\n\nconst canvasRectContainer = createValueContainer<DOMRect | undefined>();\nexport const useCanvasRect = () => useValue(canvasRectContainer);\n\nconst syncStatusContainer = createValueContainer<SyncStatus>(\"idle\");\nexport const useSyncStatus = () => useValue(syncStatusContainer);\n\nconst selectionRectContainer = createValueContainer<DOMRect | undefined>();\nexport const useSelectionRect = () => useValue(selectionRectContainer);\n", "export * as components from \"./components\";\nexport * as tree from \"./tree\";\n", "export * from \"./components\";\n", "import { useEffect, useRef, type MouseEventHandler, useCallback } from \"react\";\nimport { useDrag } from \"react-dnd\";\nimport { getEmptyImage } from \"react-dnd-html5-backend\";\nimport { type Instance, type Publish } from \"@webstudio-is/sdk\";\nimport { Flex } from \"apps/designer/app/shared/design-system\";\nimport { PlusIcon } from \"apps/designer/app/shared/icons\";\nimport {\n  primitives,\n  type DragData,\n} from \"apps/designer/app/shared/canvas-components\";\nimport { createInstance } from \"apps/designer/app/shared/tree-utils\";\nimport type { TabName } from \"../../types\";\nimport { CustomDragLayer } from \"./custom-drag-layer\";\nimport { ComponentThumb } from \"./component-thumb\";\n\ntype UseDraggableProps = {\n  component: Instance[\"component\"];\n  onDragChange: (isDragging: boolean) => void;\n};\n\nconst useDraggable = ({ component, onDragChange }: UseDraggableProps) => {\n  const lastIsDragging = useRef<boolean | void>();\n  const [{ isDragging }, dragRef, preview] = useDrag(\n    () => ({\n      type: component,\n      collect: (monitor) => ({\n        isDragging: monitor.isDragging(),\n      }),\n    }),\n    []\n  );\n\n  useEffect(() => {\n    if (lastIsDragging.current !== undefined) onDragChange(isDragging);\n    lastIsDragging.current = isDragging;\n  }, [isDragging, onDragChange]);\n\n  useEffect(() => {\n    preview(getEmptyImage(), { captureDraggingState: true });\n  }, [preview]);\n\n  return dragRef;\n};\n\ntype DraggableThumbProps = {\n  onClick: MouseEventHandler<HTMLDivElement>;\n} & UseDraggableProps;\n\nconst DraggableThumb = ({\n  component,\n  onDragChange,\n  onClick,\n}: DraggableThumbProps) => {\n  const dragRef = useDraggable({ component, onDragChange });\n  return (\n    <ComponentThumb component={component} ref={dragRef} onClick={onClick} />\n  );\n};\n\ntype TabContentProps = {\n  onDragChange: UseDraggableProps[\"onDragChange\"];\n  onSetActiveTab: (tabName: TabName) => void;\n  publish: Publish;\n};\n\nexport const TabContent = ({\n  onDragChange,\n  publish,\n  onSetActiveTab,\n}: TabContentProps) => {\n  const components = (\n    Object.keys(primitives) as Array<Instance[\"component\"]>\n  ).filter((component) => primitives[component].isInlineOnly === false);\n\n  const handleDragChange = useCallback(\n    (isDragging: boolean) => {\n      onDragChange(isDragging);\n      publish<\"dragStartInstance\" | \"dragEndInstance\">({\n        type: isDragging === true ? \"dragStartInstance\" : \"dragEndInstance\",\n      });\n    },\n    [onDragChange, publish]\n  );\n\n  return (\n    <Flex gap=\"1\" wrap=\"wrap\" css={{ padding: \"$1\" }}>\n      {components.map((component: Instance[\"component\"]) => (\n        <DraggableThumb\n          key={component}\n          component={component}\n          onClick={() => {\n            onSetActiveTab(\"none\");\n            publish<\"insertInstance\", { instance: Instance }>({\n              type: \"insertInstance\",\n              payload: { instance: createInstance({ component }) },\n            });\n          }}\n          onDragChange={handleDragChange}\n        />\n      ))}\n      <CustomDragLayer\n        onDrag={(dragData) => {\n          publish<\"dragInstance\", DragData>({\n            type: \"dragInstance\",\n            payload: {\n              instance: createInstance({ component: dragData.component }),\n              currentOffset: dragData.currentOffset,\n            },\n          });\n        }}\n      />\n    </Flex>\n  );\n};\n\nexport const icon = <PlusIcon />;\n", "import { useEffect } from \"react\";\nimport { createPortal } from \"react-dom\";\nimport { useDragLayer, type XYCoord } from \"react-dnd\";\nimport { type Instance } from \"@webstudio-is/sdk\";\nimport {\n  useCanvasRect,\n  useZoom,\n} from \"apps/designer/app/designer/shared/nano-states\";\nimport { ComponentThumb } from \"./component-thumb\";\n\nconst layerStyles = {\n  position: \"absolute\",\n  pointerEvents: \"none\",\n  zIndex: 1,\n  left: 0,\n  top: 0,\n  width: \"100%\",\n  height: \"100%\",\n} as const;\n\nexport type CustomDragLayerProps = {\n  onDrag: (dragData: {\n    component: Instance[\"component\"];\n    currentOffset: XYCoord;\n  }) => void;\n};\n\nexport const CustomDragLayer = ({ onDrag }: CustomDragLayerProps) => {\n  const { component, isDragging, clientOffset, sourceClientOffset } =\n    useDragLayer((monitor) => ({\n      component: monitor.getItemType() as Instance[\"component\"],\n      isDragging: monitor.isDragging(),\n      clientOffset: monitor.getClientOffset(),\n      sourceClientOffset: monitor.getSourceClientOffset(),\n    }));\n  const [canvasRect] = useCanvasRect();\n  const [zoom] = useZoom();\n\n  useEffect(() => {\n    if (\n      clientOffset === null ||\n      component === null ||\n      canvasRect === undefined\n    ) {\n      return;\n    }\n\n    const scale = zoom / 100;\n    const currentOffset = {\n      x: (clientOffset.x - canvasRect.x) / scale,\n      y: (clientOffset.y - canvasRect.y) / scale,\n    };\n\n    onDrag({\n      currentOffset,\n      component,\n    });\n  }, [clientOffset, component, onDrag, zoom, canvasRect]);\n\n  if (isDragging === false || sourceClientOffset === null) return null;\n\n  return createPortal(\n    <div style={layerStyles}>\n      <ComponentThumb\n        component={component}\n        style={{\n          transform: `translate3d(${sourceClientOffset.x}px, ${sourceClientOffset.y}px, 0)`,\n        }}\n        state=\"dragging\"\n      />\n    </div>,\n    document.body\n  );\n};\n", "import { type Instance } from \"@webstudio-is/sdk\";\nimport { forwardRef, type ElementRef, type ComponentProps } from \"react\";\nimport { primitives } from \"apps/designer/app/shared/canvas-components\";\nimport { Flex, Text, styled } from \"apps/designer/app/shared/design-system\";\n\nconst Thumb = styled(Flex, {\n  px: 5,\n  width: 75,\n  height: 75,\n  border: \"1px solid $slate6\",\n  userSelect: \"none\",\n  color: \"$hiContrast\",\n  cursor: \"grab\",\n  \"&:hover\": {\n    background: \"$slate3\",\n  },\n  variants: {\n    state: {\n      dragging: {\n        background: \"$slate3\",\n      },\n    },\n  },\n});\n\ntype ComponentThumbProps = {\n  component: Instance[\"component\"];\n} & ComponentProps<typeof Thumb>;\n\nexport const ComponentThumb = forwardRef<\n  ElementRef<typeof Thumb>,\n  ComponentThumbProps\n>(({ component, ...rest }, ref) => {\n  const { Icon, label } = primitives[component];\n  return (\n    <Thumb\n      direction=\"column\"\n      align=\"center\"\n      justify=\"center\"\n      gap=\"3\"\n      ref={ref}\n      {...rest}\n    >\n      <Icon width={30} height={30} />\n      <Text size=\"1\">{label}</Text>\n    </Thumb>\n  );\n});\n\nComponentThumb.displayName = \"ComponentThumb\";\n", "import { type Instance, type Publish } from \"@webstudio-is/sdk\";\nimport { ListNestedIcon } from \"apps/designer/app/shared/icons\";\nimport { Flex } from \"apps/designer/app/shared/design-system\";\nimport { type SelectedInstanceData } from \"apps/designer/app/shared/canvas-components\";\nimport { useSelectedInstancePath } from \"apps/designer/app/designer/shared/instance/use-selected-instance-path\";\nimport { Tree } from \"apps/designer/app/designer/shared/tree\";\nimport { useRootInstance } from \"apps/designer/app/shared/nano-states\";\n\ntype TabContentProps = {\n  publish: Publish;\n  selectedInstanceData?: SelectedInstanceData;\n};\n\nexport const TabContent = ({\n  publish,\n  selectedInstanceData,\n}: TabContentProps) => {\n  const [rootInstance] = useRootInstance();\n  const selectedInstancePath = useSelectedInstancePath(\n    selectedInstanceData?.id\n  );\n\n  if (rootInstance === undefined) return null;\n\n  return (\n    <Flex gap=\"3\" direction=\"column\" css={{ padding: \"$1\" }}>\n      <Tree\n        instance={rootInstance}\n        selectedInstancePath={selectedInstancePath}\n        selectedInstanceId={selectedInstanceData?.id}\n        onSelect={(instance) => {\n          publish<\"selectInstanceById\", Instance[\"id\"]>({\n            type: \"selectInstanceById\",\n            payload: instance.id,\n          });\n        }}\n      />\n    </Flex>\n  );\n};\n\nexport const icon = <ListNestedIcon />;\n", "import { Instance } from \"@webstudio-is/sdk\";\nimport { useMemo } from \"react\";\nimport { useRootInstance } from \"apps/designer/app/shared/nano-states\";\nimport { getInstancePath } from \"apps/designer/app/shared/tree-utils\";\n\nexport const useSelectedInstancePath = (\n  selectedInstanceId?: Instance[\"id\"]\n): Array<Instance> => {\n  const [rootInstance] = useRootInstance();\n  return useMemo(\n    () =>\n      selectedInstanceId !== undefined && rootInstance !== undefined\n        ? getInstancePath(rootInstance, selectedInstanceId)\n        : [],\n    [selectedInstanceId, rootInstance]\n  );\n};\n", "import { createValueContainer, useValue } from \"react-nano-state\";\nimport { type Breakpoint, type Instance } from \"@webstudio-is/sdk\";\n\nexport const rootInstanceContainer = createValueContainer<\n  Instance | undefined\n>();\nexport const useRootInstance = () => useValue(rootInstanceContainer);\n\nexport const breakpointsContainer = createValueContainer<Array<Breakpoint>>([]);\nexport const useBreakpoints = () => useValue(breakpointsContainer);\n\nconst isPreviewModeContainer = createValueContainer<boolean>(false);\nexport const useIsPreviewMode = () => useValue(isPreviewModeContainer);\n\nconst selectedInstanceRectContainer = createValueContainer<\n  DOMRect | undefined\n>();\nexport const useSelectedInstanceRect = () =>\n  useValue(selectedInstanceRectContainer);\n\nconst hoveredInstanceRectContainer = createValueContainer<\n  DOMRect | undefined\n>();\nexport const useHoveredInstanceRect = () =>\n  useValue(hoveredInstanceRectContainer);\n\nconst isScrollingContainer = createValueContainer<boolean>(false);\nexport const useIsScrolling = () => useValue(isScrollingContainer);\n\n// We are editing the text of that instance in text editor.\nconst textEditingInstanceIdContainer = createValueContainer<\n  Instance[\"id\"] | undefined\n>();\nexport const useTextEditingInstanceId = () =>\n  useValue(textEditingInstanceIdContainer);\n", "import { useSubscribe } from \"@webstudio-is/sdk\";\nimport { useIsScrolling } from \"./nano-states\";\n\nexport const useSubscribeScrollState = () => {\n  const [, setIsScrolling] = useIsScrolling();\n  useSubscribe<\"scrollState\", boolean>(\"scrollState\", setIsScrolling);\n};\n", "import { useState, useMemo, useEffect } from \"react\";\nimport { type Instance } from \"@webstudio-is/sdk\";\nimport {\n  Flex,\n  Text,\n  Collapsible,\n  Button,\n  keyframes,\n  styled,\n} from \"apps/designer/app/shared/design-system\";\nimport {\n  TriangleRightIcon,\n  TriangleDownIcon,\n} from \"apps/designer/app/shared/icons\";\nimport { primitives } from \"apps/designer/app/shared/canvas-components\";\nimport noop from \"lodash.noop\";\n\nconst openKeyframes = keyframes({\n  from: { height: 0 },\n  to: { height: \"var(--radix-collapsible-content-height)\" },\n});\n\nconst closeKeyframes = keyframes({\n  from: { height: \"var(--radix-collapsible-content-height)\" },\n  to: { height: 0 },\n});\n\nconst CollapsibleContentAnimated = styled(Collapsible.Content, {\n  overflow: \"hidden\",\n  '&[data-state=\"open\"]': {\n    animation: `${openKeyframes} 150ms ease-in-out`,\n  },\n  '&[data-state=\"closed\"]': {\n    animation: `${closeKeyframes} 150ms ease-in-out`,\n  },\n});\n\nconst CollapsibleContentUnanimated = styled(Collapsible.Content, {\n  overflow: \"hidden\",\n});\n\ntype TreeProps = {\n  instance: Instance;\n  selectedInstanceId?: Instance[\"id\"];\n  selectedInstancePath: Array<Instance>;\n  level?: number;\n  onSelect?: (instance: Instance) => void;\n  animate?: boolean;\n};\n\nexport const Tree = ({\n  instance,\n  selectedInstanceId,\n  selectedInstancePath,\n  level = 0,\n  onSelect = noop,\n  animate = true,\n}: TreeProps) => {\n  const [isOpen, setIsOpen] = useState(selectedInstancePath.includes(instance));\n\n  useEffect(() => {\n    setIsOpen(selectedInstancePath.includes(instance));\n  }, [selectedInstancePath, instance]);\n\n  // Text nodes have only one child which is a string.\n  const showChildren =\n    instance.children.length > 1 || typeof instance.children[0] === \"object\";\n\n  const children = useMemo(() => {\n    if (isOpen === false || showChildren === false) {\n      return null;\n    }\n    const children = [];\n    for (const child of instance.children) {\n      if (typeof child === \"string\") continue;\n      children.push(\n        <Tree\n          instance={child}\n          selectedInstanceId={selectedInstanceId}\n          selectedInstancePath={selectedInstancePath}\n          level={level + 1}\n          key={child.id}\n          onSelect={onSelect}\n          animate={animate}\n        />\n      );\n    }\n    return children;\n  }, [\n    instance,\n    level,\n    isOpen,\n    selectedInstanceId,\n    selectedInstancePath,\n    onSelect,\n    showChildren,\n    animate,\n  ]);\n\n  const { Icon, label } = primitives[instance.component];\n  const CollapsibleContent = animate\n    ? CollapsibleContentAnimated\n    : CollapsibleContentUnanimated;\n\n  return (\n    <Collapsible.Root open={isOpen} onOpenChange={setIsOpen}>\n      <Flex\n        css={{\n          // @todo don't hardcode the padding\n          paddingLeft: level * 15 + (showChildren ? 0 : 15),\n          color: \"$hiContrast\",\n          alignItems: \"center\",\n        }}\n      >\n        {showChildren && (\n          <Collapsible.Trigger asChild>\n            {isOpen ? <TriangleDownIcon /> : <TriangleRightIcon />}\n          </Collapsible.Trigger>\n        )}\n        <Button\n          {...(instance.id === selectedInstanceId\n            ? { state: \"active\" }\n            : { ghost: true })}\n          css={{ display: \"flex\", gap: \"$1\", padding: \"$1\" }}\n          onFocus={() => {\n            onSelect(instance);\n          }}\n        >\n          <Icon />\n          <Text>{label}</Text>\n        </Button>\n      </Flex>\n      <CollapsibleContent>{children}</CollapsibleContent>\n    </Collapsible.Root>\n  );\n};\n", "import { type Breakpoint } from \"@webstudio-is/sdk\";\n\nexport const willRender = (breakpoint: Breakpoint, canvasWidth: number) =>\n  canvasWidth >= breakpoint.minWidth;\n", "import { useState, useMemo, useEffect, useCallback } from \"react\";\nimport type {\n  SelectedInstanceData,\n  StyleUpdates,\n} from \"apps/designer/app/shared/canvas-components\";\nimport { type StyleProperty, type Publish } from \"@webstudio-is/sdk\";\nimport { useSelectedBreakpoint } from \"../../shared/nano-states\";\nimport { parseCssValue } from \"./parse-css-value\";\nimport { getInheritedStyle } from \"./get-inherited-style\";\nimport { getCssRuleForBreakpoint } from \"./lib/utils/get-css-rule-for-breakpoint\";\nimport { useRootInstance } from \"apps/designer/app/shared/nano-states\";\n\ntype UseStyleData = {\n  publish: Publish;\n  selectedInstanceData?: SelectedInstanceData;\n};\n\ntype StyleUpdateOptions = { isEphemeral: boolean };\n\nexport type SetProperty = (\n  property: StyleProperty\n) => (value: string, options?: StyleUpdateOptions) => void;\n\nexport const useStyleData = ({\n  selectedInstanceData,\n  publish,\n}: UseStyleData) => {\n  const [rootInstance] = useRootInstance();\n  const [selectedBreakpoint] = useSelectedBreakpoint();\n  const cssRule = useMemo(\n    () =>\n      getCssRuleForBreakpoint(\n        selectedInstanceData?.cssRules,\n        selectedBreakpoint\n      ),\n    [selectedInstanceData?.cssRules, selectedBreakpoint]\n  );\n\n  const getCurrentStyle = useCallback(\n    () => ({\n      ...selectedInstanceData?.browserStyle,\n      ...cssRule?.style,\n    }),\n    [selectedInstanceData, cssRule]\n  );\n\n  const [currentStyle, setCurrentStyle] = useState(getCurrentStyle());\n\n  useEffect(() => {\n    const currentStyle = getCurrentStyle();\n    setCurrentStyle(currentStyle);\n  }, [getCurrentStyle]);\n\n  const inheritedStyle = useMemo(() => {\n    if (\n      currentStyle === undefined ||\n      selectedInstanceData === undefined ||\n      rootInstance === undefined\n    ) {\n      return;\n    }\n    return getInheritedStyle(rootInstance, selectedInstanceData.id);\n  }, [currentStyle, selectedInstanceData, rootInstance]);\n\n  const publishUpdates = (\n    type: \"update\" | \"preview\",\n    updates: StyleUpdates[\"updates\"]\n  ) => {\n    if (\n      updates.length === 0 ||\n      selectedInstanceData === undefined ||\n      selectedBreakpoint == undefined\n    ) {\n      return;\n    }\n    publish<string, StyleUpdates>({\n      type:\n        type === \"update\"\n          ? \"updateStyle\"\n          : `previewStyle:${selectedInstanceData.id}`,\n      payload: {\n        id: selectedInstanceData.id,\n        updates,\n        breakpoint: selectedBreakpoint,\n      },\n    });\n  };\n\n  const setProperty: SetProperty = (property) => {\n    return (input, options = { isEphemeral: false }) => {\n      if (currentStyle === undefined) return;\n      const currentValue = currentStyle[property];\n      const defaultUnit =\n        currentValue?.type === \"unit\" ? currentValue?.unit : undefined;\n      const nextValue = parseCssValue(property, input, defaultUnit);\n      if (nextValue.type !== \"invalid\") {\n        const updates = [{ property, value: nextValue }];\n        const type = options.isEphemeral ? \"preview\" : \"update\";\n        publishUpdates(type, updates);\n      }\n      if (options.isEphemeral === false) {\n        setCurrentStyle({ ...currentStyle, [property]: nextValue });\n      }\n    };\n  };\n\n  return { currentStyle, inheritedStyle, setProperty };\n};\n", "import hyphenate from \"hyphenate-style-name\";\nimport { units } from \"@webstudio-is/sdk\";\nimport type { StyleProperty, StyleValue, Unit } from \"@webstudio-is/sdk\";\n\nconst unitRegex = new RegExp(`${units.join(\"|\")}`);\n\nconst isValid = (property: string, value: string): boolean => {\n  // Only browsers with houdini api will provide validation for now\n  // @todo add a polyfill maybe\n  if (\n    typeof CSSStyleValue === \"undefined\" ||\n    typeof CSSStyleValue.parse === \"undefined\"\n  ) {\n    return true;\n  }\n\n  try {\n    CSSStyleValue.parse(hyphenate(property), value);\n  } catch (error) {\n    return false;\n  }\n  return true;\n};\n\n// wtf?\n// eslint-disable-next-line no-useless-escape\nconst mathRegex = /[\\+\\-\\*\\/]/;\n\n// - 2+2px\n// - 2*2\nconst evaluate = (input: string, parsedUnit: [Unit] | null) => {\n  const parsed = parseFloat(input);\n  // If its not a number, it can't be a math expression.\n  if (isNaN(parsed)) return parsed;\n\n  // It's a math expression\n  if (mathRegex.test(input)) {\n    // Get rid of the unit\n    if (parsedUnit !== null) {\n      input = input.replace(parsedUnit[0], \"\");\n    }\n    try {\n      return eval(`(${input})`);\n    } catch (err) {\n      return parsed;\n    }\n  }\n\n  return parsed;\n};\n\n// Helper to let user input:\n// - 10\n// - 10p\n// - 10px > px as unit\n// - empty string\n// - a keyword\nexport const parseCssValue = (\n  property: StyleProperty,\n  input: string,\n  defaultUnit?: Unit\n): StyleValue => {\n  const invalidValue = {\n    type: \"invalid\",\n    value: input,\n  } as const;\n\n  if (input.length === 0) {\n    return invalidValue;\n  }\n\n  const parsedUnit = unitRegex.exec(input) as [Unit] | null;\n  const number = evaluate(input, parsedUnit);\n\n  // If we get a unit but there is no number - we assume its an accidental\n  // unit match and its a keyword value.\n  if (isNaN(number) === true) {\n    if (isValid(property, input)) {\n      return {\n        type: \"keyword\",\n        value: input,\n      } as const;\n    }\n    return invalidValue;\n  }\n\n  // If user didn't enter a unit, use the previous known unit otherwise fallback to px.\n  const fallbackUnit: Unit = defaultUnit ?? \"number\";\n  const [unit] = parsedUnit || [fallbackUnit];\n\n  if (isValid(property, number) || isValid(property, number + unit)) {\n    return {\n      type: \"unit\",\n      unit,\n      value: number,\n    };\n  }\n\n  return invalidValue;\n};\n", "import {\n  properties,\n  type StyleValue,\n  type StyleProperty,\n} from \"@webstudio-is/sdk\";\nimport { type Instance } from \"@webstudio-is/sdk\";\n\nexport type InheritedStyle = {\n  [property in StyleProperty]: {\n    instance: Instance;\n    value: StyleValue;\n  };\n};\n\ntype InheritableProperties = { [property in StyleProperty]: true };\nconst propertyNames = Object.keys(properties) as Array<StyleProperty>;\n// All inheritable properties we support\nconst inheritableProperties: InheritableProperties = propertyNames.reduce(\n  (acc: InheritableProperties, property: StyleProperty) => {\n    const config = properties[property];\n    if (config.inherited) {\n      acc[property as StyleProperty] = true;\n    }\n    return acc;\n  },\n  {} as InheritableProperties\n);\n\nconst findParents = (\n  instance: Instance,\n  instanceId: Instance[\"id\"]\n): Array<Instance> => {\n  const parents: Array<Instance> = [];\n\n  for (const child of instance.children) {\n    if (typeof child === \"string\") {\n      continue;\n    }\n    // I am your father\n    if (child.id === instanceId) {\n      parents.push(instance);\n      break;\n    }\n    const foundParents = findParents(child, instanceId);\n    // eslint-disable-next-line prefer-spread\n    parents.push.apply(parents, foundParents);\n  }\n  return parents;\n};\n\n// - Walk down the tree and remember all parent instances until the found instance\n// - Walk back up and find a value for each inheritable property and where value is not \"inherit\"\n// @todo this also has to match the media query, otheriwse its wrong\nexport const getInheritedStyle = (\n  rootInstance: Instance,\n  instanceId: Instance[\"id\"]\n): InheritedStyle => {\n  const parents = findParents(rootInstance, instanceId).reverse();\n  const inheritedStyle = {} as InheritedStyle;\n  for (const parent of parents) {\n    for (const cssRule of parent.cssRules) {\n      for (const property in cssRule.style) {\n        const isInheritable = property in inheritableProperties;\n        const value = cssRule.style[property as StyleProperty];\n        const hasValue = value !== undefined && value.value !== \"inherit\";\n        const isFirst = property in inheritedStyle === false;\n        if (isInheritable && hasValue && isFirst) {\n          inheritedStyle[property as StyleProperty] = {\n            instance: parent,\n            value,\n          };\n        }\n      }\n    }\n  }\n  return inheritedStyle;\n};\n", "import { type CssRule, type Breakpoint } from \"@webstudio-is/sdk\";\n\n/**\n * Find a instance css rule that is set on the provided breakpoint.\n */\nexport const getCssRuleForBreakpoint = (\n  cssRules: Array<CssRule> = [],\n  breakpoint?: Breakpoint\n) => {\n  if (breakpoint === undefined) return;\n  return cssRules.find((cssRule) => cssRule.breakpoint === breakpoint.id);\n};\n", "import { createValueContainer, useValue } from \"react-nano-state\";\nimport {\n  Flex,\n  Text,\n  Collapsible,\n} from \"apps/designer/app/shared/design-system\";\nimport {\n  TriangleRightIcon,\n  TriangleDownIcon,\n} from \"apps/designer/app/shared/icons\";\n\ntype CollapsibleSectionProps = {\n  label: string;\n  children: JSX.Element;\n  isOpenDefault?: boolean;\n  isOpen?: boolean;\n  rightSlot?: JSX.Element;\n};\n\nconst stateContainer = createValueContainer<{ [label: string]: boolean }>({});\n\n// Preserves the open/close state even when component gets unmounted\nconst useOpenState = (\n  label: string,\n  initialValue: boolean\n): [boolean, (value: boolean) => void] => {\n  const [state, setState] = useValue(stateContainer);\n  const isOpen = label in state ? state[label] : initialValue;\n  const setIsOpen = (isOpen: boolean) => {\n    setState({ ...state, [label]: isOpen });\n  };\n  return [isOpen, setIsOpen];\n};\n\nexport const CollapsibleSection = ({\n  label,\n  children,\n  isOpenDefault = false,\n  isOpen,\n  rightSlot,\n}: CollapsibleSectionProps) => {\n  const [isOpenByUser, setIsOpenByUser] = useOpenState(label, isOpenDefault);\n  const isOpenFinal = isOpen === undefined ? isOpenByUser : isOpen;\n  return (\n    <Collapsible.Root open={isOpenFinal} onOpenChange={setIsOpenByUser}>\n      <Collapsible.Trigger asChild>\n        <Flex\n          align=\"center\"\n          gap=\"1\"\n          justify=\"between\"\n          css={{\n            py: \"$3\",\n            px: \"$1\",\n            color: \"$hiContrast\",\n            cursor: \"default\",\n          }}\n        >\n          {isOpenFinal ? <TriangleDownIcon /> : <TriangleRightIcon />}\n          <Text size=\"3\" css={{ flexGrow: 1 }}>\n            {label}\n          </Text>\n          {rightSlot}\n        </Flex>\n      </Collapsible.Trigger>\n      <Collapsible.Content asChild>\n        <Flex\n          gap=\"3\"\n          direction=\"column\"\n          css={{ p: \"$2\", borderBottom: \"1px solid $slate6\" }}\n        >\n          {children}\n        </Flex>\n      </Collapsible.Content>\n    </Collapsible.Root>\n  );\n};\n", "import { Flex, Text } from \"apps/designer/app/shared/design-system\";\nimport type { SelectedInstanceData } from \"apps/designer/app/shared/canvas-components\";\nimport { primitives } from \"apps/designer/app/shared/canvas-components\";\n\nexport const ComponentInfo = ({\n  selectedInstanceData,\n}: {\n  selectedInstanceData: SelectedInstanceData;\n}) => {\n  return (\n    <Flex justify=\"between\" align=\"center\">\n      <Text>{`Selected: ${\n        primitives[selectedInstanceData.component].label\n      }`}</Text>\n    </Flex>\n  );\n};\n", "import { useState } from \"react\";\nimport hyphenate from \"hyphenate-style-name\";\nimport {\n  categories,\n  type CssRule,\n  type Category,\n  type Style,\n} from \"@webstudio-is/sdk\";\nimport {\n  Box,\n  Flex,\n  Collapsible,\n  Button,\n} from \"apps/designer/app/shared/design-system\";\nimport {\n  TriangleRightIcon,\n  TriangleDownIcon,\n} from \"apps/designer/app/shared/icons\";\nimport {\n  styleConfigs,\n  type StyleConfig,\n} from \"apps/designer/app/shared/style-panel-configs\";\nimport { CollapsibleSection } from \"apps/designer/app/designer/shared/inspector\";\nimport { renderProperty } from \"./render-property\";\nimport { dependencies } from \"./dependencies\";\nimport { type InheritedStyle } from \"./get-inherited-style\";\nimport { type SetProperty } from \"./use-style-data\";\nimport { type SelectedInstanceData } from \"apps/designer/app/shared/canvas-components\";\n\n// Finds a property/value by using any available form: property, label, value\nconst filterProperties = (properties: Array<string>, search: string) => {\n  const searchParts = search.split(\" \").map((part) => part.trim());\n  const includes = (property: string) => {\n    if (property.toLowerCase().includes(search)) return true;\n    if (hyphenate(property).includes(search)) return true;\n    // Enables \"ba co\" to match \"backgorund color\"\n    return searchParts.every((searchPart) =>\n      property.toLowerCase().includes(searchPart)\n    );\n  };\n  return properties.filter((property) => {\n    for (const styleConfig of styleConfigs) {\n      if (styleConfig.property !== property) continue;\n      if (includes(styleConfig.property)) return true;\n      if (includes(styleConfig.label)) return true;\n      for (const item of styleConfig.items) {\n        if (includes(item.name) || includes(item.label)) {\n          return true;\n        }\n      }\n    }\n    return false;\n  });\n};\n\nconst appliesTo = (styleConfig: StyleConfig, currentStyle: Style): boolean => {\n  const { appliesTo } = styleConfig;\n  if (appliesTo in dependencies) {\n    const dependency = dependencies[appliesTo];\n    if (dependency === undefined) return false;\n    const currentValue = currentStyle[dependency.property]?.value;\n    if (currentValue === undefined) return false;\n    if (Array.isArray(dependency.values))\n      return dependency.values.includes(String(currentValue));\n    if (Array.isArray(dependency.notValues))\n      return dependency.notValues.includes(String(currentValue)) === false;\n  }\n\n  return true;\n};\n\nconst didRender = (category: Category, { property }: StyleConfig): boolean => {\n  // We only want to render the first thing in spacing since the widget will be the way to set all margin and padding\n  if (category === \"spacing\" && property !== categories.spacing.properties[0]) {\n    return true;\n  }\n  return false;\n};\n\nconst ShowMore = ({ styleConfigs }: { styleConfigs: Array<JSX.Element> }) => {\n  const [isOpen, setIsOpen] = useState(false);\n  if (styleConfigs.length === 0) return null;\n  return (\n    <Collapsible.Root asChild onOpenChange={setIsOpen}>\n      <Flex direction=\"column\" gap=\"3\">\n        <Collapsible.Trigger asChild>\n          <Button css={{ width: \"100%\", gap: \"$1\" }}>\n            {isOpen ? <TriangleDownIcon /> : <TriangleRightIcon />}Show more\n          </Button>\n        </Collapsible.Trigger>\n        <Collapsible.Content asChild>\n          <Flex direction=\"column\" gap=\"3\">\n            {styleConfigs}\n          </Flex>\n        </Collapsible.Content>\n      </Flex>\n    </Collapsible.Root>\n  );\n};\n\ntype VisualSettingsProps = {\n  currentStyle: Style;\n  inheritedStyle: InheritedStyle;\n  cssRule?: CssRule;\n  setProperty: SetProperty;\n  selectedInstanceData: SelectedInstanceData;\n  search: string;\n};\n\nexport const VisualSettings = ({\n  currentStyle,\n  search,\n  ...rest\n}: VisualSettingsProps) => {\n  const isSearchMode = search.length !== 0;\n  const all = [];\n  let category: Category;\n  for (category in categories) {\n    // @todo seems like properties are the exact strings and styleConfig.property is not?\n    const categoryProperties = filterProperties(\n      categories[category].properties as unknown as Array<string>,\n      search\n    );\n    const { moreFrom } = categories[category];\n    const styleConfigsByCategory: Array<JSX.Element> = [];\n    const moreStyleConfigsByCategory: Array<JSX.Element> = [];\n\n    for (const styleConfig of styleConfigs) {\n      const isInCategory = categoryProperties.includes(styleConfig.property);\n      // We don't want to filter out inapplicable styles if user wants to apply them anyway\n      const isApplicable = isSearchMode\n        ? true\n        : appliesTo(styleConfig, currentStyle);\n      const isRendered = didRender(category, styleConfig);\n\n      if (isInCategory && isApplicable && isRendered === false) {\n        const element = renderProperty({\n          ...rest,\n          currentStyle,\n          styleConfig,\n          category,\n        });\n\n        // We are making a separate array of properties which come after the \"moreFrom\"\n        // so we can make them collapsable\n        if (\n          (styleConfig.property === moreFrom ||\n            moreStyleConfigsByCategory.length !== 0) &&\n          isSearchMode === false\n        ) {\n          moreStyleConfigsByCategory.push(element);\n          continue;\n        }\n\n        styleConfigsByCategory.push(element);\n      }\n    }\n\n    if (styleConfigsByCategory.length === 0) continue;\n\n    all.push(\n      <CollapsibleSection\n        isOpen={isSearchMode ? true : undefined}\n        label={categories[category].label}\n        key={category}\n      >\n        <>\n          {styleConfigsByCategory}\n          <ShowMore styleConfigs={moreStyleConfigsByCategory} />\n        </>\n      </CollapsibleSection>\n    );\n  }\n  return <Box css={{ overflow: \"auto\" }}>{all}</Box>;\n};\n", "import {\n  properties,\n  categories,\n  keywordValues,\n  type Category,\n  type StyleProperty,\n} from \"@webstudio-is/sdk\";\nimport type { StyleConfig, Control } from \"./types\";\nimport { humanizeString } from \"../string-utils\";\n\ntype Property = keyof typeof keywordValues;\n\nconst getControl = (property: StyleProperty): Control => {\n  if (property.toLocaleLowerCase().includes(\"color\")) {\n    return \"Color\";\n  }\n  // Spacing properties is more narrow than StyleProperty,\n  // so we have to widen it to be able to run .includes.\n  // @todo do better\n  const spacing = categories.spacing\n    .properties as unknown as Array<StyleProperty>;\n  if (spacing.includes(property)) {\n    return \"Spacing\";\n  }\n\n  return \"Combobox\";\n};\n\nconst createStyleConfigs = () => {\n  // We have same properties in different categories: alignSelf is in grid children and flex children\n  // but this list has to contain only unique props\n  const map: { [prop in Property]?: StyleConfig } = {};\n\n  let category: Category;\n\n  for (category in categories) {\n    for (const prop of categories[category].properties) {\n      // @todo prop is more narrow, only the props\n      // in that category, we are widening the type to include all properties\n      const property = prop as Property;\n      const keywords = keywordValues[property] || [];\n      const label = humanizeString(property);\n\n      map[property] = {\n        label,\n        property,\n        appliesTo: properties[property].appliesTo,\n        control: getControl(property),\n        items: keywords.map((keyword: string) => ({\n          label: keyword,\n          name: keyword,\n        })),\n      };\n    }\n  }\n\n  return Object.values(map);\n};\n\nexport const styleConfigs: Array<StyleConfig> = createStyleConfigs();\n", "import snakeCase from \"lodash.snakecase\";\nimport capitalize from \"lodash.capitalize\";\n\nexport const humanizeString = (string: string): string => {\n  return snakeCase(string).split(\"_\").map(capitalize).join(\" \");\n};\n", "import {\n  Flex,\n  Grid,\n  Label,\n  Text,\n  Combobox,\n} from \"apps/designer/app/shared/design-system\";\nimport type { StyleConfig } from \"apps/designer/app/shared/style-panel-configs\";\nimport {\n  categories,\n  type Style,\n  type StyleProperty,\n  type Category,\n  type StyleValue,\n} from \"@webstudio-is/sdk\";\nimport type { SetProperty } from \"./use-style-data\";\nimport type { InheritedStyle } from \"./get-inherited-style\";\nimport { ColorPicker } from \"./lib/color-picker\";\nimport {\n  SpacingWidget,\n  type SpacingProperty,\n  type SpacingStyles,\n} from \"./lib/spacing-widget\";\nimport { useIsFromCurrentBreakpoint } from \"./lib/utils/use-is-from-current-breakpoint\";\nimport { propertyNameColorForSelectedBreakpoint } from \"./lib/constants\";\n\nconst getFinalValue = ({\n  currentStyle,\n  inheritedStyle,\n  property,\n}: {\n  currentStyle: Style;\n  inheritedStyle: InheritedStyle;\n  property: StyleProperty;\n}): StyleValue | void => {\n  const currentValue = currentStyle[property];\n  const inheritedValue =\n    property in inheritedStyle ? inheritedStyle[property].value : undefined;\n  if (currentValue?.value === \"inherit\" && inheritedValue !== undefined) {\n    return inheritedValue;\n  }\n  return currentValue;\n};\n\ntype PropertyProps = {\n  property: StyleProperty;\n  label: string;\n};\n\nconst PropertyName = ({ property, label }: PropertyProps) => {\n  const isCurrentBreakpoint = useIsFromCurrentBreakpoint(property);\n\n  return (\n    <Label\n      css={{\n        gridColumn: \"1\",\n        color: isCurrentBreakpoint\n          ? propertyNameColorForSelectedBreakpoint\n          : \"$hiContrast\",\n      }}\n      variant=\"contrast\"\n      size=\"1\"\n      htmlFor={property}\n    >\n      {label}\n    </Label>\n  );\n};\n\nconst Unit = ({ value }: { value: StyleValue }) => {\n  if (value.type !== \"unit\" || value.unit === \"number\") return null;\n  return (\n    <Text\n      css={{\n        fontSize: \"$1\",\n        cursor: \"default\",\n      }}\n    >\n      {value.unit}\n    </Text>\n  );\n};\n\ntype ControlProps = {\n  setProperty: SetProperty;\n  currentStyle: Style;\n  inheritedStyle: InheritedStyle;\n  styleConfig: StyleConfig;\n};\n\nconst ColorControl = ({\n  currentStyle,\n  inheritedStyle,\n  setProperty,\n  styleConfig,\n}: ControlProps) => {\n  if (styleConfig.control !== \"Color\") return null;\n  // @todo show which instance we inherited the value from\n  const value = getFinalValue({\n    currentStyle,\n    inheritedStyle,\n    property: styleConfig.property,\n  });\n  if (value === undefined) return null;\n  const setValue = setProperty(styleConfig.property);\n\n  return (\n    <Grid columns={2} align=\"center\" gapX=\"1\">\n      <PropertyName property={styleConfig.property} label={styleConfig.label} />\n      <Flex align=\"center\" css={{ gridColumn: \"2/4\" }} gap=\"1\">\n        <ColorPicker\n          id={styleConfig.property}\n          value={String(value.value)}\n          onChange={(value) => {\n            setValue(value, { isEphemeral: true });\n          }}\n          onChangeComplete={setValue}\n        />\n      </Flex>\n    </Grid>\n  );\n};\n\nconst SpacingControl = ({\n  currentStyle,\n  inheritedStyle,\n  setProperty,\n  styleConfig,\n}: ControlProps) => {\n  if (styleConfig.control !== \"Spacing\") return null;\n\n  const styles = categories.spacing.properties.reduce(\n    (acc: SpacingStyles, property: SpacingProperty): SpacingStyles => {\n      const value = getFinalValue({\n        currentStyle,\n        inheritedStyle,\n        property,\n      });\n      if (value !== undefined) {\n        if (property.includes(\"margin\")) {\n          acc.margins[property] = value;\n        } else {\n          acc.paddings[property] = value;\n        }\n      }\n\n      return acc;\n    },\n    { margins: {}, paddings: {} } as SpacingStyles\n  );\n\n  return <SpacingWidget setProperty={setProperty} values={styles} />;\n};\n\n// @todo\n// This is a cursor image for drag&drop value changing on the input by dragging horizontally\n//const svgCursor =\n//  '<svg width=\"15\" height=\"15\" viewBox=\"0 0 15 15\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M8.00012 1.5C8.00012 1.22386 7.77626 1 7.50012 1C7.22398 1 7.00012 1.22386 7.00012 1.5V13.5C7.00012 13.7761 7.22398 14 7.50012 14C7.77626 14 8.00012 13.7761 8.00012 13.5V1.5ZM3.31812 5.818C3.49386 5.64227 3.49386 5.35734 3.31812 5.18161C3.14239 5.00587 2.85746 5.00587 2.68173 5.18161L0.681729 7.18161C0.505993 7.35734 0.505993 7.64227 0.681729 7.818L2.68173 9.818C2.85746 9.99374 3.14239 9.99374 3.31812 9.818C3.49386 9.64227 3.49386 9.35734 3.31812 9.18161L2.08632 7.9498H5.50017C5.7487 7.9498 5.95017 7.74833 5.95017 7.4998C5.95017 7.25128 5.7487 7.0498 5.50017 7.0498H2.08632L3.31812 5.818ZM12.3181 5.18161C12.1424 5.00587 11.8575 5.00587 11.6817 5.18161C11.506 5.35734 11.506 5.64227 11.6817 5.818L12.9135 7.0498H9.50017C9.25164 7.0498 9.05017 7.25128 9.05017 7.4998C9.05017 7.74833 9.25164 7.9498 9.50017 7.9498H12.9135L11.6817 9.18161C11.506 9.35734 11.506 9.64227 11.6817 9.818C11.8575 9.99374 12.1424 9.99374 12.3181 9.818L14.3181 7.818C14.4939 7.64227 14.4939 7.35734 14.3181 7.18161L12.3181 5.18161Z\" fill=\"#fff\"></path></svg>';\n\n//const cursorUrl = `data:image/svg+xml;base64,${btoa(svgCursor)}`;\n\nconst ComboboxControl = ({\n  currentStyle,\n  inheritedStyle,\n  setProperty,\n  styleConfig,\n}: ControlProps) => {\n  if (styleConfig.control !== \"Combobox\") return null;\n\n  // @todo show which instance we inherited the value from\n  const value = getFinalValue({\n    currentStyle,\n    inheritedStyle,\n    property: styleConfig.property,\n  });\n\n  if (value === undefined) return null;\n\n  const setValue = setProperty(styleConfig.property);\n\n  return (\n    <Grid columns={2} align=\"center\" gapX=\"1\">\n      <PropertyName property={styleConfig.property} label={styleConfig.label} />\n      <Flex align=\"center\" css={{ gridColumn: \"2/4\" }} gap=\"1\">\n        <Combobox\n          id={styleConfig.property}\n          items={styleConfig.items}\n          variant=\"ghost\"\n          css={{\n            // @todo drag&drop cursor to adjust numeric value\n            // const cursorUrl = data:image/svg+xml;base64,${btoa(svgCursor)}\n            //cursor: `url(${cursorUrl}), text`,\n            textAlign: \"right\",\n          }}\n          state={value.type === \"invalid\" ? \"invalid\" : undefined}\n          value={String(value.value)}\n          onValueSelect={setValue}\n          onValueEnter={setValue}\n          onItemEnter={(value) => {\n            setValue(value, { isEphemeral: true });\n          }}\n          onItemLeave={() => {\n            setValue(String(value.value), { isEphemeral: true });\n          }}\n        />\n        <Unit value={value} />\n      </Flex>\n    </Grid>\n  );\n};\n\nconst controls: {\n  [key: string]: (props: ControlProps) => JSX.Element | null;\n} = {\n  Color: ColorControl,\n  Spacing: SpacingControl,\n  Combobox: ComboboxControl,\n};\n\ntype RenderPropertyProps = {\n  setProperty: SetProperty;\n  currentStyle: Style;\n  inheritedStyle: InheritedStyle;\n  styleConfig: StyleConfig;\n  category: Category;\n};\n\nexport const renderProperty = ({\n  currentStyle,\n  inheritedStyle,\n  setProperty,\n  styleConfig,\n  category,\n}: RenderPropertyProps) => {\n  const Control = controls[styleConfig.control];\n\n  return (\n    <Control\n      key={category + \"-\" + styleConfig.property}\n      currentStyle={currentStyle}\n      inheritedStyle={inheritedStyle}\n      setProperty={setProperty}\n      styleConfig={styleConfig}\n    />\n  );\n};\n", "import { useState } from \"react\";\nimport { ColorResult, RGBColor, SketchPicker } from \"react-color\";\nimport {\n  Box,\n  Flex,\n  Popover,\n  PopoverTrigger,\n  PopoverContent,\n  TextField,\n} from \"apps/designer/app/shared/design-system\";\n\nconst stringifyRGBA = (color: RGBColor) => {\n  const { r, g, b, a = 1 } = color;\n\n  return `rgba(${r},${g},${b},${a})`;\n};\n\ntype ColorPickerProps = {\n  onChange: (value: string) => void;\n  onChangeComplete: (value: string) => void;\n  value: string;\n  id: string;\n};\n\nexport const ColorPicker = ({\n  value,\n  onChange,\n  onChangeComplete,\n  id,\n}: ColorPickerProps) => {\n  const [displayColorPicker, setDisplayColorPicker] = useState(false);\n  // Color picker will use 0 as alpha value, which will force user to set alpha every time they have to change from transparent\n  if (value === \"transparent\") value = \"\";\n\n  return (\n    <Popover\n      modal\n      open={displayColorPicker}\n      onOpenChange={setDisplayColorPicker}\n    >\n      <PopoverTrigger asChild aria-label=\"Open color picker\">\n        <Flex>\n          <Box\n            css={{\n              width: \"$5\",\n              height: \"$5\",\n              background: value,\n            }}\n          />\n          <TextField\n            onChange={(e) => onChange(e.target.value)}\n            onClick={() => setDisplayColorPicker((shown) => !shown)}\n            variant=\"ghost\"\n            value={value}\n            id={id}\n          />\n        </Flex>\n      </PopoverTrigger>\n\n      <PopoverContent>\n        <SketchPicker\n          color={value}\n          onChange={(color: ColorResult) => onChange(stringifyRGBA(color.rgb))}\n          onChangeComplete={(color: ColorResult) => {\n            onChangeComplete(stringifyRGBA(color.rgb));\n          }}\n          // @todo to remove both when we have preset colors\n          presetColors={[]}\n          styles={{\n            default: {\n              picker: {\n                padding: 10,\n              },\n            },\n          }}\n        />\n      </PopoverContent>\n    </Popover>\n  );\n};\n", "import { useEffect, useState } from \"react\";\nimport {\n  toValue,\n  type StyleProperty,\n  type StyleValue,\n} from \"@webstudio-is/sdk\";\nimport { Box } from \"apps/designer/app/shared/design-system\";\nimport { SetProperty } from \"../use-style-data\";\nimport { useIsFromCurrentBreakpoint } from \"./utils/use-is-from-current-breakpoint\";\nimport { propertyNameColorForSelectedBreakpoint } from \"./constants\";\n\ntype SpacingSingularStyle = { [property in SpacingProperty]?: StyleValue };\n\nexport type SpacingStyles = {\n  paddings: SpacingSingularStyle;\n  margins: SpacingSingularStyle;\n};\n\nexport type SpacingProperty = Margin | Padding;\n\ntype Margin = \"marginTop\" | \"marginRight\" | \"marginBottom\" | \"marginLeft\";\n\ntype Padding = \"paddingTop\" | \"paddingRight\" | \"paddingBottom\" | \"paddingLeft\";\n\nconst grid = {\n  margin: {\n    marginTop: \"1 / 2 / 2 / 3\",\n    marginRight: \"2 / 3 / 3 / 4\",\n    marginBottom: \"3 / 2 / 4 / 3\",\n    marginLeft: \"2 / 1 / 3 / 2\",\n  },\n  padding: {\n    paddingTop: \"1 / 2 / 2 / 3\",\n    paddingRight: \"2 / 3 / 3 / 4\",\n    paddingBottom: \"3 / 2 / 4 / 3\",\n    paddingLeft: \"2 / 1 / 3 / 2\",\n  },\n};\n\nconst styles = {\n  spacingEdit: {\n    fontSize: \"$1\",\n    // @todo use a color from design system\n    color: \"rgb(217, 217, 217)\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  wrapper: {\n    display: \"grid\",\n    height: 130,\n    gridTemplateColumns: \"$5 $1 $5 1fr $5 $1 $5\",\n    gridTemplateRows: \"$5 $1 $5 1fr $5 $1 $5\",\n  },\n  input: {\n    fontSize: 10,\n    fontWeight: 400,\n    fontFamily: \"inherit\",\n    display: \"block\",\n    background: \"transparent\",\n    color: \"$hiContrast\",\n    zIndex: 99,\n    margin: \"auto\",\n    // @todo need to fit more chars\n    width: 40,\n    border: \"none\",\n    textAlign: \"center\",\n    outline: \"none\",\n  },\n  inputFromCurrentBreakpoint: {\n    color: propertyNameColorForSelectedBreakpoint,\n  },\n  emptySpace: {\n    gridArea: \"2 / 2 / 3 / 2\",\n    background: \"$loContrast\",\n    width: \"$6\",\n    margin: \"auto\",\n    height: \"100%\",\n    borderRadius: \"$1\",\n  },\n  marginGrid: {\n    gridArea: \"1 / 1 / -1 / -1\",\n    display: \"grid\",\n    gridTemplateColumns: \"$5 1fr $5\",\n    gridTemplateRows: \"$5 minmax($3, 1fr) $5\",\n    height: 130,\n    backgroundColor: \"$gray6\",\n    borderRadius: \"$1\",\n    px: 2,\n  },\n  text: {\n    fontWeight: \"bold\",\n    color: \"$gray12\",\n    fontSize: 8,\n    margin: \"$1\",\n  },\n  paddingGrid: {\n    gridArea: \"3 / 3 / span 3 / span 3\",\n    display: \"grid\",\n    gridTemplateColumns: \"$5 1fr $5\",\n    gridTemplateRows: \"$5 minmax($3, 1fr) $5\",\n    border: \"2px solid\",\n    borderColor: \"$loContrast\",\n    borderRadius: \"$1\",\n  },\n};\n\ntype TextFieldProps = {\n  property: StyleProperty;\n  value: string | undefined;\n  onEnter: (value: string) => void;\n};\n\nconst TextField = ({ property, value, onEnter }: TextFieldProps) => {\n  const [currentValue, setCurrentValue] = useState<string>(value ?? \"\");\n  const isFromCurrentBreakpoint = useIsFromCurrentBreakpoint(property);\n\n  useEffect(() => {\n    setCurrentValue(value ?? \"\");\n  }, [value]);\n\n  return (\n    <Box\n      as=\"input\"\n      name={property}\n      aria-label={`${property} edit`}\n      value={currentValue}\n      onKeyDown={(event: React.KeyboardEvent<HTMLInputElement>) => {\n        if (event.key === \"Enter\") {\n          onEnter(currentValue);\n        }\n      }}\n      onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n        setCurrentValue(event.target.value);\n      }}\n      css={\n        isFromCurrentBreakpoint\n          ? { ...styles.input, ...styles.inputFromCurrentBreakpoint }\n          : styles.input\n      }\n    />\n  );\n};\n\nconst toCss = (style: SpacingSingularStyle) => {\n  const css: Record<string, string> = {};\n  let property: SpacingProperty;\n  for (property in style) {\n    const value = style[property];\n    if (value === undefined) continue;\n    css[property] = toValue(value);\n  }\n  return css;\n};\n\ntype SpacingWidgetProps = {\n  setProperty: SetProperty;\n  values: SpacingStyles;\n};\n\nexport const SpacingWidget = ({ setProperty, values }: SpacingWidgetProps) => {\n  const margins = toCss(values.margins);\n  const paddings = toCss(values.paddings);\n\n  const updateSpacing = ({\n    value,\n    property,\n  }: {\n    value: string;\n    property: StyleProperty;\n  }) => {\n    setProperty(property)(value);\n  };\n\n  return (\n    <Box css={styles.wrapper}>\n      <Box css={styles.marginGrid}>\n        {(Object.keys(margins) as Array<Margin>).map((property: Margin) => (\n          <Box\n            key={property}\n            css={{\n              ...styles.spacingEdit,\n              gridArea: grid.margin[property],\n            }}\n          >\n            <TextField\n              property={property}\n              value={margins[property]}\n              onEnter={(value: string) => {\n                updateSpacing({\n                  value,\n                  property,\n                });\n              }}\n            />\n          </Box>\n        ))}\n      </Box>\n      <Box css={styles.paddingGrid}>\n        {(Object.keys(paddings) as Array<Padding>).map((property: Padding) => (\n          <Box\n            key={property}\n            css={{\n              ...styles.spacingEdit,\n              gridArea: grid.padding[property],\n            }}\n          >\n            <TextField\n              property={property}\n              value={paddings[property]}\n              onEnter={(value: string) => {\n                updateSpacing({\n                  value,\n                  property,\n                });\n              }}\n            />\n          </Box>\n        ))}\n        <Box css={styles.emptySpace} />\n      </Box>\n      <Box\n        css={{\n          ...styles.text,\n          gridArea: \"3 / 3 / span 3 / span 3\",\n        }}\n      >\n        PADDING\n      </Box>\n\n      <Box\n        css={{\n          ...styles.text,\n          gridArea: \"1 / 1 / -1 / -1\",\n        }}\n      >\n        MARGIN\n      </Box>\n    </Box>\n  );\n};\n", "import { useMemo } from \"react\";\nimport { type StyleProperty } from \"@webstudio-is/sdk\";\nimport {\n  useSelectedBreakpoint,\n  useSelectedInstanceData,\n} from \"apps/designer/app/designer/shared/nano-states\";\nimport { getCssRuleForBreakpoint } from \"./get-css-rule-for-breakpoint\";\n\n/**\n * Identify if the provided property is defined in the instance css rule matching the selected breakpoint.\n */\nexport const useIsFromCurrentBreakpoint = (property: StyleProperty) => {\n  const [selectedBreakpoint] = useSelectedBreakpoint();\n  const [selectedInstanceData] = useSelectedInstanceData();\n  const cssRule = useMemo(\n    () =>\n      getCssRuleForBreakpoint(\n        selectedInstanceData?.cssRules,\n        selectedBreakpoint\n      ),\n    [selectedInstanceData, selectedBreakpoint]\n  );\n  if (cssRule === undefined) return false;\n  return property in cssRule.style;\n};\n", "// When a style value is defined on a selected breakpoint, we want to highlight the property name with this color.\nexport const propertyNameColorForSelectedBreakpoint = \"$blue11\";\n", "import type { AppliesTo, StyleProperty } from \"@webstudio-is/sdk\";\n\nconst displayInline = [\n  \"inline\",\n  \"inline-block\",\n  \"inline-table\",\n  \"inline-list-item\",\n  \"inline-flex\",\n  \"inline-grid\",\n];\n\ntype Dependencies = {\n  [appliesTo in AppliesTo]?: {\n    property: StyleProperty;\n    values?: Array<string>;\n    notValues?: Array<string>;\n  };\n};\n\n// @todo many conditions apply based on element type,\n// currently its wrong, because e.g. display: block is already defined on a div,\n// but we expect it to be defined in currentStyle.\nexport const dependencies: Dependencies = {\n  blockContainers: {\n    property: \"display\",\n    values: [\"block\"],\n  },\n  blockContainerElements: {\n    property: \"display\",\n    values: [\"block\"],\n  },\n  flexContainers: {\n    property: \"display\",\n    values: [\"flex\"],\n  },\n  // @todo this should actually check on parent\n  flexItemsAndInFlowPseudos: {\n    property: \"display\",\n    values: [\"flex\"],\n  },\n  // @todo needs to also check flex-wrap\n  multilineFlexContainers: {\n    property: \"flexWrap\",\n    values: [\"wrap\", \"wrap-reverse\"],\n  },\n\n  // Used by alignSelf\n  // @todo needs to check parent to be display: flex or grid, position: absolute\n  //flexItemsGridItemsAndAbsolutelyPositionedBoxes: {\n  //  property: \"display\",\n  //  values: [\"flex\", 'grid'],\n  //},\n\n  // Used by order\n  // @todo Same thing as above\n  //flexItemsGridItemsAbsolutelyPositionedContainerChildren: {\n  //  property: \"display\",\n  //  values: [\"flex\"],\n  //},\n\n  gridContainers: {\n    property: \"display\",\n    values: [\"grid\"],\n  },\n  gridItemsAndBoxesWithinGridContainer: {\n    property: \"display\",\n    values: [\"grid\"],\n  },\n  positionedElements: {\n    property: \"position\",\n    notValues: [\"static\"],\n  },\n  allElementsNoEffectIfDisplayNone: {\n    property: \"display\",\n    notValues: [\"none\"],\n  },\n  blockLevelElements: {\n    property: \"clear\",\n    values: [\"block\", \"flex\", \"grid\", \"table\"],\n  },\n  allElementsExceptTableDisplayTypes: {\n    property: \"display\",\n    notValues: [\"table\"],\n  },\n  allElementsExceptInternalTableDisplayTypes: {\n    property: \"display\",\n    notValues: [\n      \"table-row-group\",\n      \"table-header-group\",\n      \"table-footer-group\",\n      \"table-row\",\n      \"table-cell\",\n      \"table-column-group\",\n      \"table-column\",\n      \"table-caption\",\n    ],\n  },\n  allElementsButNonReplacedAndTableColumns: {\n    property: \"display\",\n    notValues: [\"table-column-group\", \"table-column\"],\n  },\n  allElementsButNonReplacedAndTableRows: {\n    property: \"display\",\n    notValues: [\"table-row-group\", \"table-row\"],\n  },\n  blockContainersFlexContainersGridContainers: {\n    property: \"display\",\n    values: [\"block\", \"flex\", \"grid\"],\n  },\n  sameAsWidthAndHeight: {\n    property: \"display\",\n    notValues: [\n      \"table-column-group\",\n      \"table-column\",\n      \"table-row-group\",\n      \"table-row\",\n    ],\n  },\n  nonReplacedInlineElements: {\n    property: \"display\",\n    values: displayInline,\n  },\n  inlineLevelAndTableCellElements: {\n    property: \"display\",\n    values: [...displayInline, \"table-cell\"],\n  },\n  absolutelyPositionedElements: {\n    property: \"position\",\n    values: [\"absolute\"],\n  },\n};\n", "import { useState } from \"react\";\nimport {\n  css,\n  IconButton,\n  TextField,\n} from \"apps/designer/app/shared/design-system\";\nimport { Cross1Icon } from \"apps/designer/app/shared/icons\";\n\nconst formStyle = css({\n  position: \"relative\",\n});\n\nconst resetStyle = css({\n  position: \"absolute\",\n  right: 0,\n});\n\ntype OnSearch = (search: string) => void;\n\nconst useSearch = (onSearch: OnSearch): [string, OnSearch] => {\n  const [search, setSearch] = useState(\"\");\n  return [\n    search,\n    (search: string) => {\n      setSearch(search);\n      onSearch(search);\n    },\n  ];\n};\n\ntype SearchProps = {\n  onSearch: OnSearch;\n};\n\nexport const Search = ({ onSearch }: SearchProps) => {\n  const [search, setSearch] = useSearch(onSearch);\n  return (\n    <form\n      className={formStyle()}\n      onReset={() => {\n        setSearch(\"\");\n      }}\n      onKeyDown={(event) => {\n        if (event.key === \"Escape\") {\n          event.currentTarget.reset();\n        }\n      }}\n    >\n      <TextField\n        value={search}\n        css={{ paddingRight: \"$5\" }}\n        placeholder=\"Search property or value\"\n        onChange={(event) => {\n          const { value } = event.target;\n          setSearch(value.toLowerCase());\n        }}\n      />\n      <IconButton\n        disabled={search.length === 0}\n        type=\"reset\"\n        aria-label=\"Reset search\"\n        className={resetStyle()}\n      >\n        <Cross1Icon />\n      </IconButton>\n    </form>\n  );\n};\n", "import type { Publish } from \"@webstudio-is/sdk\";\nimport { willRender } from \"apps/designer/app/designer/shared/breakpoints\";\nimport { Box, Card, Paragraph } from \"apps/designer/app/shared/design-system\";\nimport type { SelectedInstanceData } from \"apps/designer/app/shared/canvas-components\";\nimport { useStyleData } from \"./use-style-data\";\nimport { ComponentInfo } from \"../../shared/inspector\";\nimport { VisualSettings } from \"./settings\";\nimport { Search } from \"./search\";\nimport { useState } from \"react\";\nimport {\n  useCanvasWidth,\n  useSelectedBreakpoint,\n} from \"apps/designer/app/designer/shared/nano-states\";\n\ntype StylePanelProps = {\n  publish: Publish;\n  selectedInstanceData?: SelectedInstanceData;\n};\n\nexport const StylePanel = ({\n  selectedInstanceData,\n  publish,\n}: StylePanelProps) => {\n  const { currentStyle, inheritedStyle, setProperty } = useStyleData({\n    selectedInstanceData,\n    publish,\n  });\n  const [breakpoint] = useSelectedBreakpoint();\n  const [canvasWidth] = useCanvasWidth();\n  const [search, setSearch] = useState(\"\");\n\n  if (\n    currentStyle === undefined ||\n    inheritedStyle === undefined ||\n    selectedInstanceData === undefined ||\n    breakpoint === undefined\n  ) {\n    return null;\n  }\n\n  if (willRender(breakpoint, canvasWidth) === false) {\n    return (\n      <Box css={{ p: \"$2\" }}>\n        <Card css={{ p: \"$3\", mt: \"$3\" }}>\n          <Paragraph css={{ marginBottom: \"$2\" }}>\n            {`Please increase the canvas width.`}\n          </Paragraph>\n          <Paragraph>\n            {`\"${breakpoint.label}\" breakpoint minimum width is ${breakpoint.minWidth}px.`}\n          </Paragraph>\n        </Card>\n      </Box>\n    );\n  }\n\n  return (\n    <>\n      <Box css={{ p: \"$2\" }}>\n        <ComponentInfo selectedInstanceData={selectedInstanceData} />\n      </Box>\n      <Box css={{ p: \"$2\" }}>\n        <Search onSearch={setSearch} />\n      </Box>\n      <VisualSettings\n        search={search}\n        selectedInstanceData={selectedInstanceData}\n        currentStyle={currentStyle}\n        inheritedStyle={inheritedStyle}\n        setProperty={setProperty}\n      />\n    </>\n  );\n};\n", "import {\n  componentsMeta,\n  type Instance,\n  type Publish,\n  type UserProp,\n} from \"@webstudio-is/sdk\";\nimport { Control } from \"apps/designer/app/designer/features/props-panel/control\";\nimport {\n  CollapsibleSection,\n  ComponentInfo,\n} from \"apps/designer/app/designer/shared/inspector\";\nimport type { SelectedInstanceData } from \"apps/designer/app/shared/canvas-components\";\nimport {\n  Box,\n  Button,\n  Grid,\n  TextField,\n} from \"apps/designer/app/shared/design-system\";\nimport { PlusIcon, TrashIcon } from \"apps/designer/app/shared/icons\";\nimport { handleChangePropType, usePropsLogic } from \"./use-props-logic\";\n\ntype PropertyProps = UserProp & {\n  component: Instance[\"component\"];\n  onChange: handleChangePropType;\n  onDelete: (id: UserProp[\"id\"]) => void;\n};\n\nconst Property = ({\n  id,\n  prop,\n  value,\n  required,\n  component,\n  onChange,\n  onDelete,\n}: PropertyProps) => {\n  const meta = componentsMeta[component];\n  const argType = meta?.argTypes?.[prop as keyof typeof meta.argTypes];\n  const type = argType?.control.type;\n  const defaultValue = argType?.control.defaultValue;\n  const options = argType?.options;\n  return (\n    <Grid gap=\"1\" css={{ gridTemplateColumns: \"auto 1fr auto\" }}>\n      <TextField\n        readOnly={required}\n        variant=\"ghost\"\n        placeholder=\"Property\"\n        name=\"prop\"\n        value={prop}\n        onChange={(event) => {\n          onChange(id, \"prop\", event.target.value);\n        }}\n      />\n      <Control\n        type={type}\n        required={required}\n        defaultValue={defaultValue}\n        options={options}\n        value={value}\n        onChange={(value: UserProp[\"value\"]) => onChange(id, \"value\", value)}\n      />\n      <Button\n        ghost\n        disabled={required}\n        onClick={() => {\n          onDelete(id);\n        }}\n      >\n        <TrashIcon />\n      </Button>\n    </Grid>\n  );\n};\n\ntype PropsPanelProps = {\n  publish: Publish;\n  selectedInstanceData: SelectedInstanceData;\n};\n\nexport const PropsPanel = ({\n  selectedInstanceData,\n  publish,\n}: PropsPanelProps) => {\n  const { userProps, addEmptyProp, handleChangeProp, handleDeleteProp } =\n    usePropsLogic({ selectedInstanceData, publish });\n\n  const addButton = (\n    <Button\n      ghost\n      onClick={(event) => {\n        event.preventDefault();\n        addEmptyProp();\n      }}\n    >\n      <PlusIcon />\n    </Button>\n  );\n  return (\n    <>\n      <Box css={{ p: \"$2\" }}>\n        <ComponentInfo selectedInstanceData={selectedInstanceData} />\n      </Box>\n      <CollapsibleSection\n        label=\"Properties\"\n        rightSlot={addButton}\n        isOpenDefault\n      >\n        <>\n          {userProps.map(({ id, prop, value, required }) => (\n            <Property\n              key={id}\n              id={id}\n              prop={prop}\n              value={value}\n              required={required}\n              component={selectedInstanceData.component}\n              onChange={handleChangeProp}\n              onDelete={handleDeleteProp}\n            />\n          ))}\n        </>\n      </CollapsibleSection>\n    </>\n  );\n};\n", "import { UserProp } from \"@webstudio-is/sdk\";\nimport React, { ComponentProps } from \"react\";\nimport {\n  Flex,\n  Label,\n  Radio,\n  RadioGroup,\n  Select,\n  Slider,\n  Switch,\n  Text,\n  TextField,\n} from \"apps/designer/app/shared/design-system\";\nimport { Checkbox } from \"apps/designer/app/shared/design-system/components/checkbox\";\n\ntype BaseControlProps<T = UserProp[\"value\"]> = {\n  value?: T;\n  defaultValue?: T;\n  onChange: (value: T) => void;\n  required?: boolean;\n};\ntype TextControlProps = BaseControlProps & {\n  type?: ComponentProps<typeof TextField>[\"type\"];\n  defaultValue?: UserProp[\"value\"];\n};\nconst TextControl = ({\n  value,\n  defaultValue,\n  type,\n  onChange,\n}: TextControlProps) => (\n  <TextField\n    type={type}\n    variant=\"ghost\"\n    placeholder=\"Value\"\n    name=\"value\"\n    value={String(value || defaultValue || \"\")}\n    onChange={(event) => {\n      onChange(event.target.value);\n    }}\n  />\n);\ntype CheckboxControlProps = BaseControlProps & {\n  options: Array<string>;\n};\nconst CheckboxControl = ({\n  value,\n  options,\n  defaultValue,\n  onChange,\n}: CheckboxControlProps) => (\n  <RadioGroup\n    css={{ flexDirection: \"column\" }}\n    name=\"value\"\n    value={String(value || defaultValue || \"\")}\n    onValueChange={onChange}\n  >\n    {options.map((value) => (\n      <Flex align=\"center\" gap=\"1\" key={value}>\n        <Checkbox value={value} />\n        <Label>{value}</Label>\n      </Flex>\n    ))}\n  </RadioGroup>\n);\ntype RadioControlProps = BaseControlProps & {\n  options: Array<string>;\n};\nconst RadioControl = ({\n  value,\n  options,\n  defaultValue,\n  onChange,\n}: RadioControlProps) => (\n  <RadioGroup\n    css={{ flexDirection: \"column\" }}\n    name=\"value\"\n    value={String(value || defaultValue || \"\")}\n    onValueChange={onChange}\n  >\n    {options.map((value) => (\n      <Flex align=\"center\" gap=\"1\" key={value}>\n        <Radio value={value} id={value} />\n        <Label htmlFor={value}>{value}</Label>\n      </Flex>\n    ))}\n  </RadioGroup>\n);\n\ntype SelectControlProps = BaseControlProps & {\n  options: Array<string>;\n};\n\nconst SelectControl = ({\n  value,\n  options,\n  defaultValue,\n  onChange,\n}: SelectControlProps) => (\n  <Select\n    name=\"value\"\n    value={String(value || defaultValue || \"\")}\n    options={options}\n    onChange={onChange}\n  />\n);\n\nconst BooleanControl = ({\n  value,\n  defaultValue,\n  onChange,\n}: BaseControlProps) => (\n  <Switch\n    name=\"value\"\n    defaultChecked={Boolean(defaultValue)}\n    checked={value === true}\n    onCheckedChange={onChange}\n  />\n);\n\nconst RangeControl = ({\n  value,\n  defaultValue,\n  onChange,\n  min,\n  max,\n  step,\n}: RangeControlProps) => (\n  <Flex direction=\"column\" gap={1}>\n    <Slider\n      value={value}\n      defaultValue={defaultValue}\n      onValueChange={(values) => {\n        onChange(values[0]);\n      }}\n      min={min}\n      max={max}\n      step={step}\n    />\n    <Flex direction=\"row\" justify=\"between\">\n      <Text size={1}>{min}</Text>\n      <Text size={1}>{max}</Text>\n    </Flex>\n  </Flex>\n);\n\nconst NotImplemented = () => <div />;\n\ntype PrimitiveControlProps = BaseControlProps & {\n  type: \"array\" | \"boolean\" | \"date\" | \"number\" | \"object\" | \"text\";\n};\n\ntype ColorControlProps = BaseControlProps & {\n  type: \"color\";\n  presetColors?: Array<string>;\n};\n\ntype FileControlProps = BaseControlProps & {\n  type: \"file\";\n  accept: string;\n};\n\ntype RangeControlProps = BaseControlProps<number> & {\n  type: \"range\";\n  min: number;\n  max: number;\n  step: number;\n};\n\ntype OptionsControlProps = BaseControlProps & {\n  type:\n    | \"radio\"\n    | \"inline-radio\"\n    | \"check\"\n    | \"inline-check\"\n    | \"select\"\n    | \"multi-select\";\n  options: Array<string>;\n};\n\nexport type ControlProps =\n  | PrimitiveControlProps\n  | OptionsControlProps\n  | FileControlProps\n  | ColorControlProps\n  | RangeControlProps;\n\n// eslint-disable-next-line func-style\nexport function Control(props: ControlProps) {\n  switch (props.type) {\n    case \"array\":\n      return <TextControl {...props} />;\n    case \"boolean\":\n      return <BooleanControl {...props} />;\n    case \"color\":\n      return <TextControl {...props} type=\"color\" />;\n    case \"date\":\n      return <TextControl {...props} type=\"date\" />;\n    case \"file\":\n      return <TextControl {...props} type=\"file\" />;\n    case \"number\":\n      return <TextControl {...props} type=\"number\" />;\n    case \"range\":\n      return <RangeControl {...props} />;\n    case \"object\":\n      return <TextControl {...props} />;\n    case \"radio\":\n      return <RadioControl {...props} />;\n    case \"inline-radio\":\n      return <RadioControl {...props} />;\n    case \"check\":\n      return <CheckboxControl {...props} />;\n    case \"inline-check\":\n      return <CheckboxControl {...props} />;\n    case \"select\":\n      return <SelectControl {...props} />;\n    case \"multi-select\":\n      return <CheckboxControl {...props} />;\n    case \"text\":\n      return <TextControl {...props} />;\n    default: {\n      const _exhaustiveCheck: never = props;\n      return <NotImplemented />;\n    }\n  }\n}\n", "import React from \"react\";\nimport { styled, CSS, VariantProps } from \"../stitches.config\";\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\";\nimport { CheckIcon } from \"apps/designer/app/shared/icons\";\n\nconst StyledCheckbox = styled(CheckboxPrimitive.Root, {\n  all: \"unset\",\n  boxSizing: \"border-box\",\n  userSelect: \"none\",\n  \"&::before\": {\n    boxSizing: \"border-box\",\n  },\n  \"&::after\": {\n    boxSizing: \"border-box\",\n  },\n\n  alignItems: \"center\",\n  appearance: \"none\",\n  display: \"inline-flex\",\n  justifyContent: \"center\",\n  lineHeight: \"1\",\n  margin: \"0\",\n  outline: \"none\",\n  padding: \"0\",\n  WebkitTapHighlightColor: \"rgba(0,0,0,0)\",\n\n  color: \"$hiContrast\",\n  boxShadow: \"inset 0 0 0 1px $colors$slate7\",\n  overflow: \"hidden\",\n  \"@hover\": {\n    \"&:hover\": {\n      boxShadow: \"inset 0 0 0 1px $colors$slate8\",\n    },\n  },\n  \"&:focus\": {\n    outline: \"none\",\n    borderColor: \"$red7\",\n    boxShadow: \"inset 0 0 0 1px $colors$blue9, 0 0 0 1px $colors$blue9\",\n  },\n\n  variants: {\n    size: {\n      \"1\": {\n        width: \"$3\",\n        height: \"$3\",\n        borderRadius: \"$1\",\n      },\n      \"2\": {\n        width: \"$5\",\n        height: \"$5\",\n        borderRadius: \"$2\",\n      },\n    },\n  },\n  defaultVariants: {\n    size: \"1\",\n  },\n});\n\nconst StyledIndicator = styled(CheckboxPrimitive.Indicator, {\n  alignItems: \"center\",\n  display: \"flex\",\n  height: \"100%\",\n  justifyContent: \"center\",\n  width: \"100%\",\n});\n\ntype CheckboxPrimitiveProps = React.ComponentProps<\n  typeof CheckboxPrimitive.Root\n>;\ntype CheckboxVariants = VariantProps<typeof StyledCheckbox>;\ntype CheckboxProps = CheckboxPrimitiveProps & CheckboxVariants & { css?: CSS };\n\nexport const Checkbox = React.forwardRef<\n  React.ElementRef<typeof StyledCheckbox>,\n  CheckboxProps\n>((props, forwardedRef) => (\n  <StyledCheckbox {...props} ref={forwardedRef}>\n    <StyledIndicator>\n      <CheckIcon />\n    </StyledIndicator>\n  </StyledCheckbox>\n));\n\nCheckbox.displayName = \"Checkbox\";\n", "import type {\n  DeleteProp,\n  Publish,\n  UserProp,\n  UserPropsUpdates,\n} from \"@webstudio-is/sdk\";\nimport { componentsMeta } from \"@webstudio-is/sdk\";\nimport ObjectId from \"bson-objectid\";\nimport produce from \"immer\";\nimport uniqBy from \"lodash/uniqBy\";\nimport debounce from \"lodash/debounce\";\nimport { useRef, useState } from \"react\";\nimport type { SelectedInstanceData } from \"apps/designer/app/shared/canvas-components\";\n\nexport type handleChangePropType = (\n  id: UserProp[\"id\"],\n  field: \"prop\" | \"value\",\n  value: UserProp[\"prop\"] | UserProp[\"value\"]\n) => void;\n\nconst getRequiredProps = (\n  selectedInstanceData: SelectedInstanceData\n): UserProp[] => {\n  const { component } = selectedInstanceData;\n  const meta = componentsMeta[component];\n  const argTypes = meta?.argTypes || {};\n  return Object.entries(argTypes)\n    .filter(([_, value]) => value.required)\n    .map(([prop, _]) => ({\n      id: ObjectId().toString(),\n      prop,\n      value: \"\",\n      required: true,\n    }));\n};\n\n// @todo: This returns same props for all instances.\n// See the failing test in use-props-logic.test.ts\nconst getPropsWithDefaultValue = (\n  selectedInstanceData: SelectedInstanceData\n): UserProp[] => {\n  const { component } = selectedInstanceData;\n  const meta = componentsMeta[component];\n  const argTypes = meta?.argTypes || {};\n  return Object.entries(argTypes)\n    .filter(([_, value]) => value.defaultValue != null)\n    .map(([prop, propObj]) => {\n      const { defaultValue } = propObj;\n      const value = \"value\" in defaultValue ? defaultValue.value : defaultValue;\n      return {\n        id: ObjectId().toString(),\n        prop,\n        value,\n      };\n    });\n};\n\ntype UsePropsLogic = {\n  publish: Publish;\n  selectedInstanceData: SelectedInstanceData;\n};\n\nexport const usePropsLogic = ({\n  selectedInstanceData,\n  publish,\n}: UsePropsLogic) => {\n  const props =\n    selectedInstanceData.props === undefined ||\n    selectedInstanceData.props.props.length === 0\n      ? []\n      : selectedInstanceData.props.props;\n\n  const initialState = uniqBy(\n    [\n      ...props,\n      ...getPropsWithDefaultValue(selectedInstanceData),\n      ...getRequiredProps(selectedInstanceData),\n    ],\n    \"prop\"\n  );\n\n  const [userProps, setUserProps] = useState<Array<UserProp>>(initialState);\n  const propsToPublishRef = useRef<{\n    [id: UserProp[\"id\"]]: true;\n  }>({});\n\n  // @todo this may call the last callback after unmount\n  const updateProps = debounce((updates: UserPropsUpdates[\"updates\"]) => {\n    publish<\"updateProps\", UserPropsUpdates>({\n      type: \"updateProps\",\n      payload: {\n        treeId: selectedInstanceData.props.treeId,\n        propsId: selectedInstanceData.props.id,\n        instanceId: selectedInstanceData.id,\n        updates,\n      },\n    });\n    for (const update of updates) {\n      delete propsToPublishRef.current[update.id];\n    }\n  }, 1000);\n\n  const deleteProp = (id: UserProp[\"id\"]) => {\n    publish<\"deleteProp\", DeleteProp>({\n      type: \"deleteProp\",\n      payload: {\n        instanceId: selectedInstanceData.id,\n        propId: id,\n      },\n    });\n  };\n\n  const handleChangeProp: handleChangePropType = (id, field, value) => {\n    const index = userProps.findIndex((item) => item.id === id);\n    const nextUserProps = produce((draft: Array<UserProp>) => {\n      const isPropRequired = draft[index].required;\n      switch (field) {\n        case \"prop\":\n          if (!isPropRequired) {\n            // TODO: Use discriminant type to make this more clear or separate into 2 functions\n            draft[index].prop = value as UserProp[\"prop\"];\n          }\n          break;\n        case \"value\":\n          draft[index].value = value;\n          break;\n      }\n    })(userProps);\n    setUserProps(nextUserProps);\n\n    propsToPublishRef.current[id] = true;\n    const updates = Object.keys(propsToPublishRef.current)\n      .map((id) => nextUserProps.find((prop) => prop.id === id))\n      // Could be empty if you quickly remove props which have pending changes\n      .filter(Boolean) as Array<UserProp>;\n    updateProps(updates);\n  };\n\n  const handleDeleteProp = (id: UserProp[\"id\"]) => {\n    const nextUserProps = [...userProps];\n    const prop = userProps.find((prop) => prop.id === id);\n\n    // Required prop should never be deleted\n    if (prop === undefined || prop.required) return;\n\n    const index = nextUserProps.indexOf(prop);\n    nextUserProps.splice(index, 1);\n    setUserProps(nextUserProps);\n    deleteProp(id);\n  };\n\n  const addEmptyProp = () => {\n    setUserProps([\n      ...userProps,\n      {\n        id: ObjectId().toString(),\n        prop: \"\",\n        value: \"\",\n      },\n    ]);\n  };\n\n  return {\n    addEmptyProp,\n    userProps,\n    handleChangeProp,\n    handleDeleteProp,\n  };\n};\n", "import type { Publish } from \"@webstudio-is/sdk\";\nimport {\n  Tabs,\n  TabsList,\n  TabsTrigger,\n  TabsContent,\n  Card,\n  Paragraph,\n  Box,\n} from \"apps/designer/app/shared/design-system\";\nimport { StylePanel } from \"apps/designer/app/designer/features/style-panel\";\nimport { PropsPanel } from \"apps/designer/app/designer/features/props-panel\";\nimport { BrushIcon, GearIcon } from \"apps/designer/app/shared/icons\";\nimport { useSelectedInstanceData } from \"apps/designer/app/designer/shared/nano-states\";\n\ntype InspectorProps = {\n  publish: Publish;\n};\n\nconst contentStyle = {\n  display: \"flex\",\n  flexDirection: \"column\",\n  overflow: \"auto\",\n};\n\nexport const Inspector = ({ publish }: InspectorProps) => {\n  const [selectedInstanceData] = useSelectedInstanceData();\n\n  if (selectedInstanceData === undefined) {\n    return (\n      <Box css={{ p: \"$2\" }}>\n        <Card css={{ p: \"$3\", mt: \"$3\" }}>\n          <Paragraph>Select an instance on the canvas</Paragraph>\n        </Card>\n      </Box>\n    );\n  }\n\n  return (\n    <Tabs defaultValue=\"style\" css={{ width: \"100%\", gap: \"$2\" }}>\n      <TabsList>\n        <TabsTrigger value=\"style\">\n          <BrushIcon />\n        </TabsTrigger>\n        <TabsTrigger value=\"props\">\n          <GearIcon />\n        </TabsTrigger>\n      </TabsList>\n      <TabsContent value=\"style\" css={contentStyle}>\n        <StylePanel\n          publish={publish}\n          selectedInstanceData={selectedInstanceData}\n        />\n      </TabsContent>\n      <TabsContent value=\"props\" css={contentStyle}>\n        <PropsPanel\n          publish={publish}\n          key={selectedInstanceData.id /* Re-render when instance changes */}\n          selectedInstanceData={selectedInstanceData}\n        />\n      </TabsContent>\n    </Tabs>\n  );\n};\n", "import { useSubscribe, type Publish } from \"@webstudio-is/sdk\";\nimport { EyeOpenIcon } from \"apps/designer/app/shared/icons\";\nimport { SimpleToggle } from \"apps/designer/app/shared/design-system\";\nimport { useIsPreviewMode } from \"apps/designer/app/shared/nano-states\";\n\ntype PreviewButtonProps = {\n  publish: Publish;\n};\n\nexport const PreviewButton = ({ publish }: PreviewButtonProps) => {\n  const [isPreviewMode, setIsPreviewMode] = useIsPreviewMode();\n\n  const setValue = (value: boolean) => {\n    setIsPreviewMode(value);\n    publish<\"previewMode\", boolean>({\n      type: \"previewMode\",\n      payload: value,\n    });\n  };\n\n  useSubscribe<\"togglePreviewMode\">(\"togglePreviewMode\", () => {\n    setValue(!isPreviewMode);\n  });\n\n  return (\n    <SimpleToggle\n      onPressedChange={setValue}\n      pressed={isPreviewMode}\n      aria-label=\"Toggle Preview\"\n    >\n      <EyeOpenIcon />\n    </SimpleToggle>\n  );\n};\n", "import {\n  Button,\n  Flex,\n  IconButton,\n  Popover,\n  PopoverContent,\n  PopoverTrigger,\n  TextField,\n} from \"apps/designer/app/shared/design-system\";\nimport { Share1Icon } from \"apps/designer/app/shared/icons\";\nimport { type Project } from \"@webstudio-is/sdk\";\nimport { useIsShareDialogOpen } from \"../../shared/nano-states\";\n\ntype ShareButtonProps = { path: string; project: Project };\n\nconst Content = ({ path, project }: ShareButtonProps) => {\n  if (typeof location === \"undefined\") {\n    return null;\n  }\n  const url = new URL(\n    `${location.protocol}//${location.host}${path}/${project.id}`\n  );\n  return (\n    <PopoverContent\n      css={{ padding: \"$3\" }}\n      onFocusOutside={(event) => {\n        // Used to prevent closing when opened from the main dropdown menu\n        event.preventDefault();\n      }}\n    >\n      <form\n        onSubmit={(event) => {\n          event.preventDefault();\n          window.open(url.toString(), \"_blank\");\n        }}\n      >\n        <Flex gap=\"2\">\n          <TextField\n            variant=\"ghost\"\n            readOnly\n            defaultValue={url.toString()}\n            onFocus={(event) => {\n              event?.target.select();\n            }}\n          />\n          <Button aria-label=\"Open in a new tab\" variant=\"blue\" type=\"submit\">\n            Open\n          </Button>\n        </Flex>\n      </form>\n    </PopoverContent>\n  );\n};\n\nexport const ShareButton = ({ path, project }: ShareButtonProps) => {\n  const [isOpen, setIsOpen] = useIsShareDialogOpen();\n  return (\n    <Popover open={isOpen} onOpenChange={setIsOpen}>\n      <PopoverTrigger asChild aria-label=\"Share project\">\n        <IconButton>\n          <Share1Icon />\n        </IconButton>\n      </PopoverTrigger>\n      <Content path={path} project={project} />\n    </Popover>\n  );\n};\n", "import { useState, useEffect } from \"react\";\nimport { useFetcher } from \"@remix-run/react\";\nimport { useId } from \"@radix-ui/react-id\";\nimport { RocketIcon, ExternalLinkIcon } from \"apps/designer/app/shared/icons\";\nimport { type Project } from \"@webstudio-is/sdk\";\nimport {\n  Button,\n  Flex,\n  Popover,\n  PopoverContent,\n  PopoverTrigger,\n  TextField,\n  Text,\n  Label,\n  Link,\n} from \"apps/designer/app/shared/design-system\";\nimport { useIsPublishDialogOpen } from \"../../shared/nano-states\";\n\ntype PublishButtonProps = { project: Project };\n\nconst host =\n  typeof location === \"object\"\n    ? location.host.includes(\"webstudio.is\")\n      ? \"wstd.io\"\n      : location.host\n    : \"\";\n\nconst Content = ({ project }: PublishButtonProps) => {\n  const id = useId();\n  const fetcher = useFetcher();\n  const [url, setUrl] = useState<string>();\n  const domain = fetcher.data?.domain || project.domain;\n\n  useEffect(() => {\n    if (typeof location !== \"object\" || !domain) {\n      return;\n    }\n    setUrl(`${location.protocol}//${domain}.${host}`);\n  }, [domain]);\n\n  return (\n    <PopoverContent\n      css={{ padding: \"$3\" }}\n      onFocusOutside={(event) => {\n        // Used to prevent closing when opened from the main dropdown menu\n        event.preventDefault();\n      }}\n    >\n      <fetcher.Form method=\"post\" action=\"/rest/publish\">\n        <Flex direction=\"column\" gap=\"2\">\n          {url !== undefined && (\n            <Link\n              href={url}\n              target=\"_blank\"\n              css={{\n                display: \"flex\",\n                gap: \"$0\",\n              }}\n            >\n              <Text\n                css={{\n                  whiteSpace: \"nowrap\",\n                  overflow: \"hidden\",\n                  textOverflow: \"ellipsis\",\n                }}\n              >\n                {`${domain}.${host}`}{\" \"}\n              </Text>\n              <ExternalLinkIcon />\n            </Link>\n          )}\n          <Flex gap=\"2\" align=\"center\">\n            <input type=\"hidden\" name=\"projectId\" value={project.id} />\n            <Label htmlFor={id}>Domain:</Label>\n            <TextField id={id} name=\"domain\" defaultValue={domain} />\n          </Flex>\n          {fetcher.data?.errors !== undefined && (\n            <Text variant=\"red\">{fetcher.data?.errors}</Text>\n          )}\n          {fetcher.state === \"idle\" ? (\n            <Button variant=\"blue\" type=\"submit\">\n              Publish\n            </Button>\n          ) : (\n            <Button disabled>Publishing\u2026</Button>\n          )}\n        </Flex>\n      </fetcher.Form>\n    </PopoverContent>\n  );\n};\n\nexport const PublishButton = ({ project }: PublishButtonProps) => {\n  const [isOpen, setIsOpen] = useIsPublishDialogOpen();\n  return (\n    <Popover open={isOpen} onOpenChange={setIsOpen}>\n      <PopoverTrigger asChild aria-label=\"Publish\">\n        <Button ghost css={{ display: \"flex\", gap: \"$1\" }}>\n          <RocketIcon />\n          <Text size=\"1\">Publish</Text>\n        </Button>\n      </PopoverTrigger>\n      <Content project={project} />\n    </Popover>\n  );\n};\n", "import {\n  Flex,\n  keyframes,\n  AccessibleIcon,\n} from \"apps/designer/app/shared/design-system\";\nimport { CheckIcon, DotsHorizontalIcon } from \"apps/designer/app/shared/icons\";\nimport { useSyncStatus } from \"../../shared/nano-states\";\n\nconst iconSize = 15;\n\nconst ellipsisKeyframes = keyframes({\n  to: { width: iconSize },\n});\n\nconst AnimatedDotsIcon = () => {\n  return (\n    <Flex\n      direction=\"column\"\n      css={{\n        animation: `${ellipsisKeyframes} steps(4,end) 900ms infinite`,\n        width: 0,\n        overflow: \"hidden\",\n      }}\n    >\n      <DotsHorizontalIcon width=\"12\" height=\"12\" />\n    </Flex>\n  );\n};\n\nexport const SyncStatus = () => {\n  const [status] = useSyncStatus();\n  return (\n    <Flex\n      align=\"center\"\n      justify=\"center\"\n      css={{\n        mx: \"$1\",\n        width: iconSize,\n        height: iconSize,\n        backgroundColor: \"$green9\",\n        borderRadius: \"100%\",\n      }}\n    >\n      <AccessibleIcon label={`Sync status: ${status}`}>\n        {status === \"syncing\" ? <AnimatedDotsIcon /> : <CheckIcon />}\n      </AccessibleIcon>\n    </Flex>\n  );\n};\n", "import { useNavigate } from \"react-router-dom\";\nimport { type Publish } from \"@webstudio-is/sdk\";\nimport {\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuTrigger,\n  DropdownMenuArrow,\n  DropdownMenuSeparator,\n  IconButton,\n  Text,\n} from \"apps/designer/app/shared/design-system\";\nimport { HamburgerMenuIcon } from \"apps/designer/app/shared/icons\";\nimport type { Config } from \"apps/designer/app/config\";\nimport { ShortcutHint } from \"./shortcut-hint\";\nimport {\n  useIsShareDialogOpen,\n  useIsPublishDialogOpen,\n} from \"apps/designer/app/designer/shared/nano-states\";\n\nconst menuItemCss = {\n  display: \"flex\",\n  gap: \"$3\",\n  justifyContent: \"start\",\n  flexGrow: 1,\n  minWidth: 140,\n};\n\nconst textCss = {\n  flexGrow: 1,\n  fontSize: \"$1\",\n};\n\ntype MenuProps = {\n  config: Config;\n  publish: Publish;\n};\n\nexport const Menu = ({ config, publish }: MenuProps) => {\n  const navigate = useNavigate();\n  const [, setIsShareOpen] = useIsShareDialogOpen();\n  const [, setIsPublishOpen] = useIsPublishDialogOpen();\n\n  return (\n    <DropdownMenu>\n      <DropdownMenuTrigger asChild>\n        <IconButton aria-label=\"Menu Button\">\n          <HamburgerMenuIcon />\n        </IconButton>\n      </DropdownMenuTrigger>\n      <DropdownMenuContent>\n        <DropdownMenuItem\n          css={menuItemCss}\n          onSelect={() => {\n            navigate(config.dashboardPath);\n          }}\n        >\n          <Text css={textCss}>Dashboard</Text>\n        </DropdownMenuItem>\n        <DropdownMenuSeparator />\n        <DropdownMenuItem\n          css={menuItemCss}\n          onSelect={() => {\n            publish<\"shortcut\", string>({\n              type: \"shortcut\",\n              payload: \"undo\",\n            });\n          }}\n        >\n          <Text css={textCss}>Undo</Text>\n          <ShortcutHint value={[\"cmd\", \"z\"]} />\n        </DropdownMenuItem>\n        <DropdownMenuItem\n          css={menuItemCss}\n          onSelect={() => {\n            publish<\"shortcut\", string>({\n              type: \"shortcut\",\n              payload: \"redo\",\n            });\n          }}\n        >\n          <Text css={textCss}>Redo</Text>\n          <ShortcutHint value={[\"shift\", \"cmd\", \"z\"]} />\n        </DropdownMenuItem>\n        <DropdownMenuSeparator />\n        <DropdownMenuItem\n          css={menuItemCss}\n          onSelect={() => {\n            publish<\"shortcut\", string>({\n              type: \"shortcut\",\n              payload: \"copy\",\n            });\n          }}\n        >\n          <Text css={textCss}>Copy</Text>\n          <ShortcutHint value={[\"cmd\", \"c\"]} />\n        </DropdownMenuItem>\n        <DropdownMenuItem\n          css={menuItemCss}\n          onSelect={() => {\n            publish<\"shortcut\", string>({\n              type: \"shortcut\",\n              payload: \"paste\",\n            });\n          }}\n        >\n          <Text css={textCss}>Paste</Text>\n          <ShortcutHint value={[\"cmd\", \"v\"]} />\n        </DropdownMenuItem>\n        <DropdownMenuItem\n          css={menuItemCss}\n          onSelect={() => {\n            publish<\"shortcut\", string>({\n              type: \"shortcut\",\n              payload: \"delete\",\n            });\n          }}\n        >\n          <Text css={textCss}>Delete</Text>\n          <ShortcutHint value={[\"backspace\"]} />\n        </DropdownMenuItem>\n        <DropdownMenuSeparator />\n        <DropdownMenuItem\n          css={menuItemCss}\n          onSelect={() => {\n            publish({ type: \"openBreakpointsMenu\" });\n          }}\n        >\n          <Text css={textCss}>Breakpoints</Text>\n          <ShortcutHint value={[\"cmd\", \"b\"]} />\n        </DropdownMenuItem>\n        <DropdownMenuItem\n          css={menuItemCss}\n          onSelect={() => {\n            publish({\n              type: \"zoom\",\n              payload: \"zoomIn\",\n            });\n          }}\n        >\n          <Text css={textCss}>Zoom in</Text>\n          <ShortcutHint value={[\"cmd\", \"+\"]} />\n        </DropdownMenuItem>\n        <DropdownMenuItem\n          css={menuItemCss}\n          onSelect={() => {\n            publish({\n              type: \"zoom\",\n              payload: \"zoomOut\",\n            });\n          }}\n        >\n          <Text css={textCss}>Zoom out</Text>\n          <ShortcutHint value={[\"cmd\", \"-\"]} />\n        </DropdownMenuItem>\n        <DropdownMenuSeparator />\n        <DropdownMenuItem\n          css={menuItemCss}\n          onSelect={() => {\n            publish<\"togglePreviewMode\">({\n              type: \"togglePreviewMode\",\n            });\n          }}\n        >\n          <Text css={textCss}>Preview</Text>\n          <ShortcutHint value={[\"cmd\", \"shift\", \"p\"]} />\n        </DropdownMenuItem>\n        <DropdownMenuItem\n          css={menuItemCss}\n          onSelect={() => {\n            setIsShareOpen(true);\n          }}\n        >\n          <Text css={textCss}>Share</Text>\n        </DropdownMenuItem>\n        <DropdownMenuItem\n          css={menuItemCss}\n          onSelect={() => {\n            setIsPublishOpen(true);\n          }}\n        >\n          <Text css={textCss}>Publish</Text>\n        </DropdownMenuItem>\n        <DropdownMenuArrow offset={10} />\n      </DropdownMenuContent>\n    </DropdownMenu>\n  );\n};\n", "import { Text } from \"apps/designer/app/shared/design-system\";\n\nconst isMac =\n  typeof navigator === \"object\" ? /mac/i.test(navigator.platform) : false;\n\nconst shortcutSymbolMap: Record<string, string> = {\n  cmd: \"\u2318\",\n  ctrl: \"\u2303\",\n  shift: \"\u21E7\",\n  option: \"\u2325\",\n  backspace: \"\u232B\",\n};\n\nconst shortcutWinMap: Record<string, string> = {\n  cmd: \"ctrl\",\n};\n\ntype ShortcutDefinition = Array<string>;\n\n// @todo check what linux needs\n// Converts commands to OS specific equivalent, e.g. cmd on mac to ctrl on win\nconst mapToOs = (value: ShortcutDefinition) => {\n  if (isMac) return value;\n  return value.map((key) => shortcutWinMap[key] || key);\n};\n\nconst format = (value: ShortcutDefinition) => {\n  return mapToOs(value).map(\n    (shortcut) => shortcutSymbolMap[shortcut] ?? shortcut.toUpperCase()\n  );\n};\n\nexport const ShortcutHint = ({ value }: { value: ShortcutDefinition }) => {\n  return (\n    <Text size=\"1\" css={{ letterSpacing: 1.5 }}>\n      {format(value)}\n    </Text>\n  );\n};\n", "import { useEffect, useState } from \"react\";\nimport { useSubscribe, type Breakpoint, type Publish } from \"@webstudio-is/sdk\";\nimport {\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuTrigger,\n  DropdownMenuArrow,\n  DropdownMenuSeparator,\n  DropdownMenuCheckboxItem,\n  Text,\n  Flex,\n} from \"apps/designer/app/shared/design-system\";\nimport { sort } from \"apps/designer/app/shared/breakpoints\";\nimport {\n  useSelectedBreakpoint,\n  useCanvasWidth,\n} from \"../../shared/nano-states\";\nimport { willRender } from \"apps/designer/app/designer/shared/breakpoints\";\nimport { BreakpointsEditor } from \"./breakpoints-editor\";\nimport { Preview } from \"./preview\";\nimport { ZoomSetting } from \"./zoom-setting\";\nimport { TriggerButton } from \"./trigger-button\";\nimport { WidthSetting } from \"./width-setting\";\nimport {\n  useSubscribeZoomFromShortcut,\n  useSubscribeSelectBreakpointFromShortcut,\n} from \"./use-subscribe-shortcuts\";\nimport { ConfirmationDialog } from \"./confirmation-dialog\";\nimport { useBreakpoints } from \"apps/designer/app/shared/nano-states\";\n\ntype BreakpointSelectorItemProps = {\n  breakpoint: Breakpoint;\n};\n\nconst BreakpointSelectorItem = ({\n  breakpoint,\n}: BreakpointSelectorItemProps) => {\n  const [canvasWidth] = useCanvasWidth();\n  return (\n    <Flex align=\"center\" justify=\"between\" gap=\"3\" css={{ flexGrow: 1 }}>\n      <Text size=\"1\" css={{ flexGrow: 1 }}>\n        {breakpoint.label}\n      </Text>\n      <Text\n        size=\"1\"\n        variant={willRender(breakpoint, canvasWidth) ? \"contrast\" : \"gray\"}\n      >\n        {breakpoint.minWidth}\n      </Text>\n    </Flex>\n  );\n};\nconst menuItemCss = {\n  display: \"flex\",\n  gap: \"$3\",\n  justifyContent: \"start\",\n  flexGrow: 1,\n  minWidth: 180,\n};\n\ntype BreakpointsProps = {\n  publish: Publish;\n};\n\nexport const Breakpoints = ({ publish }: BreakpointsProps) => {\n  const [view, setView] = useState<\n    \"selector\" | \"editor\" | \"confirmation\" | undefined\n  >();\n  const [breakpointToDelete, setBreakpointToDelete] = useState<\n    Breakpoint | undefined\n  >();\n  const [breakpoints, setBreakpoints] = useBreakpoints();\n  const [selectedBreakpoint, setSelectedBreakpoint] = useSelectedBreakpoint();\n  const [breakpointPreview, setBreakpointPreview] =\n    useState(selectedBreakpoint);\n  useSubscribeSelectBreakpointFromShortcut();\n  useSubscribeZoomFromShortcut();\n\n  useEffect(() => {\n    setBreakpointPreview(selectedBreakpoint);\n  }, [selectedBreakpoint]);\n\n  useSubscribe(\"openBreakpointsMenu\", () => {\n    setView(\"selector\");\n  });\n\n  useSubscribe(\"clickCanvas\", () => {\n    setView(undefined);\n  });\n\n  if (selectedBreakpoint === undefined) return null;\n\n  const handleDelete = () => {\n    if (breakpointToDelete === undefined) return;\n    const nextBreakpoints = [...breakpoints];\n    const index = breakpoints.indexOf(breakpointToDelete);\n    nextBreakpoints.splice(index, 1);\n    setBreakpoints(nextBreakpoints);\n    if (breakpointToDelete === selectedBreakpoint) {\n      setSelectedBreakpoint(sort(nextBreakpoints)[0]);\n    }\n    publish({\n      type: \"breakpointDelete\",\n      payload: breakpointToDelete,\n    });\n    setBreakpointToDelete(undefined);\n    setView(\"editor\");\n  };\n\n  return (\n    // @todo this should be a popover instead\n    // there is a bunch of accessibility issues here\n    <DropdownMenu\n      open={view !== undefined}\n      onOpenChange={(isOpen) => {\n        setView(isOpen ? \"selector\" : undefined);\n      }}\n    >\n      <DropdownMenuTrigger asChild>\n        <TriggerButton />\n      </DropdownMenuTrigger>\n      <DropdownMenuContent>\n        {view === \"confirmation\" && (\n          <ConfirmationDialog\n            breakpoint={selectedBreakpoint}\n            onAbort={() => {\n              setBreakpointToDelete(undefined);\n              setView(\"editor\");\n            }}\n            onConfirm={handleDelete}\n          />\n        )}\n        {view === \"editor\" && (\n          <>\n            <BreakpointsEditor\n              breakpoints={breakpoints}\n              publish={publish}\n              onDelete={(breakpoint) => {\n                setBreakpointToDelete(breakpoint);\n                setView(\"confirmation\");\n              }}\n            />\n            <DropdownMenuSeparator />\n            <DropdownMenuItem\n              css={{ justifyContent: \"center\" }}\n              onSelect={(event) => {\n                event.preventDefault();\n                setView(\"selector\");\n              }}\n            >\n              {\"Done\"}\n            </DropdownMenuItem>\n          </>\n        )}\n        {view === \"selector\" && (\n          <>\n            {sort(breakpoints).map((breakpoint) => {\n              return (\n                <DropdownMenuCheckboxItem\n                  checked={breakpoint === selectedBreakpoint}\n                  key={breakpoint.id}\n                  css={menuItemCss}\n                  onMouseEnter={() => {\n                    setBreakpointPreview(breakpoint);\n                  }}\n                  onMouseLeave={() => {\n                    setBreakpointPreview(selectedBreakpoint);\n                  }}\n                  onSelect={() => {\n                    setSelectedBreakpoint(breakpoint);\n                  }}\n                >\n                  <BreakpointSelectorItem breakpoint={breakpoint} />\n                </DropdownMenuCheckboxItem>\n              );\n            })}\n            <DropdownMenuSeparator />\n            <form>\n              <ZoomSetting />\n              <WidthSetting />\n            </form>\n            <DropdownMenuSeparator />\n            <Preview breakpoint={breakpointPreview} />\n            <DropdownMenuSeparator />\n            <DropdownMenuItem\n              css={{ justifyContent: \"center\" }}\n              onSelect={(event) => {\n                event.preventDefault();\n                setView(\"editor\");\n              }}\n            >\n              {\"Edit breakpoints\"}\n            </DropdownMenuItem>\n          </>\n        )}\n        <DropdownMenuArrow offset={10} />\n      </DropdownMenuContent>\n    </DropdownMenu>\n  );\n};\n", "import { useState } from \"react\";\nimport useDebounce from \"react-use/lib/useDebounce\";\nimport { type Breakpoint, type Publish } from \"@webstudio-is/sdk\";\nimport {\n  Button,\n  TextField,\n  Flex,\n  Text,\n} from \"apps/designer/app/shared/design-system\";\nimport { PlusIcon, TrashIcon } from \"apps/designer/app/shared/icons\";\nimport ObjectId from \"bson-objectid\";\nimport { useBreakpoints } from \"apps/designer/app/shared/nano-states\";\n\ntype BreakpointEditorItemProps = {\n  breakpoint: Breakpoint;\n  onChange: (breakpoint: Breakpoint) => void;\n  onDelete: (breakpoint: Breakpoint) => void;\n};\n\nconst BreakpointEditorItem = ({\n  breakpoint: initialBreakpoint,\n  onChange,\n  onDelete,\n}: BreakpointEditorItemProps) => {\n  const [breakpoint, setBreakpoint] = useState(initialBreakpoint);\n\n  useDebounce(\n    () => {\n      if (breakpoint !== initialBreakpoint) {\n        onChange(breakpoint);\n      }\n    },\n    500,\n    [breakpoint]\n  );\n\n  return (\n    <form\n      onKeyDown={(event) => {\n        event.stopPropagation();\n      }}\n      onChange={(event) => {\n        event.stopPropagation();\n        const form = event.currentTarget;\n        if (form.reportValidity() === false) {\n          return;\n        }\n        const data = new FormData(form);\n        const nextBreakpoint: Breakpoint = {\n          ...breakpoint,\n          label: String(data.get(\"label\")),\n          minWidth: Number(data.get(\"minWidth\")),\n        };\n        setBreakpoint(nextBreakpoint);\n      }}\n    >\n      <Flex gap=\"1\" css={{ paddingLeft: \"$4\", paddingRight: \"$3\" }}>\n        <TextField\n          css={{ width: 100, flexGrow: 1 }}\n          type=\"text\"\n          variant=\"ghost\"\n          defaultValue={breakpoint.label}\n          placeholder=\"Breakpoint name\"\n          name=\"label\"\n          minLength={2}\n          required\n        />\n        <TextField\n          css={{ textAlign: \"right\", width: 50 }}\n          variant=\"ghost\"\n          defaultValue={breakpoint.minWidth}\n          type=\"number\"\n          name=\"minWidth\"\n          min={0}\n          required\n        />\n        <Button\n          type=\"button\"\n          ghost\n          onClick={() => {\n            onDelete(breakpoint);\n          }}\n        >\n          <TrashIcon />\n        </Button>\n      </Flex>\n    </form>\n  );\n};\n\ntype BreakpointsEditorProps = {\n  breakpoints: Array<Breakpoint>;\n  publish: Publish;\n  onDelete: (breakpoint: Breakpoint) => void;\n};\n\nexport const BreakpointsEditor = ({\n  publish,\n  onDelete,\n}: BreakpointsEditorProps) => {\n  const [breakpoints, setBreakpoints] = useBreakpoints();\n  return (\n    <Flex gap=\"2\" direction=\"column\">\n      <Flex\n        align=\"center\"\n        gap=\"1\"\n        justify=\"between\"\n        css={{ paddingLeft: \"$5\", paddingRight: \"$3\", py: \"$1\" }}\n      >\n        <Text>Breakpoints</Text>\n        <Button\n          ghost\n          onClick={() => {\n            setBreakpoints([\n              ...breakpoints,\n              {\n                id: ObjectId().toString(),\n                label: \"\",\n                minWidth: 0,\n              },\n            ]);\n          }}\n        >\n          <PlusIcon />\n        </Button>\n      </Flex>\n      {breakpoints.map((breakpoint) => {\n        return (\n          <BreakpointEditorItem\n            key={breakpoint.id}\n            breakpoint={breakpoint}\n            onChange={(updatedBreakpoint) => {\n              publish({ type: \"breakpointChange\", payload: updatedBreakpoint });\n              const nextBreakpoints = breakpoints.map((breakpoint) => {\n                if (breakpoint.id === updatedBreakpoint.id) {\n                  return updatedBreakpoint;\n                }\n                return breakpoint;\n              });\n              setBreakpoints(nextBreakpoints);\n            }}\n            onDelete={onDelete}\n          />\n        );\n      })}\n    </Flex>\n  );\n};\n", "import { type Breakpoint } from \"@webstudio-is/sdk\";\nimport { Paragraph, Flex, Text } from \"apps/designer/app/shared/design-system\";\n\ntype PreviewProps = {\n  breakpoint?: Breakpoint;\n};\n\nexport const Preview = ({ breakpoint }: PreviewProps) => {\n  return (\n    <Flex css={{ px: \"$5\", py: \"$1\" }} gap=\"1\" direction=\"column\">\n      <Text size=\"1\">CSS Preview</Text>\n      <Paragraph css={{ fontSize: \"$1\" }} variant=\"gray\">\n        {breakpoint === undefined\n          ? \"No breakpoint selected\"\n          : `@media (min-width: ${breakpoint.minWidth}px)`}\n      </Paragraph>\n    </Flex>\n  );\n};\n", "import { useZoom } from \"apps/designer/app/designer/shared/nano-states\";\nimport { Slider, Text, Flex } from \"apps/designer/app/shared/design-system\";\n\nexport const minZoom = 10;\n\nexport const ZoomSetting = () => {\n  const [value, setValue] = useZoom();\n  return (\n    <Flex css={{ px: \"$5\", py: \"$1\" }} gap=\"1\" direction=\"column\">\n      <Text size=\"1\">Zoom</Text>\n      <Flex gap=\"3\" align=\"center\">\n        <Slider\n          min={minZoom}\n          value={[value]}\n          onValueChange={([value]) => {\n            setValue(value);\n          }}\n        />\n        <Text size=\"1\">{value}%</Text>\n      </Flex>\n    </Flex>\n  );\n};\n", "import { forwardRef, type ComponentProps, type ElementRef } from \"react\";\nimport { type Breakpoint } from \"@webstudio-is/sdk\";\nimport {\n  useCanvasWidth,\n  useZoom,\n  useSelectedBreakpoint,\n} from \"apps/designer/app/designer/shared/nano-states\";\nimport { willRender } from \"apps/designer/app/designer/shared/breakpoints\";\nimport { Button, Text } from \"apps/designer/app/shared/design-system\";\nimport {\n  DesktopIcon,\n  LaptopIcon,\n  MobileIcon,\n  TabletIcon,\n} from \"apps/designer/app/shared/icons\";\n\ntype TriggerButtonProps = ComponentProps<typeof Button>;\n\nconst renderIcon = (breakpoint: Breakpoint, variant: \"contrast\" | \"gray\") => {\n  const color = variant === \"contrast\" ? \"white\" : \"gray\";\n  if (breakpoint.minWidth >= 1280) {\n    return <DesktopIcon color={color} />;\n  }\n  if (breakpoint.minWidth >= 1024) {\n    return <LaptopIcon color={color} />;\n  }\n  if (breakpoint.minWidth >= 768) {\n    return <TabletIcon color={color} />;\n  }\n  return <MobileIcon color={color} />;\n};\n\nexport const TriggerButton = forwardRef<\n  ElementRef<typeof Button>,\n  TriggerButtonProps\n>((props, ref) => {\n  const [zoom] = useZoom();\n  const [breakpoint] = useSelectedBreakpoint();\n  const [canvasWidth] = useCanvasWidth();\n  if (breakpoint === undefined) return null;\n  const variant = willRender(breakpoint, canvasWidth) ? \"contrast\" : \"gray\";\n\n  return (\n    <Button\n      {...props}\n      ref={ref}\n      css={{ gap: \"$1\" }}\n      ghost\n      aria-label=\"Show breakpoints\"\n    >\n      {renderIcon(breakpoint, variant)}\n      <Text size=\"1\" variant={variant}>\n        {`${breakpoint.label} ${canvasWidth}px / ${zoom}%`}\n      </Text>\n    </Button>\n  );\n});\n\nTriggerButton.displayName = \"TriggerButton\";\n", "import { useMemo } from \"react\";\nimport {\n  useCanvasWidth,\n  useSelectedBreakpoint,\n} from \"apps/designer/app/designer/shared/nano-states\";\nimport { Slider, Text, Flex } from \"apps/designer/app/shared/design-system\";\nimport { sort } from \"apps/designer/app/shared/breakpoints\";\nimport {\n  useBreakpoints,\n  useIsPreviewMode,\n} from \"apps/designer/app/shared/nano-states\";\n\n// Doesn't make sense to allow resizing the canvas lower/higher than this.\nexport const minWidth = 50;\nexport const maxWidth = 3000;\n\n/**\n * Return the next breakpoint from the currently selected one, sorted by the `sort()`\n */\nconst useNextBreakpoint = () => {\n  const [selectedBreakpoint] = useSelectedBreakpoint();\n  const [breakpoints] = useBreakpoints();\n\n  const sortedBreakpoints = useMemo(() => sort(breakpoints), [breakpoints]);\n\n  return useMemo(() => {\n    if (selectedBreakpoint === undefined) return;\n    const index = sortedBreakpoints.findIndex(\n      (breakpoint) => breakpoint.id === selectedBreakpoint.id\n    );\n    if (index === -1) return undefined;\n    return sortedBreakpoints[index + 1];\n  }, [sortedBreakpoints, selectedBreakpoint]);\n};\n\nexport const WidthSetting = () => {\n  const [value, setValue] = useCanvasWidth();\n  const [selectedBreakpoint] = useSelectedBreakpoint();\n  const nextBreakpoint = useNextBreakpoint();\n  const [isPreviewMode] = useIsPreviewMode();\n\n  if (selectedBreakpoint === undefined) return null;\n\n  // We want to enable unconstrained resizing in a preview mode\n  const min = isPreviewMode\n    ? minWidth\n    : Math.max(minWidth, selectedBreakpoint.minWidth);\n  const max = isPreviewMode\n    ? maxWidth\n    : Math.min(\n        maxWidth,\n        nextBreakpoint ? nextBreakpoint.minWidth - 1 : maxWidth\n      );\n\n  return (\n    <Flex css={{ px: \"$5\", py: \"$1\" }} gap=\"1\" direction=\"column\">\n      <Text size=\"1\">Canvas width</Text>\n      <Flex gap=\"3\" align=\"center\">\n        <Slider\n          min={min}\n          max={max}\n          value={[value]}\n          onValueChange={([value]) => {\n            setValue(value);\n          }}\n        />\n        <Text size=\"1\">{`${value}px`}</Text>\n      </Flex>\n    </Flex>\n  );\n};\n", "import { useSubscribe } from \"@webstudio-is/sdk\";\nimport { sort } from \"apps/designer/app/shared/breakpoints\";\nimport { useBreakpoints } from \"apps/designer/app/shared/nano-states\";\nimport { useZoom, useSelectedBreakpoint } from \"../../shared/nano-states\";\nimport { minZoom } from \"./zoom-setting\";\n\nexport const useSubscribeSelectBreakpointFromShortcut = () => {\n  const [breakpoints] = useBreakpoints();\n  const [, setSelectedBreakpoint] = useSelectedBreakpoint();\n  useSubscribe<\"selectBreakpointFromShortcut\", number>(\n    \"selectBreakpointFromShortcut\",\n    (index) => {\n      const breakpoint = sort(breakpoints)[index - 1];\n      if (breakpoint) setSelectedBreakpoint(breakpoint);\n    }\n  );\n};\n\nconst zoomStep = 20;\n\nexport const useSubscribeZoomFromShortcut = () => {\n  const [zoom, setZoom] = useZoom();\n  useSubscribe<\"zoom\", \"zoomIn\" | \"zoomOut\">(\"zoom\", (direction) => {\n    if (direction === \"zoomIn\") {\n      setZoom(Math.min(zoom + zoomStep, 100));\n      return;\n    }\n\n    setZoom(Math.max(zoom - zoomStep, minZoom));\n  });\n};\n", "import { type Breakpoint } from \"@webstudio-is/sdk\";\nimport { Button, Flex, Text } from \"apps/designer/app/shared/design-system\";\n\ntype ConfirmationDialogProps = {\n  onAbort: () => void;\n  onConfirm: () => void;\n  breakpoint: Breakpoint;\n};\n\nexport const ConfirmationDialog = ({\n  breakpoint,\n  onConfirm,\n  onAbort,\n}: ConfirmationDialogProps) => {\n  return (\n    <Flex gap=\"2\" direction=\"column\" css={{ px: \"$5\", py: \"$2\", width: 300 }}>\n      <Text size=\"2\" css={{ lineHeight: 1.5 }}>\n        {`Are you sure you want to delete \"${breakpoint.label}\"?`}\n      </Text>\n      <Text size=\"2\" css={{ lineHeight: 1.5 }}>\n        {`Deleting a breakpoint will also delete all styles associated with this\n        breakpoint.`}\n      </Text>\n      <Flex justify=\"end\" gap=\"2\">\n        <Button\n          onClick={() => {\n            onConfirm();\n          }}\n        >\n          Delete\n        </Button>\n        <Button\n          autoFocus\n          onClick={() => {\n            onAbort();\n          }}\n        >\n          Abort\n        </Button>\n      </Flex>\n    </Flex>\n  );\n};\n", "import { useCallback, useEffect } from \"react\";\nimport {\n  useSelectedBreakpoint,\n  useCanvasWidth,\n} from \"apps/designer/app/designer/shared/nano-states\";\nimport { useIsPreviewMode } from \"apps/designer/app/shared/nano-states\";\nimport { minWidth } from \"./width-setting\";\n\nexport const useUpdateCanvasWidth = () => {\n  const [selectedBreakpoint] = useSelectedBreakpoint();\n  const [canvasWidth, setCanvasWidth] = useCanvasWidth();\n  const [isPreviewMode] = useIsPreviewMode();\n\n  // Ensure the size is within currently selected breakpoint when returning to design mode out of preview mode,\n  // because preview mode enables resizing without constraining to the selected breakpoint.\n  useEffect(() => {\n    if (isPreviewMode === true || selectedBreakpoint === undefined) return;\n    setCanvasWidth(Math.max(selectedBreakpoint.minWidth, minWidth));\n  }, [isPreviewMode, selectedBreakpoint, setCanvasWidth]);\n\n  useEffect(() => {\n    if (selectedBreakpoint === undefined) {\n      return;\n    }\n\n    if (selectedBreakpoint.minWidth === 0) {\n      setCanvasWidth(minWidth);\n      return;\n    }\n\n    setCanvasWidth(Math.max(selectedBreakpoint.minWidth, minWidth));\n  }, [selectedBreakpoint, setCanvasWidth]);\n\n  // Set the initial canvas width based on the selected breakpoint upper bound, which starts where the next breakpoint begins.\n  return useCallback(\n    (iframe: HTMLIFrameElement | null) => {\n      // Once canvasWidth is set, it means we have already set the initial width.\n      if (\n        iframe === null ||\n        selectedBreakpoint === undefined ||\n        canvasWidth !== 0\n      ) {\n        return;\n      }\n\n      setCanvasWidth(minWidth);\n    },\n    [canvasWidth, selectedBreakpoint, setCanvasWidth]\n  );\n};\n", "import { useEffect } from \"react\";\nimport { Breakpoint, useSubscribe } from \"@webstudio-is/sdk\";\nimport { useSelectedBreakpoint } from \"apps/designer/app/designer/shared/nano-states\";\nimport { sort } from \"apps/designer/app/shared/breakpoints\";\nimport { useBreakpoints } from \"apps/designer/app/shared/nano-states\";\n\nexport const useSubscribeBreakpoints = () => {\n  const [breakpoints, setBreakpoints] = useBreakpoints();\n  const [selectedBreakpoint, setSelectedBreakpoint] = useSelectedBreakpoint();\n\n  useSubscribe<\"loadBreakpoints\", Array<Breakpoint>>(\n    \"loadBreakpoints\",\n    setBreakpoints\n  );\n\n  useEffect(() => {\n    // Set the initial selected breakpoint\n    if (selectedBreakpoint === undefined && breakpoints.length !== 0) {\n      setSelectedBreakpoint(sort(breakpoints)[0]);\n    }\n\n    // Breakpoints must have changed, lets update the selected breakpoint\n    if (\n      selectedBreakpoint !== undefined &&\n      breakpoints.includes(selectedBreakpoint) === false\n    ) {\n      const nextSelectedBreakpoint = breakpoints.find(\n        (breakpoint) => breakpoint.id === selectedBreakpoint.id\n      );\n      if (nextSelectedBreakpoint !== undefined)\n        setSelectedBreakpoint(nextSelectedBreakpoint);\n    }\n  }, [breakpoints, selectedBreakpoint, setSelectedBreakpoint]);\n};\n", "import type { Project, Publish } from \"@webstudio-is/sdk\";\nimport { Flex, type CSS } from \"apps/designer/app/shared/design-system\";\nimport type { Config } from \"apps/designer/app/config\";\nimport { PreviewButton } from \"./preview\";\nimport { ShareButton } from \"./share\";\nimport { PublishButton } from \"./publish\";\nimport { SyncStatus } from \"./sync-status\";\nimport { Menu } from \"./menu\";\nimport { Breakpoints } from \"../breakpoints\";\n\ntype TopbarProps = {\n  config: Config;\n  css: CSS;\n  project: Project;\n  publish: Publish;\n};\n\nexport const Topbar = ({ config, css, project, publish }: TopbarProps) => {\n  return (\n    <Flex\n      as=\"header\"\n      align=\"center\"\n      justify=\"between\"\n      css={{\n        p: \"$1\",\n        bc: \"$loContrast\",\n        borderBottom: \"1px solid $slate8\",\n        ...css,\n      }}\n    >\n      <Menu config={config} publish={publish} />\n      <Breakpoints publish={publish} />\n      <Flex gap=\"1\" align=\"center\">\n        <SyncStatus />\n        <PreviewButton publish={publish} />\n        <ShareButton path={config.previewPath} project={project} />\n        <PublishButton project={project} />\n      </Flex>\n    </Flex>\n  );\n};\n", "import { ChevronRightIcon } from \"apps/designer/app/shared/icons\";\nimport { Button, Flex, Text } from \"apps/designer/app/shared/design-system\";\nimport { useSelectedInstancePath } from \"../../shared/instance/use-selected-instance-path\";\nimport { type Publish, type Instance } from \"@webstudio-is/sdk\";\nimport { useSelectedInstanceData } from \"apps/designer/app/designer/shared/nano-states\";\n\ntype BreadcrumbProps = {\n  component: Instance[\"component\"];\n  onClick: () => void;\n};\n\nconst Breadcrumb = ({ component, onClick }: BreadcrumbProps) => {\n  return (\n    <Flex align=\"center\">\n      <Button ghost css={{ color: \"$loContrast\", px: 0 }} onClick={onClick}>\n        {component}\n      </Button>{\" \"}\n      <ChevronRightIcon />\n    </Flex>\n  );\n};\n\nconst EmptyState = () => (\n  <Text variant=\"loContrast\" size=\"1\">\n    No instance selected\n  </Text>\n);\n\ntype BreadcrumbsProps = {\n  publish: Publish;\n};\nexport const Breadcrumbs = ({ publish }: BreadcrumbsProps) => {\n  const [selectedInstanceData] = useSelectedInstanceData();\n  const selectedInstancePath = useSelectedInstancePath(\n    selectedInstanceData?.id\n  );\n  return (\n    <Flex\n      as=\"footer\"\n      align=\"center\"\n      css={{ height: \"$5\", background: \"$hiContrast\", padding: \"$1\" }}\n    >\n      {selectedInstancePath.length === 0 ? (\n        <EmptyState />\n      ) : (\n        selectedInstancePath.map((instance) => (\n          <Breadcrumb\n            key={instance.id}\n            component={instance.component}\n            onClick={() => {\n              publish<\"selectInstanceById\", Instance[\"id\"]>({\n                type: \"selectInstanceById\",\n                payload: instance.id,\n              });\n            }}\n          />\n        ))\n      )}\n    </Flex>\n  );\n};\n", "import { Instance, useSubscribe } from \"@webstudio-is/sdk\";\nimport produce from \"immer\";\nimport { useState } from \"react\";\nimport { Tree } from \"apps/designer/app/designer/shared/tree\";\nimport {\n  type DragData,\n  type DropData,\n} from \"apps/designer/app/shared/canvas-components\";\nimport { Flex } from \"apps/designer/app/shared/design-system\";\nimport { useRootInstance } from \"apps/designer/app/shared/nano-states\";\nimport {\n  findInstanceById,\n  getInstancePath,\n  insertInstanceMutable,\n  deleteInstanceMutable,\n} from \"apps/designer/app/shared/tree-utils\";\n\nexport const TreePrevew = () => {\n  const [rootInstance] = useRootInstance();\n  const [draftRootInstance, setDraftRootInstance] = useState(rootInstance);\n  const [instanceId, setInstanceId] = useState<Instance[\"id\"]>();\n\n  useSubscribe<\"dropPreview\", { dragData: DragData; dropData: DropData }>(\n    \"dropPreview\",\n    ({ dragData, dropData }) => {\n      if (rootInstance === undefined) return;\n      setInstanceId(dragData.instance.id);\n\n      const isNew =\n        findInstanceById(rootInstance, dragData.instance.id) === undefined;\n\n      const updatedRootInstance = produce((rootInstanceDraft) => {\n        // - Only delete if the instance existed before.\n        // - Can't reparent an instance inside itself.\n        if (isNew === false && dropData.instance.id !== dragData.instance.id) {\n          deleteInstanceMutable(rootInstanceDraft, dragData.instance.id);\n        }\n        insertInstanceMutable(rootInstanceDraft, dragData.instance, {\n          parentId: dropData.instance.id,\n          position: dropData.position,\n        });\n      })(rootInstance);\n      setDraftRootInstance(updatedRootInstance);\n    }\n  );\n\n  if (draftRootInstance === undefined || instanceId === undefined) {\n    return null;\n  }\n\n  const selectedInstancePath = getInstancePath(draftRootInstance, instanceId);\n\n  if (selectedInstancePath.length === 0) return null;\n\n  return (\n    <Flex gap=\"3\" direction=\"column\" css={{ padding: \"$1\" }}>\n      <Tree\n        instance={draftRootInstance}\n        selectedInstancePath={selectedInstancePath}\n        selectedInstanceId={instanceId}\n        animate={false}\n      />\n    </Flex>\n  );\n};\n", "import { useMemo } from \"react\";\nimport { styled } from \"apps/designer/app/shared/design-system\";\n\nconst OutlineContainer = styled(\"div\", {\n  position: \"absolute\",\n  pointerEvents: \"none\",\n  outline: \"1px solid $blue9\",\n  outlineOffset: -1,\n  top: 0,\n  left: 0,\n});\n\nconst useStyle = (rect?: DOMRect) => {\n  return useMemo(() => {\n    if (rect === undefined) return;\n    return {\n      transform: `translate3d(${rect.left}px, ${rect.top}px, 0)`,\n      width: rect.width,\n      height: rect.height,\n    };\n  }, [rect]);\n};\n\ntype OutlineProps = {\n  children: JSX.Element;\n  rect?: DOMRect;\n};\n\nexport const Outline = ({ children, rect }: OutlineProps) => {\n  const style = useStyle(rect);\n  return <OutlineContainer style={style}>{children}</OutlineContainer>;\n};\n", "import { useCallback, useState } from \"react\";\nimport { styled } from \"apps/designer/app/shared/design-system\";\nimport { primitives } from \"apps/designer/app/shared/canvas-components\";\nimport { type Instance } from \"@webstudio-is/sdk\";\n\ntype LabelPosition = \"top\" | \"inside\" | \"bottom\";\ntype LabelRefCallback = (element: HTMLElement | null) => void;\n\n/**\n * Detects if there is no space on top and for the label and tells to show it inside.\n * - if there is enough space for the label on top of the instance - top\n * - else if instance height is more than 250px - bottom\n * - else inside-top - last resort because it covers a bit of the instance content\n */\nconst useLabelPosition = (\n  instanceRect: DOMRect\n): [LabelRefCallback, LabelPosition] => {\n  const [position, setPosition] = useState<LabelPosition>(\"top\");\n\n  const ref = useCallback(\n    (element) => {\n      if (element === null || instanceRect === undefined) return;\n      const labelRect = element.getBoundingClientRect();\n      let nextPosition: LabelPosition = \"top\";\n      if (labelRect.height > instanceRect.top) {\n        nextPosition = instanceRect.height < 250 ? \"bottom\" : \"inside\";\n      }\n      setPosition(nextPosition);\n    },\n    [instanceRect]\n  );\n\n  return [ref, position];\n};\n\nconst LabelContainer = styled(\n  \"div\",\n  {\n    position: \"absolute\",\n    display: \"flex\",\n    padding: \"0 $1\",\n    height: \"$4\",\n    color: \"$hiContrast\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    gap: \"$1\",\n    fontSize: \"$2\",\n    fontFamily: \"$sans\",\n    lineHeight: 1,\n    minWidth: \"$6\",\n    whiteSpace: \"nowrap\",\n    backgroundColor: \"$blue9\",\n    pointerEvents: \"auto\",\n  },\n  {\n    variants: {\n      position: {\n        top: {\n          top: \"-$4\",\n        },\n        inside: {\n          top: 0,\n        },\n        bottom: {\n          bottom: \"-$4\",\n        },\n      },\n    },\n  }\n);\n\ntype LabelProps = {\n  component: Instance[\"component\"];\n  instanceRect: DOMRect;\n};\n\nexport const Label = ({ component, instanceRect }: LabelProps) => {\n  const [labelRef, position] = useLabelPosition(instanceRect);\n  const primitive = primitives[component];\n  const { Icon } = primitive;\n  return (\n    <LabelContainer position={position} ref={labelRef}>\n      <Icon width=\"1em\" height=\"1em\" />\n      {primitive.label}\n    </LabelContainer>\n  );\n};\n", "import {\n  useSelectedInstanceRect,\n  useTextEditingInstanceId,\n} from \"apps/designer/app/shared/nano-states\";\nimport { useSelectedInstanceData } from \"apps/designer/app/designer/shared/nano-states\";\nimport { Outline } from \"./outline\";\nimport { Label } from \"./label\";\n\nexport const SelectedInstanceOutline = () => {\n  const [instanceRect] = useSelectedInstanceRect();\n  const [instanceData] = useSelectedInstanceData();\n  const [textEditingInstanceId] = useTextEditingInstanceId();\n\n  const isEditingCurrentInstance =\n    textEditingInstanceId !== undefined &&\n    textEditingInstanceId === instanceData?.id;\n\n  if (\n    instanceData === undefined ||\n    instanceRect === undefined ||\n    isEditingCurrentInstance\n  ) {\n    return null;\n  }\n\n  return (\n    <Outline rect={instanceRect}>\n      <Label component={instanceData.component} instanceRect={instanceRect} />\n    </Outline>\n  );\n};\n", "import {\n  useHoveredInstanceRect,\n  useTextEditingInstanceId,\n} from \"apps/designer/app/shared/nano-states\";\nimport {\n  useHoveredInstanceData,\n  useSelectedInstanceData,\n} from \"apps/designer/app/designer/shared/nano-states\";\nimport { Outline } from \"./outline\";\nimport { Label } from \"./label\";\n\nexport const HoveredInstanceOutline = () => {\n  const [selectedInstanceData] = useSelectedInstanceData();\n  const [instanceRect] = useHoveredInstanceRect();\n  const [hoveredInstanceData] = useHoveredInstanceData();\n  const [textEditingInstanceId] = useTextEditingInstanceId();\n\n  const isEditingText = textEditingInstanceId !== undefined;\n  const isHoveringSelectedInstance =\n    selectedInstanceData?.id === hoveredInstanceData?.id;\n\n  if (\n    hoveredInstanceData === undefined ||\n    instanceRect === undefined ||\n    isHoveringSelectedInstance ||\n    isEditingText\n  ) {\n    return null;\n  }\n\n  return (\n    <Outline rect={instanceRect}>\n      <Label\n        component={hoveredInstanceData.component}\n        instanceRect={instanceRect}\n      />\n    </Outline>\n  );\n};\n", "import { type Instance, type Publish } from \"@webstudio-is/sdk\";\nimport { useMemo, useState, type MouseEventHandler } from \"react\";\nimport {\n  useSelectedInstanceData,\n  useSelectionRect,\n} from \"apps/designer/app/designer/shared/nano-states\";\nimport { ToggleGroup, type CSS } from \"apps/designer/app/shared/design-system\";\nimport {\n  FontBoldIcon,\n  FontItalicIcon,\n  Link2Icon,\n} from \"apps/designer/app/shared/icons\";\nimport { createInstance } from \"apps/designer/app/shared/tree-utils\";\n\nconst getPlacement = ({\n  toolbarRect,\n  selectionRect,\n}: {\n  toolbarRect?: DOMRect;\n  selectionRect: DOMRect;\n}) => {\n  let align = \"top\";\n  let left = selectionRect.x + selectionRect.width / 2;\n  // We measure the size in a hidden state after we render the menu,\n  // then show it\n  let visibility = \"hidden\";\n  if (toolbarRect !== undefined) {\n    visibility = \"visible\";\n    // Prevent going further than left 0\n    left = Math.max(left, toolbarRect.width / 2);\n    // Prevent going further than window width\n    left = Math.min(left, window.innerWidth - toolbarRect.width / 2);\n    align = selectionRect.y > toolbarRect.height ? \"top\" : \"bottom\";\n  }\n\n  const marginBottom = align === \"bottom\" ? \"-$5\" : 0;\n  const marginTop = align === \"bottom\" ? 0 : \"-$5\";\n  const transform = \"translateX(-50%)\";\n  const top =\n    align === \"top\"\n      ? Math.max(selectionRect.y - selectionRect.height, 0)\n      : Math.max(selectionRect.y + selectionRect.height);\n\n  return { top, left, marginBottom, marginTop, transform, visibility };\n};\n\ntype Value = \"Bold\" | \"Italic\" | \"Link\";\n\nconst onClickPreventDefault: MouseEventHandler<HTMLDivElement> = (event) => {\n  event.preventDefault();\n  event.stopPropagation();\n};\n\ntype ToolbarProps = {\n  css?: CSS;\n  onValueChange: (value: Value) => void;\n  rootRef: React.Ref<HTMLDivElement>;\n};\n\nconst Toolbar = ({ css, onValueChange, rootRef }: ToolbarProps) => {\n  return (\n    <ToggleGroup.Root\n      ref={rootRef}\n      type=\"single\"\n      onValueChange={onValueChange}\n      onClick={onClickPreventDefault}\n      css={{\n        position: \"absolute\",\n        borderRadius: \"$1\",\n        padding: \"$1 $2\",\n        pointerEvents: \"auto\",\n        ...css,\n      }}\n    >\n      <ToggleGroup.Item value=\"Bold\">\n        <FontBoldIcon />\n      </ToggleGroup.Item>\n      <ToggleGroup.Item value=\"Italic\">\n        <FontItalicIcon />\n      </ToggleGroup.Item>\n      <ToggleGroup.Item value=\"Link\">\n        <Link2Icon />\n      </ToggleGroup.Item>\n    </ToggleGroup.Root>\n  );\n};\n\ntype TextToolbarProps = {\n  publish: Publish;\n};\n\nexport const TextToolbar = ({ publish }: TextToolbarProps) => {\n  const [selectionRect] = useSelectionRect();\n  const [selectedIntsanceData] = useSelectedInstanceData();\n  const [element, setElement] = useState<HTMLElement | null>(null);\n  const placement = useMemo(() => {\n    if (selectionRect === undefined || element === null) return;\n    const toolbarRect = element.getBoundingClientRect();\n    return getPlacement({ toolbarRect, selectionRect });\n  }, [selectionRect, element]);\n\n  if (selectionRect === undefined || selectedIntsanceData === undefined) {\n    return null;\n  }\n\n  return (\n    <Toolbar\n      rootRef={setElement}\n      css={placement}\n      onValueChange={(component) => {\n        const instance = createInstance({ component });\n        publish<\"insertInlineInstance\", Instance>({\n          type: \"insertInlineInstance\",\n          payload: instance,\n        });\n      }}\n    />\n  );\n};\n", "import { useSubscribe } from \"@webstudio-is/sdk\";\nimport {\n  useSelectedInstanceRect,\n  useHoveredInstanceRect,\n} from \"apps/designer/app/shared/nano-states\";\n\nexport const useSubscribeInstanceRect = () => {\n  const [, setSelectedRect] = useSelectedInstanceRect();\n  useSubscribe<\"selectedInstanceRect\", DOMRect>(\n    \"selectedInstanceRect\",\n    setSelectedRect\n  );\n  const [, setHoveredRect] = useHoveredInstanceRect();\n  useSubscribe<\"hoveredInstanceRect\", DOMRect>(\n    \"hoveredInstanceRect\",\n    setHoveredRect\n  );\n};\n", "import { useSubscribe } from \"@webstudio-is/sdk\";\nimport { useSelectionRect } from \"apps/designer/app/designer/shared/nano-states\";\n\nexport const useSubscribeSelectionRect = () => {\n  const [, setSelectionRect] = useSelectionRect();\n  useSubscribe<\"selectionRect\", DOMRect>(\"selectionRect\", setSelectionRect);\n};\n", "import { type Instance, useSubscribe } from \"@webstudio-is/sdk\";\nimport { useTextEditingInstanceId } from \"apps/designer/app/shared/nano-states\";\n\nexport const useSubscribeTextEditingInstanceId = () => {\n  const [, setInstanceId] = useTextEditingInstanceId();\n  useSubscribe<\"textEditingInstanceId\", Instance[\"id\"] | undefined>(\n    \"textEditingInstanceId\",\n    setInstanceId\n  );\n};\n", "import { type Publish } from \"@webstudio-is/sdk\";\nimport { Box } from \"apps/designer/app/shared/design-system\";\nimport {\n  useIsPreviewMode,\n  useIsScrolling,\n  useSubscribeScrollState,\n} from \"apps/designer/app/shared/nano-states\";\nimport { HoveredInstanceOutline, SelectedInstanceOutline } from \"./outline\";\nimport { TextToolbar } from \"./text-toolbar\";\nimport { useSubscribeInstanceRect } from \"./hooks/use-subscribe-instance-rect\";\nimport { useSubscribeSelectionRect } from \"./hooks/use-subscribe-selection-rect\";\nimport { useSubscribeTextEditingInstanceId } from \"./hooks/use-subscribe-editing-instance-id\";\n\nconst toolsStyle = {\n  position: \"absolute\",\n  top: 0,\n  right: 0,\n  bottom: 0,\n  left: 0,\n  pointerEvents: \"none\",\n  overflow: \"hidden\",\n};\n\ntype CanvasToolsProps = {\n  publish: Publish;\n};\n\nexport const CanvasTools = ({ publish }: CanvasToolsProps) => {\n  useSubscribeInstanceRect();\n  useSubscribeSelectionRect();\n  useSubscribeScrollState();\n  useSubscribeTextEditingInstanceId();\n\n  const [isPreviewMode] = useIsPreviewMode();\n  const [isScrolling] = useIsScrolling();\n  if (isPreviewMode || isScrolling) {\n    return null;\n  }\n  return (\n    <Box css={toolsStyle}>\n      <SelectedInstanceOutline />\n      <HoveredInstanceOutline />\n      <TextToolbar publish={publish} />\n    </Box>\n  );\n};\n", "import { Box, Flex } from \"apps/designer/app/shared/design-system\";\nimport {\n  useCanvasWidth,\n  useZoom,\n} from \"apps/designer/app/designer/shared/nano-states\";\nimport { CanvasTools } from \"./canvas-tools\";\nimport { type Publish } from \"@webstudio-is/sdk\";\n\nconst workspaceStyle = {\n  flexGrow: 1,\n  background: \"$gray8\",\n  overflow: \"auto\",\n  scrollbarGutter: \"stable\",\n};\n\nconst zoomStyle = {\n  transformStyle: \"preserve-3d\",\n  transition: \"transform 200ms ease-out\",\n  height: \"100%\",\n  width: \"100%\",\n};\n\nconst canvasContainerStyle = {\n  position: \"relative\",\n  height: \"100%\",\n};\n\ntype WorkspaceProps = {\n  children: JSX.Element;\n  onTransitionEnd: () => void;\n  publish: Publish;\n};\n\nexport const Workspace = ({\n  children,\n  onTransitionEnd,\n  publish,\n}: WorkspaceProps) => {\n  const [zoom] = useZoom();\n  const [canvasWidth] = useCanvasWidth();\n\n  const handleWorkspaceClick = () => {\n    publish<\"unselectInstance\">({ type: \"unselectInstance\" });\n  };\n\n  return (\n    <Box css={workspaceStyle} onClick={handleWorkspaceClick}>\n      <Flex\n        direction=\"column\"\n        align=\"center\"\n        css={zoomStyle}\n        style={{ transform: `scale(${zoom / 100})` }}\n        onTransitionEnd={onTransitionEnd}\n      >\n        <Box css={canvasContainerStyle} style={{ width: canvasWidth }}>\n          {children}\n          <CanvasTools publish={publish} />\n        </Box>\n      </Flex>\n    </Box>\n  );\n};\n", "import { useCallback, useEffect, useState } from \"react\";\nimport { useZoom } from \"apps/designer/app/designer/shared/nano-states\";\nimport {\n  useCanvasRect,\n  useCanvasWidth,\n} from \"apps/designer/app/designer/shared/nano-states\";\nimport { useWindowResize } from \"apps/designer/app/shared/dom-hooks\";\n\n/**\n * Reads the canvas iframe dom rect and puts it into nano state\n * so that this is the only place we do it.\n */\nexport const useReadCanvasRect = () => {\n  const [iframeElement, setIframeElement] = useState<HTMLIFrameElement | null>(\n    null\n  );\n  const [, setCanvasRect] = useCanvasRect();\n  const [canvasWidth] = useCanvasWidth();\n  const [zoom] = useZoom();\n  const [recalcFlag, forceRecalc] = useState(false);\n  useWindowResize(() => {\n    forceRecalc(!recalcFlag);\n  });\n\n  const readRect = useCallback(\n    () => {\n      if (iframeElement === null) return;\n      requestAnimationFrame(() => {\n        const rect = iframeElement.getBoundingClientRect();\n        setCanvasRect(rect);\n      });\n    },\n    // canvasWidth will change the canvas width, so we need to React it to it and update the rect, even though we don't necessary usenthe value\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [iframeElement, setCanvasRect, canvasWidth, zoom, recalcFlag]\n  );\n\n  useEffect(readRect, [readRect]);\n\n  return {\n    onRef: setIframeElement,\n    onTransitionEnd: readRect,\n  };\n};\n", "import { useEffect } from \"react\";\nimport mitt from \"mitt\";\n\nconst emitter = mitt();\n\nif (typeof window === \"object\") {\n  window.addEventListener(\n    \"resize\",\n    () => {\n      emitter.emit(\"resize\");\n    },\n    false\n  );\n}\n\n/**\n * Subscribe to DOM resize event only once and then notify all listeners over js only.\n * This allows us to subscribe to resize by many listeners without perf issues, since its going to be the same resize event.\n * TODO: We can add throttling and RAF if needed.\n */\nexport const useWindowResize = (onResize: () => void) => {\n  useEffect(() => {\n    emitter.on(\"resize\", onResize);\n    return () => {\n      emitter.off(\"resize\", onResize);\n    };\n  }, [onResize]);\n};\n", "// This hook is based on https://github.com/streamich/react-use/blob/master/src/useMeasure.ts\n// The problem is that contentRect has wrong x/y values for absolutely positioned element.\n// We have to use getBoundingClientRect instead.\n// @todo optimize for the case when many consumers need to measure the same element\n\nimport { useCallback, useEffect, useMemo, useState } from \"react\";\nimport { useScrollState } from \"./use-scroll-state\";\n\nexport type UseMeasureRef<MeasuredElement extends HTMLElement = HTMLElement> = (\n  element: MeasuredElement | null\n) => void;\nexport type UseMeasureResult<\n  MeasuredElement extends HTMLElement = HTMLElement\n> = [UseMeasureRef<MeasuredElement>, DOMRect | undefined];\n\nexport const useMeasure = <\n  MeasuredElement extends HTMLElement = HTMLElement\n>(): UseMeasureResult<MeasuredElement> => {\n  const [element, setElement] = useState<MeasuredElement | null>(null);\n  const [rect, setRect] = useState<DOMRect>();\n\n  const handleChange = useCallback(() => {\n    if (element === null) return;\n    setRect(element.getBoundingClientRect());\n  }, [element]);\n\n  useScrollState({\n    onScrollEnd: handleChange,\n  });\n\n  const observer = useMemo(() => {\n    if (typeof window === \"undefined\") return;\n    return new window.ResizeObserver(handleChange);\n  }, [handleChange]);\n\n  useEffect(() => {\n    if (observer) {\n      if (element === null) observer.disconnect();\n      else observer.observe(element);\n    }\n    return () => {\n      observer?.disconnect();\n    };\n  }, [element, observer]);\n\n  useEffect(handleChange, [handleChange]);\n\n  return [setElement, rect];\n};\n", "import { useEffect } from \"react\";\nimport mitt from \"mitt\";\nimport noop from \"lodash.noop\";\n\n// Using a JS emitter to avoid overhead with subscribing scroll event directly on the DOM by many listeners\nconst emitter = mitt();\n\nif (typeof window === \"object\") {\n  const eventOptions = {\n    passive: true,\n    capture: true,\n  };\n  window.addEventListener(\n    \"scroll\",\n    () => {\n      emitter.emit(\"scroll\");\n    },\n    eventOptions\n  );\n\n  let timeoutId = 0;\n  let isScrolling = false;\n\n  emitter.on(\"scroll\", () => {\n    isScrolling = true;\n    emitter.emit(\"scrollStart\");\n    clearTimeout(timeoutId);\n    timeoutId = window.setTimeout(() => {\n      if (isScrolling === false) return;\n      isScrolling = false;\n      emitter.emit(\"scrollEnd\");\n    }, 150);\n  });\n}\n\ntype UseScrollState = {\n  onScroll?: () => void;\n  onScrollStart?: () => void;\n  onScrollEnd?: () => void;\n};\n\n/**\n * Scroll state abstraction that can handle a lot of subscribers well.\n * Potentially could add rate limiting and actual scroll top/left values.\n */\nexport const useScrollState = ({\n  onScroll = noop,\n  onScrollStart = noop,\n  onScrollEnd = noop,\n}: UseScrollState) => {\n  useEffect(() => {\n    emitter.on(\"scrollStart\", onScrollStart);\n    emitter.on(\"scroll\", onScroll);\n    emitter.on(\"scrollEnd\", onScrollEnd);\n\n    return () => {\n      emitter.off(\"scrollStart\", onScrollStart);\n      emitter.off(\"scroll\", onScroll);\n      emitter.off(\"scrollEnd\", onScrollEnd);\n    };\n  }, [onScroll, onScrollEnd, onScrollStart]);\n};\n", "import { forwardRef } from \"react\";\nimport { CSS, css } from \"apps/designer/app/shared/design-system\";\n\nconst iframeStyle = css({\n  border: \"none\",\n  variants: {\n    pointerEvents: {\n      none: {\n        pointerEvents: \"none\",\n      },\n      all: {\n        pointerEvents: \"all\",\n      },\n    },\n  },\n});\n\ntype CanvasIframeProps = {\n  pointerEvents: \"all\" | \"none\";\n  css: CSS;\n} & JSX.IntrinsicElements[\"iframe\"];\n\nexport const CanvasIframe = forwardRef<HTMLIFrameElement, CanvasIframeProps>(\n  ({ pointerEvents = \"all\", css, ...rest }, ref) => {\n    return (\n      <iframe\n        {...rest}\n        ref={ref}\n        className={iframeStyle({ pointerEvents, css })}\n      />\n    );\n  }\n);\n\nCanvasIframe.displayName = \"CanvasIframe\";\n", "import { useHotkeys } from \"react-hotkeys-hook\";\nimport { type Publish } from \"@webstudio-is/sdk\";\nimport { shortcuts, options } from \"apps/designer/app/shared/shortcuts\";\n\nconst names = Object.keys(shortcuts) as Array<keyof typeof shortcuts>;\n\n/**\n * Forwarding shortcuts to the canvas.\n */\nexport const usePublishShortcuts = (publish: Publish) => {\n  names.forEach((name) => {\n    // as long as the array is static, it's ok\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    useHotkeys(\n      shortcuts[name],\n      (event) => {\n        event.preventDefault();\n        publish<\"shortcut\", { name: string; key: string }>({\n          type: \"shortcut\",\n          payload: { name, key: event.key },\n        });\n      },\n      options,\n      []\n    );\n  });\n};\n", "export const shortcuts = {\n  undo: \"cmd+z, ctrl+z\",\n  redo: \"cmd+shift+z, ctrl+shift+z\",\n  preview: \"cmd+shift+p, ctrl+shift+p\",\n  copy: \"cmd+c, ctrl+c\",\n  paste: \"cmd+v, ctrl+v\",\n  breakpointsMenu: \"cmd+b, ctrl+b\",\n  breakpoint: Array.from(new Array(9))\n    .map((_, index) => `cmd+${index + 1}, ctrl+${index + 1}`)\n    .join(\", \"),\n  zoom: \"cmd+=, ctrl+=, cmd+-, ctrl+-\",\n} as const;\n\nexport const options = { splitKey: \"+\", keydown: true };\n", "import { LoaderFunction, type MetaFunction } from \"@remix-run/node\";\nimport { Canvas } from \"apps/designer/app/shared/documents/canvas\";\nimport env from \"apps/designer/app/env.server\";\n\nexport const loader: LoaderFunction = () => ({\n  env,\n});\n\nexport const meta: MetaFunction = () => {\n  return { title: \"Webstudio site preview\" };\n};\n\nexport default Canvas;\n", "import {\n  Links,\n  LiveReload,\n  Meta,\n  Outlet as DefaultOutlet,\n  Scripts,\n  ScrollRestoration,\n} from \"@remix-run/react\";\nimport { CriticalCss } from \"@webstudio-is/sdk\";\nimport { Env } from \"apps/designer/app/shared/env\";\n\n/**\n * We are using Outlet prop from index layout when user renders site from a subdomain.\n */\nexport const Canvas = ({\n  Outlet = DefaultOutlet,\n}: {\n  Outlet: typeof DefaultOutlet;\n}) => {\n  return (\n    <html lang=\"en\">\n      <head>\n        <meta charSet=\"utf-8\" />\n        <meta name=\"viewport\" content=\"width=device-width,initial-scale=1\" />\n        <link rel=\"icon\" href=\"/favicon.ico\" type=\"image/x-icon\" />\n        <link rel=\"shortcut icon\" href=\"/favicon.ico\" type=\"image/x-icon\" />\n        <Meta />\n        <Links />\n        <CriticalCss />\n      </head>\n      <body>\n        <Outlet />\n        <ScrollRestoration />\n        <Env />\n        <Scripts />\n        {process.env.NODE_ENV === \"development\" && <LiveReload />}\n      </body>\n    </html>\n  );\n};\n", "import { useLoaderData } from \"@remix-run/react\";\nimport type { LoaderFunction } from \"@remix-run/node\";\nimport { Root } from \"@webstudio-is/sdk\";\nimport {\n  loadPreviewData,\n  type PreviewData,\n  type ErrorData,\n} from \"apps/designer/app/shared/db\";\nimport env, { Env } from \"apps/designer/app/env.server\";\n\ntype LoaderReturnType = Promise<\n  (PreviewData & { env: Env }) | (ErrorData & { env: Env })\n>;\n\nexport const loader: LoaderFunction = async ({ params }): LoaderReturnType => {\n  if (params.projectId === undefined) {\n    return { errors: \"Missing projectId\", env };\n  }\n  try {\n    const previewData = await loadPreviewData({ projectId: params.projectId });\n    return {\n      ...previewData,\n      env,\n    };\n  } catch (error) {\n    if (error instanceof Error) {\n      return {\n        errors: error.message,\n        env,\n      };\n    }\n  }\n  return { errors: \"Unexpected error\", env };\n};\n\nconst PreviewRoute = () => {\n  const data = useLoaderData<PreviewData | ErrorData>();\n  if (\"errors\" in data) {\n    return <p>{data.errors}</p>;\n  }\n  return <Root data={data} />;\n};\n\nexport default PreviewRoute;\n", "import { LoaderFunction, type MetaFunction } from \"@remix-run/node\";\nimport { Canvas } from \"apps/designer/app/shared/documents/canvas\";\nimport env from \"apps/designer/app/env.server\";\n\nexport const loader: LoaderFunction = () => ({\n  env,\n});\n\nexport const meta: MetaFunction = () => {\n  return { title: \"Webstudio canvas\" };\n};\n\nexport default Canvas;\n", "import { useLoaderData } from \"@remix-run/react\";\nimport type { LoaderFunction } from \"@remix-run/node\";\nimport { Canvas } from \"apps/designer/app/canvas\";\nimport {\n  loadCanvasData,\n  type ErrorData,\n  type CanvasData,\n} from \"apps/designer/app/shared/db\";\nimport env, { Env } from \"apps/designer/app/env.server\";\n\ntype LoaderReturnTypes = Promise<\n  (CanvasData & { env: Env }) | (ErrorData & { env: Env })\n>;\n\nexport const loader: LoaderFunction = async ({ params }): LoaderReturnTypes => {\n  if (params.projectId === undefined) {\n    return { errors: \"Missing projectId\", env };\n  }\n  try {\n    const canvasData = await loadCanvasData({ projectId: params.projectId });\n    return {\n      ...canvasData,\n      env,\n    };\n  } catch (error) {\n    if (error instanceof Error) {\n      return {\n        errors: error.message,\n        env,\n      };\n    }\n  }\n  return { errors: \"Unexpected error\", env };\n};\n\nconst CanvasRoute = () => {\n  const data = useLoaderData<CanvasData | ErrorData>();\n  // @todo how should we treat this kind of errors?\n  if (\"errors\" in data) {\n    return <p>{data.errors}</p>;\n  }\n  return <Canvas data={data} />;\n};\n\nexport default CanvasRoute;\n", "import { useCallback, useMemo, useState } from \"react\";\nimport { DndProvider } from \"react-dnd\";\nimport { TouchBackend } from \"react-dnd-touch-backend\";\nimport store from \"immerhin\";\nimport {\n  type OnChangeChildren,\n  type Data,\n  type Tree,\n  useAllUserProps,\n  WrapperComponent,\n  globalStyles,\n  useSubscribe,\n} from \"@webstudio-is/sdk\";\nimport {\n  createElementsTree,\n  setInstanceChildrenMutable,\n} from \"apps/designer/app/shared/tree-utils\";\nimport { useDragDropHandlers } from \"./shared/use-drag-drop-handlers\";\nimport { useShortcuts } from \"./shared/use-shortcuts\";\nimport {\n  usePopulateRootInstance,\n  useInsertInstance,\n  useDeleteInstance,\n  useReparentInstance,\n  usePublishSelectedInstanceData,\n  usePublishRootInstance,\n  useUpdateSelectedInstance,\n  usePublishSelectedInstanceDataRect,\n  usePublishHoveredInstanceRect,\n  usePublishHoveredInstanceData,\n  useSetHoveredInstance,\n  useUnselectInstance,\n  usePublishTextEditingInstanceId,\n} from \"./shared/instance\";\nimport { useUpdateStyle } from \"./shared/style\";\nimport { useTrackSelectedElement } from \"./shared/use-track-selected-element\";\nimport { WrapperComponentDev } from \"./features/wrapper-component\";\nimport { useSync } from \"./shared/sync\";\nimport { useManageProps } from \"./shared/props\";\nimport {\n  useHandleBreakpoints,\n  useInitializeBreakpoints,\n} from \"./shared/breakpoints\";\nimport type { Project } from \"apps/designer/app/shared/db/project.server\";\nimport {\n  rootInstanceContainer,\n  useBreakpoints,\n  useRootInstance,\n  useSubscribeScrollState,\n} from \"apps/designer/app/shared/nano-states\";\nimport { registerContainers } from \"./shared/immerhin\";\nimport { useTrackHoveredElement } from \"./shared/use-track-hovered-element\";\nimport { usePublishScrollState } from \"./shared/use-publish-scroll-state\";\nimport {\n  LexicalComposer,\n  config,\n} from \"apps/designer/app/canvas/features/wrapper-component/text-editor\";\n\nregisterContainers();\n\nconst useElementsTree = () => {\n  const [rootInstance] = useRootInstance();\n  const [breakpoints] = useBreakpoints();\n\n  const onChangeChildren: OnChangeChildren = useCallback((change) => {\n    store.createTransaction([rootInstanceContainer], (rootInstance) => {\n      if (rootInstance === undefined) return;\n\n      const { instanceId, updates } = change;\n      setInstanceChildrenMutable(instanceId, updates, rootInstance);\n    });\n  }, []);\n\n  return useMemo(() => {\n    if (rootInstance === undefined) return;\n\n    return createElementsTree({\n      instance: rootInstance,\n      breakpoints,\n      Component: WrapperComponentDev,\n      onChangeChildren,\n    });\n  }, [rootInstance, breakpoints, onChangeChildren]);\n};\n\nconst useSubscribePreviewMode = () => {\n  const [isPreviewMode, setIsPreviewMode] = useState<boolean>(false);\n  useSubscribe<\"previewMode\", boolean>(\"previewMode\", setIsPreviewMode);\n  return isPreviewMode;\n};\n\nconst PreviewMode = () => {\n  const [rootInstance] = useRootInstance();\n  const [breakpoints] = useBreakpoints();\n  if (rootInstance === undefined) return null;\n  return createElementsTree({\n    breakpoints,\n    instance: rootInstance,\n    Component: WrapperComponent,\n  });\n};\n\ntype DesignModeProps = {\n  treeId: Tree[\"id\"];\n  project: Project;\n};\n\nconst dndOptions = { enableMouseEvents: true };\n\nconst DesignMode = ({ treeId, project }: DesignModeProps) => {\n  useDragDropHandlers();\n  useUpdateStyle();\n  useManageProps();\n  usePublishSelectedInstanceData(treeId);\n  usePublishHoveredInstanceData();\n  useHandleBreakpoints();\n  useInsertInstance();\n  useReparentInstance();\n  useDeleteInstance();\n  usePublishRootInstance();\n  useTrackSelectedElement();\n  useTrackHoveredElement();\n  useSetHoveredInstance();\n  useSync({ project });\n  useUpdateSelectedInstance();\n  usePublishSelectedInstanceDataRect();\n  usePublishHoveredInstanceRect();\n  useUnselectInstance();\n  usePublishScrollState();\n  useSubscribeScrollState();\n  usePublishTextEditingInstanceId();\n  const elements = useElementsTree();\n  return (\n    // Using touch backend becuase html5 drag&drop doesn't fire drag events in our case\n    <DndProvider backend={TouchBackend} options={dndOptions}>\n      {elements && (\n        <LexicalComposer initialConfig={config}>{elements}</LexicalComposer>\n      )}\n    </DndProvider>\n  );\n};\n\ntype CanvasProps = {\n  data: Data & { project: Project };\n};\n\nexport const Canvas = ({ data }: CanvasProps): JSX.Element | null => {\n  if (data.tree === null) {\n    throw new Error(\"Tree is null\");\n  }\n  useInitializeBreakpoints(data.breakpoints);\n  globalStyles();\n  useAllUserProps(data.props);\n  usePopulateRootInstance(data.tree);\n  // e.g. toggling preview is still needed in both modes\n  useShortcuts();\n  const isPreviewMode = useSubscribePreviewMode();\n\n  if (isPreviewMode) {\n    return <PreviewMode />;\n  }\n\n  return <DesignMode treeId={data.tree.id} project={data.project} />;\n};\n", "import { useState } from \"react\";\nimport { publish, useSubscribe } from \"@webstudio-is/sdk\";\nimport {\n  type DragData,\n  type DropData,\n} from \"apps/designer/app/shared/canvas-components\";\nimport { findInstanceById } from \"apps/designer/app/shared/tree-utils\";\nimport {\n  findClosestChild,\n  findInsertionIndex,\n  getDragOverInfo,\n} from \"apps/designer/app/shared/dom-utils\";\nimport {\n  useDropData,\n  useHoveredElement,\n  useHoveredInstance,\n  useSelectedInstance,\n} from \"./nano-states\";\nimport { useRootInstance } from \"apps/designer/app/shared/nano-states\";\nimport memoize from \"lodash.memoize\";\n//import {usePointerOutline} from './use-pointer-outline'\n\nconst getBoundingClientRect = memoize((element: Element | HTMLElement) =>\n  element.getBoundingClientRect()\n);\n\nconst getComputedStyle = memoize((element: Element | HTMLElement) =>\n  window.getComputedStyle(element)\n);\n\nexport const useDragDropHandlers = () => {\n  const [rootInstance] = useRootInstance();\n  const [, setSelectedInstance] = useSelectedInstance();\n  const [, setHoveredInstance] = useHoveredInstance();\n  const [, setHoveredElement] = useHoveredElement();\n  const [dropData, setDropData] = useDropData();\n  const [dragData, setDragData] = useState<DragData>();\n\n  useSubscribe<\"dragStartInstance\">(\"dragStartInstance\", () => {\n    setSelectedInstance(undefined);\n  });\n\n  useSubscribe<\"dragEndInstance\">(\"dragEndInstance\", () => {\n    // Cleanup\n    if (getBoundingClientRect.cache?.clear) getBoundingClientRect.cache.clear();\n    if (getComputedStyle.cache?.clear) getComputedStyle.cache.clear();\n    setDropData(undefined);\n    setDragData(undefined);\n\n    if (\n      rootInstance === undefined ||\n      dropData === undefined ||\n      dragData === undefined ||\n      // Can't reparent an instance inside itself\n      dropData.instance.id === dragData.instance.id\n    ) {\n      return;\n    }\n\n    const isNew =\n      findInstanceById(rootInstance, dragData.instance.id) === undefined;\n\n    const data = {\n      instance: dragData.instance,\n      dropData,\n    };\n\n    if (isNew) {\n      publish<\"insertInstance\", typeof data>({\n        type: \"insertInstance\",\n        payload: data,\n      });\n      return;\n    }\n\n    publish<\"reparentInstance\", typeof data>({\n      type: \"reparentInstance\",\n      payload: data,\n    });\n  });\n\n  //const updatePointerOutline = usePointerOutline();\n  useSubscribe<\"dragInstance\", DragData>(\"dragInstance\", (dragData) => {\n    const { currentOffset } = dragData;\n    // updatePointerOutline(currentOffset)\n    const dragOver = getDragOverInfo(currentOffset, getBoundingClientRect);\n\n    if (rootInstance === undefined || dragOver.element === undefined) return;\n\n    const dropInstance = findInstanceById(rootInstance, dragOver.element.id);\n\n    if (dropInstance === undefined) return;\n\n    const closestChild = findClosestChild(\n      dragOver.element,\n      currentOffset,\n      getBoundingClientRect,\n      getComputedStyle\n    );\n\n    let position = 0;\n\n    // When element has children.\n    if (dragOver.element !== undefined && closestChild !== undefined) {\n      position = findInsertionIndex(dragOver, closestChild);\n    }\n\n    const dropData = {\n      instance: dropInstance,\n      position,\n    };\n\n    setDragData(dragData);\n    setDropData(dropData);\n    setHoveredInstance(dropInstance);\n    setHoveredElement(dragOver.element);\n    publish<\"dropPreview\", { dropData: DropData; dragData: DragData }>({\n      type: \"dropPreview\",\n      payload: { dropData, dragData },\n    });\n  });\n};\n", "import type { Coordinate, ClosestChildInfo } from \"./types\";\n\nconst calculateDistance = (coordinate: Coordinate, rect: DOMRect): number => {\n  const distanceX = Math.max(\n    rect.left - coordinate.x,\n    0,\n    coordinate.x - rect.right\n  );\n  const distanceY = Math.max(\n    rect.top - coordinate.y,\n    0,\n    coordinate.y - rect.bottom\n  );\n  return Math.sqrt(distanceX * distanceX + distanceY * distanceY);\n};\n\nconst sortNumbers = (a: number, b: number): number => a - b;\n\n// There is a gotcha with relative position, it can have top/right/bottom/left too and so will not\n// be positioned by layout, but we ignore this for now.\nconst isPositionedElement = (\n  element: Element,\n  getComputedStyle: (element: Element) => CSSStyleDeclaration\n): boolean => {\n  const { position } = getComputedStyle(element);\n  return position !== \"static\" && position !== \"relative\";\n};\n\n/**\n * Find the closest element relative to coordinates inside a parent element.\n */\nexport const findClosestChild = (\n  parentElement: Element,\n  coordinate: Coordinate,\n  getBoundingClientRect: (element: Element) => DOMRect,\n  getComputedStyle: (element: Element) => CSSStyleDeclaration\n): ClosestChildInfo | void => {\n  // Collect bounding client rects for all children.\n  if (parentElement.children.length === 0) return;\n\n  // Find the closest child by coordinate\n  const distances = [];\n  const distanceElementMap = new Map();\n  for (const child of parentElement.children) {\n    if (isPositionedElement(child, getComputedStyle)) continue;\n    const rect = getBoundingClientRect(child);\n    const distance = calculateDistance(coordinate, rect);\n    distances.push(distance);\n    distanceElementMap.set(distance, child);\n  }\n\n  distances.sort(sortNumbers);\n\n  // For now we are only interested if we are nearing the element from the top or bottom\n  const element = distanceElementMap.get(distances[0]);\n  const rect = getBoundingClientRect(element);\n\n  const relativePosition =\n    coordinate.y - rect.top < 0\n      ? \"before\"\n      : coordinate.y - rect.bottom > 0\n      ? \"after\"\n      : \"inside\";\n\n  return { element, relativePosition };\n};\n", "import type { DragOverInfo, ClosestChildInfo } from \"./types\";\n\nexport const findInsertionIndex = (\n  dragOver: DragOverInfo,\n  closestChildInfo: ClosestChildInfo\n): number => {\n  const index = [...(dragOver.element?.children || [])].indexOf(\n    closestChildInfo.element\n  );\n  let insertionIndex = 0;\n  if (closestChildInfo.relativePosition == \"inside\") {\n    if (dragOver.edge === \"top\") insertionIndex = index;\n    else if (dragOver.edge === \"bottom\") insertionIndex = index + 1;\n    else return 0;\n  } else {\n    insertionIndex =\n      closestChildInfo.relativePosition === \"before\" ? index - 1 : index + 1;\n  }\n  if (insertionIndex < 0) return 0;\n  return insertionIndex;\n};\n", "import type { Coordinate, DragOverInfo } from \"./types\";\n\nconst elementFromPoint = (coordinate: Coordinate): HTMLElement | undefined => {\n  const element = document.elementFromPoint(coordinate.x, coordinate.y);\n  if (element instanceof HTMLElement) return element;\n};\n\n/**\n * Get element we are hovering over from coordinate.\n * When nearing to an edge of an element - return the parent.\n */\nexport const getDragOverInfo = (\n  offset: Coordinate,\n  getBoundingClientRect: (element: Element) => DOMRect\n): DragOverInfo => {\n  let element = elementFromPoint(offset);\n  let edge: DragOverInfo[\"edge\"] = \"none\";\n\n  if (element === undefined) return { element, edge };\n\n  const { bottom, y } = getBoundingClientRect(element);\n  // We are at the top/bottom edge and this means user wants\n  // to insert after that element into its parent\n  if (offset.y - y <= 5) edge = \"top\";\n  if (bottom - offset.y <= 5) edge = \"bottom\";\n\n  if (edge === \"none\") return { element, edge };\n\n  const { parentElement } = element;\n\n  if (parentElement !== null && parentElement !== document.body) {\n    element = parentElement;\n  }\n\n  return { element, edge };\n};\n", "import { createValueContainer, useValue } from \"react-nano-state\";\nimport { type Instance } from \"@webstudio-is/sdk\";\nimport { type DropData } from \"apps/designer/app/shared/canvas-components\";\n\nconst dropDataContainer = createValueContainer<DropData | undefined>();\nexport const useDropData = () => useValue(dropDataContainer);\n\nexport const selectedInstanceContainer = createValueContainer<\n  Instance | undefined\n>();\nexport const useSelectedInstance = () => useValue(selectedInstanceContainer);\n\nexport const hoveredInstanceContainer = createValueContainer<\n  Instance | undefined\n>();\nexport const useHoveredInstance = () => useValue(hoveredInstanceContainer);\n\nconst selectedElementContainer = createValueContainer<\n  HTMLElement | undefined\n>();\nexport const useSelectedElement = () => useValue(selectedElementContainer);\n\nconst hoveredElementContainer = createValueContainer<HTMLElement | undefined>();\nexport const useHoveredElement = () => useValue(hoveredElementContainer);\n", "import { useHotkeys } from \"react-hotkeys-hook\";\nimport store from \"immerhin\";\nimport { type Instance, publish, useSubscribe } from \"@webstudio-is/sdk\";\nimport { shortcuts, options } from \"apps/designer/app/shared/shortcuts\";\nimport { useSelectedInstance } from \"./nano-states\";\nimport { copy, paste } from \"./copy-paste\";\nimport {\n  useRootInstance,\n  useTextEditingInstanceId,\n} from \"apps/designer/app/shared/nano-states\";\nimport { primitives } from \"apps/designer/app/shared/canvas-components\";\n\nconst inputTags = [\"INPUT\", \"SELECT\", \"TEXTAREA\"] as const;\n\ntype HandlerEvent = {\n  key: string;\n  preventDefault?: () => void;\n};\n\nconst togglePreviewMode = () => {\n  publish<\"togglePreviewMode\">({ type: \"togglePreviewMode\" });\n};\n\nconst publishSelectBreakpoint = ({ key }: HandlerEvent) => {\n  publish({\n    type: \"selectBreakpointFromShortcut\",\n    payload: key,\n  });\n};\n\nconst publishZoom = (event: HandlerEvent) => {\n  if (event.preventDefault !== undefined) event.preventDefault();\n  publish({\n    type: \"zoom\",\n    payload: event.key === \"-\" ? \"zoomOut\" : \"zoomIn\",\n  });\n};\n\nconst publishOpenBreakpointsMenu = () => {\n  publish({ type: \"openBreakpointsMenu\" });\n};\n\nexport const useShortcuts = () => {\n  const [rootInstance] = useRootInstance();\n  const [selectedInstance, setSelectedInstance] = useSelectedInstance();\n  const [editingInstanceId, setEditingInstanceId] = useTextEditingInstanceId();\n\n  const publishDeleteInstance = () => {\n    // @todo tell user they can't delete root\n    if (\n      selectedInstance === undefined ||\n      selectedInstance.id === rootInstance?.id\n    ) {\n      return;\n    }\n    publish<\"deleteInstance\", { id: Instance[\"id\"] }>({\n      type: \"deleteInstance\",\n      payload: {\n        id: selectedInstance.id,\n      },\n    });\n  };\n\n  const shortcutHandlerMap = {\n    undo: store.undo.bind(store),\n    redo: store.redo.bind(store),\n    delete: publishDeleteInstance,\n    preview: togglePreviewMode,\n    copy,\n    paste,\n    breakpointsMenu: publishOpenBreakpointsMenu,\n    breakpoint: publishSelectBreakpoint,\n    zoom: publishZoom,\n  } as const;\n\n  useHotkeys(\n    \"backspace, delete\",\n    shortcutHandlerMap.delete,\n    { ...options, enableOnTags: [...inputTags] },\n    [shortcutHandlerMap.delete]\n  );\n\n  useHotkeys(\n    \"esc\",\n    () => {\n      if (selectedInstance === undefined) return;\n      // Since we are in text editing mode, we want to first exit that mode without unselecting the instance.\n      if (editingInstanceId) {\n        setEditingInstanceId(undefined);\n        return;\n      }\n      setSelectedInstance(undefined);\n      publish<\"selectInstance\">({ type: \"selectInstance\" });\n    },\n    { ...options, enableOnContentEditable: true, enableOnTags: [...inputTags] },\n    [selectedInstance, editingInstanceId]\n  );\n\n  useHotkeys(\n    \"enter\",\n    (event) => {\n      if (selectedInstance === undefined) return;\n      const { isContentEditable } = primitives[selectedInstance.component];\n      if (isContentEditable === false) return;\n      // Prevents inserting a newline when entering text-editing mode\n      event.preventDefault();\n      setEditingInstanceId(selectedInstance.id);\n    },\n    options,\n    [selectedInstance, setEditingInstanceId]\n  );\n\n  useHotkeys(shortcuts.undo, shortcutHandlerMap.undo, options, []);\n\n  useHotkeys(shortcuts.redo, shortcutHandlerMap.redo, options, []);\n\n  useHotkeys(shortcuts.preview, shortcutHandlerMap.preview, options, []);\n\n  useHotkeys(shortcuts.copy, shortcutHandlerMap.copy, options, [\n    shortcutHandlerMap.copy,\n  ]);\n\n  useHotkeys(shortcuts.paste, shortcutHandlerMap.paste, options, []);\n\n  useHotkeys(shortcuts.breakpoint, shortcutHandlerMap.breakpoint, options, []);\n  useHotkeys(shortcuts.zoom, shortcutHandlerMap.zoom, options, []);\n  useHotkeys(\n    shortcuts.breakpointsMenu,\n    shortcutHandlerMap.breakpointsMenu,\n    options,\n    []\n  );\n\n  // Shortcuts from the parent window\n  useSubscribe<\"shortcut\", { name: keyof typeof shortcuts; key: string }>(\n    \"shortcut\",\n    ({ name, key }) => {\n      shortcutHandlerMap[name]({ key });\n    }\n  );\n};\n", "import {\n  type InstanceProps,\n  type Instance,\n  allUserPropsContainer,\n  publish,\n} from \"@webstudio-is/sdk\";\nimport { selectedInstanceContainer } from \"./nano-states\";\nimport { cloneInstance } from \"apps/designer/app/shared/tree-utils\";\nimport { cloneProps } from \"apps/designer/app/shared/props-utils\";\n\nlet currentInstance: Instance | undefined;\nlet currentProps: InstanceProps | undefined;\n\nexport const copy = () => {\n  if (selectedInstanceContainer.value === undefined) return;\n  currentInstance = selectedInstanceContainer.value;\n  currentProps = allUserPropsContainer.value[currentInstance.id];\n};\n\nexport const paste = () => {\n  if (currentInstance === undefined) return;\n  const instance = cloneInstance(currentInstance);\n  const props = currentProps\n    ? cloneProps(currentProps, { instanceId: instance.id })\n    : undefined;\n  publish<\"insertInstance\", { instance: Instance; props?: InstanceProps }>({\n    type: \"insertInstance\",\n    payload: {\n      instance,\n      props,\n    },\n  });\n};\n", "import { type AllUserProps, type UserPropsUpdates } from \"@webstudio-is/sdk\";\n\nexport const updateAllUserPropsMutable = (\n  allUserProps: AllUserProps,\n  { instanceId, propsId, treeId, updates }: UserPropsUpdates\n) => {\n  if (instanceId in allUserProps === false) {\n    allUserProps[instanceId] = {\n      id: propsId,\n      instanceId,\n      treeId,\n      props: [],\n    };\n  }\n  const instanceProps = allUserProps[instanceId];\n  for (const update of updates) {\n    const prop = instanceProps.props.find(({ id }) => id === update.id);\n    if (prop === undefined) {\n      instanceProps.props.push(update);\n    } else {\n      prop.prop = update.prop;\n      prop.value = update.value;\n    }\n  }\n};\n", "import { type AllUserProps, type DeleteProp } from \"@webstudio-is/sdk\";\n\nexport const deletePropMutable = (\n  allProps: AllUserProps,\n  deleteProp: DeleteProp\n) => {\n  const prop = allProps[deleteProp.instanceId];\n  if (prop === undefined) return false;\n  const index = prop.props.findIndex(({ id }) => id === deleteProp.propId);\n  if (index === -1) return false;\n  prop.props.splice(index, 1);\n  return true;\n};\n", "import ObjectId from \"bson-objectid\";\nimport produce from \"immer\";\nimport { type InstanceProps, type Instance } from \"@webstudio-is/sdk\";\n\nexport const cloneProps = (\n  instanceProps: InstanceProps,\n  { instanceId }: { instanceId: Instance[\"id\"] }\n) =>\n  produce((instanceProps: InstanceProps) => {\n    instanceProps.id = ObjectId().toString();\n    instanceProps.instanceId = instanceId;\n    for (const prop of instanceProps.props) {\n      prop.id = ObjectId().toString();\n    }\n  })(instanceProps);\n", "import { useCallback, useEffect, useMemo } from \"react\";\nimport ObjectId from \"bson-objectid\";\nimport {\n  type InstanceProps,\n  type Instance,\n  type Tree,\n  allUserPropsContainer,\n  getBrowserStyle,\n  useAllUserProps,\n  useSubscribe,\n  publish,\n} from \"@webstudio-is/sdk\";\nimport {\n  deleteInstanceMutable,\n  populateInstance,\n  findParentInstance,\n  findClosestSiblingInstance,\n  insertInstanceMutable,\n  findInstanceById,\n} from \"apps/designer/app/shared/tree-utils\";\nimport store from \"immerhin\";\nimport {\n  DropData,\n  HoveredInstanceData,\n  type SelectedInstanceData,\n} from \"apps/designer/app/shared/canvas-components\";\nimport {\n  useSelectedInstance,\n  useSelectedElement,\n  useHoveredElement,\n  useHoveredInstance,\n} from \"./nano-states\";\nimport {\n  rootInstanceContainer,\n  useRootInstance,\n  useTextEditingInstanceId,\n} from \"apps/designer/app/shared/nano-states\";\nimport { useMeasure } from \"apps/designer/app/shared/dom-hooks\";\n\nexport const usePopulateRootInstance = (tree: Tree) => {\n  const [, setRootInstance] = useRootInstance();\n  useEffect(() => {\n    setRootInstance(tree.root);\n  }, [tree, setRootInstance]);\n};\n\nexport const useInsertInstance = () => {\n  const [selectedInstance, setSelectedInstance] = useSelectedInstance();\n\n  useSubscribe<\n    \"insertInstance\",\n    { instance: Instance; dropData?: DropData; props?: InstanceProps }\n  >(\"insertInstance\", ({ instance, dropData, props }) => {\n    store.createTransaction(\n      [rootInstanceContainer, allUserPropsContainer],\n      (rootInstance, allUserProps) => {\n        if (rootInstance === undefined) return;\n        const populatedInstance = populateInstance(instance);\n        const hasInserted = insertInstanceMutable(\n          rootInstance,\n          populatedInstance,\n          {\n            parentId:\n              dropData?.instance.id ?? selectedInstance?.id ?? rootInstance.id,\n            position: dropData?.position || \"end\",\n          }\n        );\n        if (hasInserted) {\n          setSelectedInstance(instance);\n        }\n        if (props !== undefined) {\n          allUserProps[props.instanceId] = props;\n        }\n      }\n    );\n  });\n};\n\nexport const useReparentInstance = () => {\n  useSubscribe<\"reparentInstance\", { instance: Instance; dropData: DropData }>(\n    \"reparentInstance\",\n    ({ instance, dropData }) => {\n      store.createTransaction([rootInstanceContainer], (rootInstance) => {\n        if (rootInstance === undefined) return;\n        deleteInstanceMutable(rootInstance, instance.id);\n        insertInstanceMutable(rootInstance, instance, {\n          parentId: dropData.instance.id,\n          position: dropData.position,\n        });\n      });\n    }\n  );\n};\n\nexport const useDeleteInstance = () => {\n  const [rootInstance] = useRootInstance();\n  const [selectedInstance, setSelectedInstance] = useSelectedInstance();\n  useSubscribe<\"deleteInstance\", { id: Instance[\"id\"] }>(\n    \"deleteInstance\",\n    ({ id }) => {\n      if (rootInstance !== undefined && selectedInstance !== undefined) {\n        const parentInstance = findParentInstance(rootInstance, id);\n        if (parentInstance !== undefined) {\n          const siblingInstance = findClosestSiblingInstance(\n            parentInstance,\n            id\n          );\n          setSelectedInstance(siblingInstance || parentInstance);\n        }\n      }\n      // @todo deleting instance should involve also deleting it's props\n      // If we don't delete them - they just live both on client and db\n      // Pros:\n      //   - if we undo the deletion we don't need to undo the props deletion\n      //   - in a multiplayer environment, some other user could have changed a prop while we have deleted the instance\n      // and then if we restore the instance, we would be restoring it with our props, potentially overwriting other users changes\n      // The way it is now it will actually still enable parallel deletion props editing and restoration.\n      // Contra: we are piling them up.\n      // Potentially we could also solve this by periodically removing unused props after while when instance was deleted\n      store.createTransaction([rootInstanceContainer], (rootInstance) => {\n        if (rootInstance !== undefined) {\n          deleteInstanceMutable(rootInstance, id);\n        }\n      });\n    }\n  );\n};\n\nexport const usePublishSelectedInstanceData = (treeId: Tree[\"id\"]) => {\n  const [instance] = useSelectedInstance();\n  const [selectedElement] = useSelectedElement();\n  const [allUserProps] = useAllUserProps();\n  const browserStyle = useMemo(\n    () => getBrowserStyle(selectedElement),\n    [selectedElement]\n  );\n\n  useEffect(() => {\n    // Unselects the instance by `undefined`\n    let payload;\n    if (instance !== undefined) {\n      let props = allUserProps[instance.id];\n      if (props === undefined) {\n        props = {\n          id: ObjectId().toString(),\n          instanceId: instance.id,\n          treeId,\n          props: [],\n        };\n      }\n      payload = {\n        id: instance.id,\n        component: instance.component,\n        cssRules: instance.cssRules,\n        browserStyle,\n        props,\n      };\n    }\n    publish<\"selectInstance\", SelectedInstanceData>({\n      type: \"selectInstance\",\n      payload,\n    });\n  }, [instance, allUserProps, treeId, browserStyle]);\n};\n\nexport const usePublishHoveredInstanceData = () => {\n  const [instance] = useHoveredInstance();\n\n  useEffect(() => {\n    const payload = instance\n      ? {\n          id: instance.id,\n          component: instance.component,\n        }\n      : undefined;\n    publish<\"hoverInstance\", HoveredInstanceData | undefined>({\n      type: \"hoverInstance\",\n      payload,\n    });\n  }, [instance]);\n};\n\nexport const usePublishRootInstance = () => {\n  const [rootInstance] = useRootInstance();\n  useEffect(() => {\n    publish<\"loadRootInstance\", Instance>({\n      type: \"loadRootInstance\",\n      payload: rootInstance,\n    });\n  }, [rootInstance]);\n};\n\nconst publishRect = (rect: DOMRect) => {\n  publish<\"selectedInstanceRect\", DOMRect>({\n    type: \"selectedInstanceRect\",\n    payload: rect,\n  });\n};\n\nexport const usePublishSelectedInstanceDataRect = () => {\n  const [element] = useSelectedElement();\n  const [refCallback, rect] = useMeasure();\n\n  useEffect(() => {\n    // Disconnect observer when there is no element.\n    refCallback(element ?? null);\n  }, [element, refCallback]);\n\n  useEffect(() => {\n    if (rect !== undefined) publishRect(rect);\n  }, [rect]);\n};\n\nexport const usePublishHoveredInstanceRect = () => {\n  const [element] = useHoveredElement();\n  const publishRect = useCallback(() => {\n    if (element === undefined) return;\n    publish<\"hoveredInstanceRect\", DOMRect>({\n      type: \"hoveredInstanceRect\",\n      payload: element.getBoundingClientRect(),\n    });\n  }, [element]);\n  useEffect(publishRect, [publishRect]);\n};\n\nexport const useSetHoveredInstance = () => {\n  const [rootInstance] = useRootInstance();\n  const [hoveredElement] = useHoveredElement();\n  const [, setHoveredInstance] = useHoveredInstance();\n\n  useEffect(() => {\n    let instance;\n    if (rootInstance !== undefined && hoveredElement?.id) {\n      instance = findInstanceById(rootInstance, hoveredElement.id);\n    }\n    setHoveredInstance(instance);\n  }, [rootInstance, hoveredElement, setHoveredInstance]);\n};\n\n/**\n *  We need to set the selected instance after a any root instance update,\n *  because anything that we change on the selected instance is actually done on the root, so\n *  when we run \"undo\", root is going to be undone but not the selected instance, unless we update it here.\n */\nexport const useUpdateSelectedInstance = () => {\n  const [rootInstance] = useRootInstance();\n  const [selectedInstance, setSelectedInstance] = useSelectedInstance();\n\n  // When selected instance or root instance changes - we want to make sure the instance with that id still exists in the root.\n  useEffect(() => {\n    let instance;\n    if (rootInstance !== undefined && selectedInstance?.id) {\n      instance = findInstanceById(rootInstance, selectedInstance.id);\n    }\n    // When it's a new inserted instance, it will be undefined, so we can't set it to undefined and remove it.\n    if (instance !== undefined) setSelectedInstance(instance);\n  }, [rootInstance, selectedInstance, setSelectedInstance]);\n};\n\nexport const useUnselectInstance = () => {\n  const [, setSelectedInstance] = useSelectedInstance();\n  useSubscribe(\"unselectInstance\", () => {\n    setSelectedInstance(undefined);\n  });\n};\n\nexport const usePublishTextEditingInstanceId = () => {\n  const [editingInstanceId] = useTextEditingInstanceId();\n  useEffect(() => {\n    publish<\"textEditingInstanceId\", Instance[\"id\"] | undefined>({\n      type: \"textEditingInstanceId\",\n      payload: editingInstanceId,\n    });\n  }, [editingInstanceId]);\n};\n", "import store from \"immerhin\";\nimport { useSubscribe } from \"@webstudio-is/sdk\";\nimport { type StyleUpdates } from \"apps/designer/app/shared/canvas-components\";\nimport { setInstanceStyleMutable } from \"apps/designer/app/shared/tree-utils\";\nimport { useSelectedInstance } from \"./nano-states\";\nimport { rootInstanceContainer } from \"apps/designer/app/shared/nano-states\";\n\nexport const useUpdateStyle = () => {\n  const [selectedInstance] = useSelectedInstance();\n  useSubscribe<\"updateStyle\", StyleUpdates>(\n    \"updateStyle\",\n    ({ id, updates, breakpoint }) => {\n      // Only update styles if they match the selected instance\n      // It can potentially happen that we selected a difference instance right after we changed the style in style panel.\n      if (id !== selectedInstance?.id) return;\n\n      store.createTransaction([rootInstanceContainer], (rootInstance) => {\n        if (rootInstance === undefined) {\n          return;\n        }\n        setInstanceStyleMutable(rootInstance, id, updates, breakpoint);\n      });\n    }\n  );\n};\n", "import { useCallback, useEffect, useRef } from \"react\";\nimport { type Instance, publish, useSubscribe } from \"@webstudio-is/sdk\";\nimport { useSelectedElement, useSelectedInstance } from \"./nano-states\";\nimport {\n  useRootInstance,\n  useTextEditingInstanceId,\n} from \"apps/designer/app/shared/nano-states\";\nimport { findInstanceById } from \"apps/designer/app/shared/tree-utils\";\nimport { primitives } from \"apps/designer/app/shared/canvas-components\";\n\nconst eventOptions = {\n  passive: true,\n};\n\nexport const useTrackSelectedElement = () => {\n  const [selectedElement, setSelectedElement] = useSelectedElement();\n  const [selectedInstance, setSelectedInstance] = useSelectedInstance();\n  const [editingInstanceId, setEditingInstanceId] = useTextEditingInstanceId();\n  const editingInstanceIdRef = useRef(editingInstanceId);\n  editingInstanceIdRef.current = editingInstanceId;\n  const [rootInstance] = useRootInstance();\n  const selectInstance = useCallback(\n    (id) => {\n      if (rootInstance === undefined) return;\n      const instance = findInstanceById(rootInstance, id);\n      setSelectedInstance(instance);\n    },\n    [setSelectedInstance, rootInstance]\n  );\n\n  useSubscribe<\"selectInstanceById\", Instance[\"id\"]>(\n    \"selectInstanceById\",\n    selectInstance\n  );\n\n  // Focus and select the element when selected instance changes\n  useEffect(() => {\n    if (\n      selectedInstance !== undefined &&\n      (selectedElement === undefined ||\n        selectedInstance?.id !== selectedElement.id)\n    ) {\n      const element = document.getElementById(selectedInstance.id);\n      if (element === null) return;\n      element.focus();\n      setSelectedElement(element);\n    }\n  }, [selectedInstance, selectedElement, setSelectedElement]);\n\n  useEffect(() => {\n    if (\n      editingInstanceIdRef.current !== undefined &&\n      selectedInstance?.id !== editingInstanceIdRef.current\n    ) {\n      setEditingInstanceId(undefined);\n    }\n  }, [selectedInstance, setEditingInstanceId]);\n\n  useEffect(() => {\n    const handleClick = (event: MouseEvent) => {\n      // Notify in general that document was clicked\n      // e.g. to hide the side panel\n      publish<\"clickCanvas\">({ type: \"clickCanvas\" });\n      let element = event.target as HTMLElement;\n\n      // If we click on an element that is not a component, we search for a parent component.\n      if (element.dataset.component === undefined) {\n        const instanceElement =\n          element.closest<HTMLElement>(\"[data-component]\");\n        if (instanceElement === null) {\n          return;\n        }\n        element = instanceElement;\n      }\n\n      const { id, dataset } = element;\n\n      // Enable clicking inside of content editable without trying to select the element as an instance.\n      if (editingInstanceIdRef.current === id) {\n        return;\n      }\n\n      // It's the second click in a double click.\n      if (event.detail === 2) {\n        const component = dataset.component as Instance[\"component\"];\n        if (component === undefined || component in primitives === false) {\n          return;\n        }\n        const { isInlineOnly, isContentEditable } = primitives[component];\n\n        if (isContentEditable === false) {\n          return;\n        }\n\n        // When user double clicks on an inline instance, we need to select the parent instance and put it indo text editing mode.\n        // Inline instances are not directly, only through parent instance.\n        if (isInlineOnly) {\n          const parentId = element.parentElement?.id;\n          if (parentId) {\n            selectInstance(parentId);\n            setEditingInstanceId(parentId);\n          }\n        } else setEditingInstanceId(id);\n        return;\n      }\n\n      selectInstance(id);\n    };\n\n    window.addEventListener(\"click\", handleClick, eventOptions);\n\n    return () => {\n      window.removeEventListener(\"click\", handleClick);\n    };\n  }, [selectInstance, setEditingInstanceId]);\n};\n", "import { useCallback, MouseEvent, FormEvent, useMemo } from \"react\";\nimport type { OnChangeChildren } from \"apps/designer/app/shared/tree-utils\";\nimport {\n  type Instance,\n  type CSS,\n  toCss,\n  useUserProps,\n  renderWrapperComponentChildren,\n} from \"@webstudio-is/sdk\";\nimport { primitives } from \"apps/designer/app/shared/canvas-components\";\nimport {\n  useBreakpoints,\n  useTextEditingInstanceId,\n} from \"apps/designer/app/shared/nano-states\";\nimport { useCss } from \"./use-css\";\nimport { useDraggable } from \"./use-draggable\";\nimport { useEnsureFocus } from \"./use-ensure-focus\";\nimport { EditorMemoized, useContentEditable } from \"./text-editor\";\nimport noop from \"lodash.noop\";\nimport { useSelectedElement } from \"apps/designer/app/canvas/shared/nano-states\";\n\ntype WrapperComponentDevProps = {\n  instance: Instance;\n  css: CSS;\n  children: Array<JSX.Element | string>;\n  onChangeChildren?: OnChangeChildren;\n};\n\nexport const WrapperComponentDev = ({\n  instance,\n  css,\n  children,\n  onChangeChildren = noop,\n  ...rest\n}: WrapperComponentDevProps) => {\n  const className = useCss({ instance, css });\n  const [editingInstanceId] = useTextEditingInstanceId();\n  const [, setSelectedElement] = useSelectedElement();\n  const isEditing = editingInstanceId === instance.id;\n  const [editableRefCallback, editableProps] = useContentEditable(isEditing);\n  const { dragRefCallback, ...draggableProps } = useDraggable({\n    instance,\n    // We can't drag if we are editing text.\n    isDisabled: isEditing === true,\n  });\n  const focusRefCallback = useEnsureFocus();\n\n  const refCallback = useCallback(\n    (element) => {\n      if (isEditing) editableRefCallback(element);\n      dragRefCallback(element);\n      focusRefCallback(element);\n      // When entering text editing we unmount the instance element, so we need to update the reference, otherwise we have a detached element referenced and bounding box will be wrong.\n      if (element !== null) setSelectedElement(element);\n    },\n    [\n      dragRefCallback,\n      focusRefCallback,\n      editableRefCallback,\n      setSelectedElement,\n      isEditing,\n    ]\n  );\n\n  const userProps = useUserProps(instance.id);\n  const readonlyProps =\n    instance.component === \"Input\" ? { readOnly: true } : undefined;\n\n  const { Component } = primitives[instance.component];\n\n  const props = {\n    ...userProps,\n    ...rest,\n    ...draggableProps,\n    ...readonlyProps,\n    ...editableProps,\n    // @todo merge className with props\n    className: className,\n    // @todo stop using id to free it up to the user\n    id: instance.id,\n    tabIndex: 0,\n    \"data-component\": instance.component,\n    \"data-id\": instance.id,\n    ref: refCallback,\n    onClick: (event: MouseEvent) => {\n      if (instance.component === \"Link\") {\n        event.preventDefault();\n      }\n    },\n    onSubmit: (event: FormEvent) => {\n      // Prevent submitting the form when clicking a button type submit\n      event.preventDefault();\n    },\n  };\n\n  if (isEditing) {\n    return (\n      <EditorMemoized\n        instance={instance}\n        editable={<Component {...props} />}\n        onChange={(updates) => {\n          onChangeChildren({ instanceId: instance.id, updates });\n        }}\n      />\n    );\n  }\n\n  return (\n    <Component {...props}>{renderWrapperComponentChildren(children)}</Component>\n  );\n};\n\n// Only used for instances inside text editor.\nexport const InlineWrapperComponentDev = ({\n  instance,\n  ...rest\n}: {\n  instance: Instance;\n  children: string;\n}) => {\n  const [breakpoints] = useBreakpoints();\n  const css = useMemo(\n    () => toCss(instance.cssRules, breakpoints),\n    [instance, breakpoints]\n  );\n  const className = useCss({ instance, css });\n  const userProps = useUserProps(instance.id);\n  const { Component } = primitives[instance.component];\n\n  return (\n    <Component\n      {...rest}\n      {...userProps}\n      data-outline-disabled\n      key={instance.id}\n      // @todo stop using id to free it up to the user\n      id={instance.id}\n      // @todo merge className with props\n      className={className}\n    />\n  );\n};\n", "import { useEffect, useMemo, useState } from \"react\";\nimport {\n  type Instance,\n  css as createCss,\n  type CSS,\n  useSubscribe,\n  toValue,\n} from \"@webstudio-is/sdk\";\nimport { type StyleUpdates } from \"apps/designer/app/shared/canvas-components\";\n\ntype UseCssProps = {\n  instance: Instance;\n  css: CSS;\n};\n\ntype UpdatesReset = Array<{\n  property: string;\n  value: undefined;\n}>;\n\nconst usePreviewCss = ({ instance, css }: UseCssProps) => {\n  const [previewCss, setPreviewCss] = useState<\n    StyleUpdates[\"updates\"] | UpdatesReset\n  >([]);\n\n  useSubscribe<string, StyleUpdates>(\n    `previewStyle:${instance.id}`,\n    ({ updates }) => {\n      setPreviewCss(updates);\n    }\n  );\n\n  // We are building a map for unsetting the ephemeral values we previously set for the preview\n  useEffect(() => {\n    const reset = previewCss.map(({ property }) => ({\n      property,\n      value: undefined,\n    }));\n    setPreviewCss(reset);\n    // previewCss in deps leads to an infinite loop, css is like a cache key in this case,\n    // as soon as `css` changes we can reset the preview\n    // @todo need a more correct approach than this\n    // eslint-disable-next-line  react-hooks/exhaustive-deps\n  }, [css]);\n\n  return previewCss;\n};\n\nconst voidElements =\n  \"area, base, br, col, embed, hr, img, input, link, meta, source, track, wbr\";\nconst rootElement = \"body > div\";\n\nconst defaultStyle = {\n  \"&\": {\n    // When double clicking into an element to edit text, it should not select the word.\n    userSelect: \"none\",\n  },\n  [`&:not(${voidElements}):not(${rootElement}):empty`]: {\n    outline: \"1px dashed #555\",\n    outlineOffset: -1,\n    paddingTop: 50,\n    paddingRight: 50,\n  },\n  \"&[contenteditable], &:focus\": {\n    outline: 0,\n  },\n  \"&[contenteditable]\": {\n    boxShadow: \"0 0 0px 4px rgb(36 150 255 / 20%)\",\n  },\n  // Text Editor wraps each line into a p, so we need to make sure there is no jump between regular rendering and editing\n  \"&[contenteditable] p\": {\n    margin: 0,\n  },\n};\n\nexport const useCss = ({ instance, css }: UseCssProps): string => {\n  const previewCss = usePreviewCss({ instance, css });\n\n  return useMemo(() => {\n    const overrides: CSS = { ...defaultStyle };\n    for (const update of previewCss) {\n      if (update.value === undefined) continue;\n      overrides[update.property as string] = toValue(update.value);\n    }\n\n    return createCss(css)({ css: overrides });\n  }, [css, previewCss]);\n};\n", "import { useCallback, useEffect, useRef } from \"react\";\nimport { useDrag } from \"react-dnd\";\nimport { type Instance, publish } from \"@webstudio-is/sdk\";\nimport { type DragData } from \"apps/designer/app/shared/canvas-components\";\n//import { usePointerOutline } from \"~/canvas/hooks\";\n\ntype UseDraggable = {\n  instance: Instance;\n  isDisabled: boolean;\n};\n\nexport const useDraggable = ({ instance, isDisabled }: UseDraggable) => {\n  const isDraggingRef = useRef(false);\n\n  //const updatePointerOutline = usePointerOutline();\n  const [{ isDragging, currentOffset }, dragRefCallback] = useDrag(\n    () => ({\n      type: instance.component,\n      collect(monitor) {\n        return {\n          isDragging: monitor.isDragging(),\n          currentOffset: monitor.getClientOffset(),\n        };\n      },\n      canDrag() {\n        return isDisabled === false;\n      },\n    }),\n    [isDisabled]\n  );\n\n  useEffect(() => {\n    // Started\n    if (isDragging === true) {\n      publish<\"dragStartInstance\">({ type: \"dragStartInstance\" });\n    } else {\n      // Initial state is false, don't fire event if there was no dragging\n      //if (isDraggingRef.current === false) return;\n      // Ended\n      publish<\"dragEndInstance\", Instance[\"id\"]>({ type: \"dragEndInstance\" });\n    }\n    isDraggingRef.current = isDragging;\n  }, [isDragging, instance.id]);\n\n  useEffect(() => {\n    if (currentOffset === null || isDragging === false) return;\n    // updatePointerOutline(currentOffset);\n    publish<\"dragInstance\", DragData>({\n      type: \"dragInstance\",\n      payload: {\n        instance,\n        currentOffset,\n      },\n    });\n  }, [instance, currentOffset, isDragging]);\n\n  const handleMouseDown = useCallback(\n    (event) => {\n      // We need to disable d&d on parent components\n      // to enable text selection when content editable is enabled.\n      if (isDisabled) {\n        event.stopPropagation();\n      }\n    },\n    [isDisabled]\n  );\n\n  return { dragRefCallback, onMouseDownCapture: handleMouseDown };\n};\n", "import { useCallback } from \"react\";\nimport { useSelectedInstance } from \"apps/designer/app/canvas/shared/nano-states\";\n\n/**\n * When instance is created or selected via setInstance, we need to focus it.\n */\nexport const useEnsureFocus = () => {\n  const [selectedInstance] = useSelectedInstance();\n  return useCallback(\n    (element: HTMLElement | null) => {\n      if (\n        element !== null &&\n        element.id === selectedInstance?.id &&\n        document.activeElement !== element\n      ) {\n        element.focus();\n      }\n    },\n    [selectedInstance]\n  );\n};\n", "export type {\n  EditorConfig,\n  EditorState,\n  LexicalCommand,\n  LexicalEditor,\n  LexicalNode,\n  RangeSelection,\n  SerializedEditorState,\n  SerializedLexicalNode,\n  SerializedElementNode,\n  SerializedTextNode,\n  SerializedRootNode,\n  ParagraphNode,\n} from \"lexical\";\nexport {\n  ElementNode,\n  TextNode,\n  RootNode,\n  createCommand,\n  $isRangeSelection,\n  $getSelection,\n  $getRoot,\n  $getNodeByKey,\n  $createTextNode,\n  $createParagraphNode,\n  COMMAND_PRIORITY_EDITOR,\n  SELECTION_CHANGE_COMMAND,\n  COMMAND_PRIORITY_LOW,\n} from \"lexical\";\nexport { useLexicalComposerContext } from \"@lexical/react/LexicalComposerContext\";\nexport { LexicalComposer } from \"@lexical/react/LexicalComposer\";\nexport { RichTextPlugin } from \"@lexical/react/LexicalRichTextPlugin\";\nexport { ContentEditable } from \"@lexical/react/LexicalContentEditable\";\nexport { HistoryPlugin } from \"@lexical/react/LexicalHistoryPlugin\";\nexport { OnChangePlugin } from \"@lexical/react/LexicalOnChangePlugin\";\nexport { TreeView } from \"@lexical/react/LexicalTreeView\";\n", "import { render } from \"react-dom\";\nimport { type Instance } from \"@webstudio-is/sdk\";\nimport {\n  type EditorConfig,\n  type SerializedTextNode,\n  TextNode,\n} from \"../lexical\";\nimport { InlineWrapperComponentDev } from \"../../wrapper-component\";\n\ntype Options = {\n  instance: Instance;\n  text: string;\n  isNew: boolean;\n};\n\nexport type SerializedInstanceNode = SerializedTextNode & Options;\n\nexport class InstanceNode extends TextNode {\n  options: Options;\n\n  static getType(): \"instance\" {\n    return \"instance\";\n  }\n\n  static clone(node: InstanceNode) {\n    return new InstanceNode(node.options);\n  }\n\n  constructor(options: Options) {\n    // This makes sure caret is at the end of the selection after inserting this node instance\n    super(options.text);\n    this.options = options;\n  }\n\n  exportJSON(): SerializedInstanceNode {\n    const json = super.exportJSON();\n    return {\n      ...json,\n      ...this.options,\n      type: InstanceNode.getType(),\n    };\n  }\n\n  createDOM(config: EditorConfig) {\n    const container = super.createDOM(config);\n    const element = (\n      <InlineWrapperComponentDev instance={this.options.instance}>\n        {this.options.text}\n      </InlineWrapperComponentDev>\n    );\n    render(element, container);\n    return container;\n  }\n\n  updateDOM(prevNode: TextNode, dom: HTMLElement, config: EditorConfig) {\n    const inner = dom.firstChild as HTMLElement;\n    if (inner === null) {\n      return true;\n    }\n    super.updateDOM(prevNode, inner, config);\n\n    return false;\n  }\n\n  isInline(): true {\n    return true;\n  }\n\n  canInsertTextBefore(): false {\n    return false;\n  }\n\n  canInsertTextAfter(): false {\n    return false;\n  }\n}\n\nexport const $createInstanceNode = (options: Options) => {\n  return new InstanceNode(options);\n};\n", "import { InstanceNode } from \"./nodes/node-instance\";\n\nexport const config = {\n  namespace: \"ComponentTextEditor\",\n  onError(error: Error) {\n    throw error;\n  },\n  nodes: [InstanceNode],\n};\n", "import { useLexicalComposerContext } from \"@lexical/react/LexicalComposerContext\";\nimport { useCallback, useEffect } from \"react\";\n\ntype RefCallback = (rootElement: null | HTMLElement) => void;\n\nconst props = {\n  //autoCapitalize: false,\n  //autoComplete: false,\n  contentEditable: true,\n};\n\nexport const useContentEditable = (\n  isEditing: boolean\n): [RefCallback, typeof props | undefined] => {\n  const [editor] = useLexicalComposerContext();\n\n  const ref: RefCallback = useCallback(\n    (rootElement) => {\n      editor.setRootElement(rootElement);\n    },\n    [editor]\n  );\n\n  useEffect(() => {\n    if (isEditing === true) return;\n    // Lets unset the root element when we are not editing\n    editor.setRootElement(null);\n  }, [editor, isEditing]);\n\n  return [ref, isEditing ? props : undefined];\n};\n", "import { useEffect } from \"react\";\nimport { useSubscribe, type Instance } from \"@webstudio-is/sdk\";\nimport { $createInstanceNode, InstanceNode } from \"../nodes/node-instance\";\nimport {\n  createCommand,\n  $isRangeSelection,\n  $getSelection,\n  $getRoot,\n  COMMAND_PRIORITY_EDITOR,\n  useLexicalComposerContext,\n  type LexicalCommand,\n} from \"../lexical\";\nimport { toLexicalNodes } from \"../utils/to-lexical-nodes\";\n\nconst populateRoot = (children: Instance[\"children\"]) => {\n  const nodes = toLexicalNodes(children);\n  const root = $getRoot();\n  root.clear();\n  for (const node of nodes) {\n    root.append(node);\n  }\n  root.selectStart();\n};\n\nconst INSERT_INSTANCE_COMMAND: LexicalCommand<Instance> = createCommand();\n\ntype InstancePluginProps = {\n  children: Instance[\"children\"];\n};\n\nexport const InstancePlugin = ({ children }: InstancePluginProps) => {\n  const [editor] = useLexicalComposerContext();\n  useEffect(() => {\n    if (editor.hasNodes([InstanceNode]) === false) {\n      throw new Error(\"InstancePlugin: InstanceNode not registered on editor\");\n    }\n\n    return editor.registerCommand<Instance>(\n      INSERT_INSTANCE_COMMAND,\n      (instance) => {\n        const selection = $getSelection();\n        const text = selection?.getTextContent();\n        if ($isRangeSelection(selection) && text) {\n          const instanceNode = $createInstanceNode({\n            instance,\n            text,\n            isNew: true,\n          });\n          selection.insertNodes([instanceNode]);\n          // Dirty hack. When clicking on toolbar outside of the iframe, we are loosing focus.\n          // For some reason we can only refocus after a delay\n          requestAnimationFrame(() => {\n            editor.update(() => {\n              instanceNode.select();\n            });\n          });\n        }\n        return true;\n      },\n      COMMAND_PRIORITY_EDITOR\n    );\n  }, [editor]);\n\n  useEffect(() => {\n    editor.update(() => {\n      populateRoot(children);\n    });\n  }, [editor, children]);\n\n  useSubscribe<\"insertInlineInstance\", Instance>(\n    \"insertInlineInstance\",\n    (payload) => {\n      editor.dispatchCommand<Instance>(INSERT_INSTANCE_COMMAND, payload);\n    }\n  );\n\n  return null;\n};\n", "import { type Instance } from \"@webstudio-is/sdk\";\nimport { $createInstanceNode } from \"../nodes/node-instance\";\nimport {\n  $createTextNode,\n  $createParagraphNode,\n  type ParagraphNode,\n} from \"../lexical\";\n\nexport const toLexicalNodes = (children: Instance[\"children\"]) => {\n  const nodes: Array<ParagraphNode> = [];\n\n  let p = $createParagraphNode();\n  nodes.push(p);\n\n  for (const child of children) {\n    if (child === \"\\n\") {\n      p = $createParagraphNode();\n      nodes.push(p);\n      continue;\n    }\n\n    if (typeof child === \"string\") {\n      const textNode = $createTextNode(child);\n      p.append(textNode);\n      continue;\n    }\n\n    // Inline components should always have a single child string\n    const text = typeof child.children[0] === \"string\" ? child.children[0] : \"\";\n    const paragraph = nodes[nodes.length - 1];\n    const instanceNode = $createInstanceNode({\n      instance: child,\n      text,\n      isNew: false,\n    });\n    paragraph.append(instanceNode);\n  }\n\n  return nodes;\n};\n", "import { useCallback, useEffect, useRef } from \"react\";\nimport { publish } from \"@webstudio-is/sdk\";\n\nimport {\n  $isRangeSelection,\n  $getSelection,\n  SELECTION_CHANGE_COMMAND,\n  COMMAND_PRIORITY_LOW,\n  useLexicalComposerContext,\n} from \"../lexical\";\n\nexport const ToolbarConnectorPlugin = () => {\n  const [editor] = useLexicalComposerContext();\n  const lastSelectionRef = useRef<unknown>();\n\n  const clearSelectionRect = () => {\n    if (lastSelectionRef.current) {\n      // Undefined Rect will hide toolbar\n      publish<\"selectionRect\">({ type: \"selectionRect\", payload: undefined });\n      lastSelectionRef.current = undefined;\n    }\n  };\n\n  const publishSelectionRect = useCallback(() => {\n    const selection = $getSelection();\n    const text = selection?.getTextContent();\n    const nativeSelection = window.getSelection();\n    const isTextSelected =\n      $isRangeSelection(selection) && Boolean(text) && nativeSelection !== null;\n\n    if (isTextSelected) {\n      const domRange = nativeSelection.getRangeAt(0);\n      const rect = domRange.getBoundingClientRect();\n      publish<\"selectionRect\", DOMRect>({\n        type: \"selectionRect\",\n        payload: rect,\n      });\n      lastSelectionRef.current = selection;\n      return true;\n    }\n\n    clearSelectionRect();\n\n    return true;\n  }, []);\n\n  useEffect(() => {\n    editor.registerCommand(\n      SELECTION_CHANGE_COMMAND,\n      publishSelectionRect,\n      COMMAND_PRIORITY_LOW\n    );\n  }, [editor, publishSelectionRect]);\n\n  useEffect(() => clearSelectionRect, []);\n\n  return null;\n};\n", "import { type ChildrenUpdates } from \"@webstudio-is/sdk\";\nimport { useState } from \"react\";\nimport { useDebounce } from \"react-use\";\nimport {\n  OnChangePlugin as LexicalOnChangePlugin,\n  type EditorState,\n} from \"../lexical\";\nimport { toUpdates } from \"../utils/to-updates\";\n\nexport const OnChangePlugin = ({\n  onChange,\n}: {\n  onChange: (updates: ChildrenUpdates) => void;\n}) => {\n  const [editorState, setEditorState] = useState<EditorState>();\n\n  useDebounce(\n    () => {\n      if (editorState === undefined) return;\n      editorState.read(() => {\n        const updates = toUpdates(editorState.toJSON().root);\n        onChange(updates);\n      });\n    },\n    500,\n    [editorState]\n  );\n\n  return <LexicalOnChangePlugin onChange={setEditorState} />;\n};\n", "import { type ChildrenUpdates } from \"@webstudio-is/sdk\";\nimport {\n  type SerializedTextNode,\n  type SerializedElementNode,\n  type SerializedRootNode,\n  type SerializedLexicalNode,\n} from \"../lexical\";\nimport { type SerializedInstanceNode } from \"../nodes/node-instance\";\n\ntype Node =\n  | SerializedRootNode\n  | SerializedElementNode\n  | SerializedTextNode\n  | SerializedLexicalNode\n  | SerializedInstanceNode;\n\nexport const toUpdates = (\n  node: Node,\n  updates: ChildrenUpdates = []\n): ChildrenUpdates => {\n  if (node.type === \"text\" && \"text\" in node) {\n    updates.push(node.text);\n  }\n\n  if (node.type === \"instance\" && \"instance\" in node) {\n    if (\"isNew\" in node && node.isNew === true) {\n      updates.push({\n        id: node.instance.id,\n        text: node.text,\n        component: node.instance.component,\n        createInstance: true,\n      });\n    } else {\n      updates.push({\n        id: node.instance.id,\n        text: node.text,\n      });\n    }\n  }\n\n  if (\"children\" in node) {\n    for (const child of node.children) {\n      if (child.type === \"paragraph\" && updates.length !== 0) {\n        updates.push(\"\\n\");\n      }\n\n      toUpdates(child, updates);\n    }\n  }\n\n  return updates;\n};\n", "import { type ChildrenUpdates, type Instance } from \"@webstudio-is/sdk\";\nimport { RichTextPlugin, HistoryPlugin } from \"./lexical\";\nimport { InstancePlugin } from \"./plugins/plugin-instance\";\nimport { ToolbarConnectorPlugin } from \"./plugins/plugin-toolbar-connector\";\nimport { OnChangePlugin } from \"./plugins/plugin-on-change\";\nimport { memo } from \"react\";\n\ntype EditorProps = {\n  children?: JSX.Element;\n  editable: JSX.Element;\n  instance: Instance;\n  onChange: (updates: ChildrenUpdates) => void;\n};\n\nexport const Editor = ({\n  instance,\n  editable,\n  children,\n  onChange,\n}: EditorProps) => {\n  return (\n    <>\n      <RichTextPlugin contentEditable={editable} placeholder=\"\" />\n      <OnChangePlugin onChange={onChange} />\n      <HistoryPlugin />\n      <InstancePlugin>{instance.children}</InstancePlugin>\n      <ToolbarConnectorPlugin />\n      {children}\n    </>\n  );\n};\n\n// Prevent rerender because in editing mode Editor controls the node.\nexport const EditorMemoized = memo(Editor, () => true);\n", "import useInterval from \"react-use/lib/useInterval\";\nimport { sync } from \"immerhin\";\nimport { enqueue } from \"./queue\";\nimport type { Project } from \"apps/designer/app/shared/db/project.server\";\n\nexport const useSync = ({ project }: { project: Project }) => {\n  useInterval(() => {\n    const entries = sync();\n    if (entries.length === 0) return;\n\n    // @todo this entire queueing logic needs to be gone, it's a workaround,\n    // because prisma can't do atomic updates yet with embeded documents\n    // and backend fetches and updates big objects, so if we send quickly,\n    // we end up overwriting things\n    enqueue(() =>\n      fetch(`/rest/patch`, {\n        method: \"post\",\n        body: JSON.stringify({\n          transactions: entries,\n          treeId: project.devTreeId,\n          projectId: project.id,\n        }),\n      })\n    );\n  }, 1000);\n};\n", "import { type SyncStatus } from \"apps/designer/app/shared/sync\";\nimport { publish } from \"@webstudio-is/sdk\";\n\n// @todo because of limitation with nested models and saving tree as a Json type\n// we load that entire Json to manipulate and if a second request happens before the first one has written\n// the result into the db, the second request will have outdated tree and will then write the outdated tree back\n// to the database\n// For now we will just have to queue the changes for all tree mutations.\n\ntype Job = () => Promise<unknown>;\n\nconst queue: Array<Job> = [];\n\nexport const enqueue = (job: Job) => {\n  queue.push(job);\n  if (isInProgress === false) dequeue();\n};\n\nlet isInProgress = false;\n\nconst dequeue = () => {\n  const job = queue.shift();\n  if (job) {\n    isInProgress = true;\n    publish<\"syncStatus\", SyncStatus>({\n      type: \"syncStatus\",\n      payload: \"syncing\",\n    });\n    job().finally(() => {\n      isInProgress = false;\n      publish<\"syncStatus\", SyncStatus>({\n        type: \"syncStatus\",\n        payload: \"idle\",\n      });\n      dequeue();\n    });\n  }\n};\n", "import {\n  type UserPropsUpdates,\n  useSubscribe,\n  allUserPropsContainer,\n  DeleteProp,\n} from \"@webstudio-is/sdk\";\nimport store from \"immerhin\";\nimport {\n  updateAllUserPropsMutable,\n  deletePropMutable,\n} from \"apps/designer/app/shared/props-utils\";\n\nexport const useManageProps = () => {\n  useSubscribe<\"updateProps\", UserPropsUpdates>(\n    \"updateProps\",\n    (userPropsUpdates) => {\n      store.createTransaction([allUserPropsContainer], (allUserProps) => {\n        updateAllUserPropsMutable(allUserProps, userPropsUpdates);\n      });\n    }\n  );\n\n  useSubscribe<\"deleteProp\", DeleteProp>(\"deleteProp\", (deleteProp) => {\n    store.createTransaction([allUserPropsContainer], (allUserProps) => {\n      deletePropMutable(allUserProps, deleteProp);\n    });\n  });\n};\n", "import { useEffect } from \"react\";\nimport store from \"immerhin\";\nimport {\n  type Breakpoint,\n  useSubscribe,\n  setBreakpoints,\n  publish,\n} from \"@webstudio-is/sdk\";\nimport { deleteCssRulesByBreakpoint } from \"apps/designer/app/shared/css-utils\";\nimport {\n  breakpointsContainer,\n  rootInstanceContainer,\n  useBreakpoints,\n} from \"apps/designer/app/shared/nano-states\";\n\nexport const useInitializeBreakpoints = (breakpoints: Array<Breakpoint>) => {\n  const [, setCurrentBreakpoints] = useBreakpoints();\n  useEffect(() => {\n    setBreakpoints(breakpoints);\n    setCurrentBreakpoints(breakpoints);\n  }, [breakpoints, setCurrentBreakpoints]);\n};\n\nconst usePublishBreakpoints = () => {\n  const [breakpoints] = useBreakpoints();\n  useEffect(() => {\n    publish<\"loadBreakpoints\", Array<Breakpoint>>({\n      type: \"loadBreakpoints\",\n      payload: breakpoints,\n    });\n  }, [breakpoints]);\n};\n\nconst useBreakpointChange = () => {\n  useSubscribe<\"breakpointChange\", Breakpoint>(\n    \"breakpointChange\",\n    (breakpoint) => {\n      store.createTransaction([breakpointsContainer], (breakpoints) => {\n        const foundBreakpoint = breakpoints.find(\n          ({ id }) => id == breakpoint.id\n        );\n        if (foundBreakpoint) {\n          foundBreakpoint.label = breakpoint.label;\n          foundBreakpoint.minWidth = breakpoint.minWidth;\n        } else {\n          // Its a new breakpoint\n          breakpoints.push(breakpoint);\n        }\n\n        setBreakpoints(breakpoints);\n      });\n    }\n  );\n};\n\nconst useBreakpointDelete = () => {\n  useSubscribe<\"breakpointDelete\", Breakpoint>(\n    \"breakpointDelete\",\n    (breakpoint) => {\n      store.createTransaction(\n        [breakpointsContainer, rootInstanceContainer],\n        (breakpoints, rootInstance) => {\n          if (rootInstance === undefined) return;\n\n          const index = breakpoints.findIndex(({ id }) => id == breakpoint.id);\n          if (index !== -1) {\n            breakpoints.splice(index, 1);\n          }\n\n          deleteCssRulesByBreakpoint(rootInstance, breakpoint.id);\n        }\n      );\n    }\n  );\n};\n\nexport const useHandleBreakpoints = () => {\n  usePublishBreakpoints();\n  useBreakpointChange();\n  useBreakpointDelete();\n};\n", "import { type Instance, type Breakpoint } from \"@webstudio-is/sdk\";\n\nexport const deleteCssRulesByBreakpoint = (\n  instance: Instance,\n  breakpointId: Breakpoint[\"id\"]\n) => {\n  const cssRules = [...instance.cssRules];\n  cssRules.forEach((cssRule, index) => {\n    if (cssRule.breakpoint === breakpointId) {\n      instance.cssRules.splice(index, 1);\n    }\n  });\n\n  for (const child of instance.children) {\n    if (typeof child === \"string\") continue;\n    deleteCssRulesByBreakpoint(child, breakpointId);\n  }\n};\n", "import { allUserPropsContainer } from \"@webstudio-is/sdk\";\nimport store from \"immerhin\";\nimport {\n  rootInstanceContainer,\n  breakpointsContainer,\n} from \"apps/designer/app/shared/nano-states\";\n\nexport const registerContainers = () => {\n  store.register(\"breakpoints\", breakpointsContainer);\n  store.register(\"root\", rootInstanceContainer);\n  store.register(\"props\", allUserPropsContainer);\n};\n", "import { useEffect } from \"react\";\nimport { useSelectedElement, useHoveredElement } from \"./nano-states\";\nimport { useRootInstance } from \"apps/designer/app/shared/nano-states\";\n\nconst eventOptions = {\n  passive: true,\n};\n\nexport const useTrackHoveredElement = () => {\n  const [rootInstance] = useRootInstance();\n  const [, setHoveredElement] = useHoveredElement();\n  const [selectedElement] = useSelectedElement();\n\n  useEffect(() => {\n    const handleMouseOver = (event: MouseEvent) => {\n      const element = event.target;\n      if (\n        rootInstance === undefined ||\n        !(element instanceof HTMLElement) ||\n        element.dataset.outlineDisabled\n      ) {\n        return;\n      }\n      setHoveredElement(element);\n    };\n\n    const handleMouseOut = () => {\n      if (rootInstance === undefined) return;\n      setHoveredElement(undefined);\n    };\n\n    window.addEventListener(\"mouseover\", handleMouseOver, eventOptions);\n    window.addEventListener(\"mouseout\", handleMouseOut, eventOptions);\n\n    return () => {\n      window.removeEventListener(\"mouseover\", handleMouseOver);\n      window.removeEventListener(\"mouseout\", handleMouseOut);\n    };\n  }, [rootInstance, selectedElement, setHoveredElement]);\n};\n", "import { publish } from \"@webstudio-is/sdk\";\nimport { useScrollState } from \"apps/designer/app/shared/dom-hooks\";\n\nexport const usePublishScrollState = () => {\n  useScrollState({\n    onScrollStart() {\n      publish<\"scrollState\", boolean>({ type: \"scrollState\", payload: true });\n    },\n    onScrollEnd() {\n      publish<\"scrollState\", boolean>({\n        type: \"scrollState\",\n        payload: false,\n      });\n    },\n  });\n};\n", "import { ActionFunction } from \"@remix-run/node\";\nimport config from \"apps/designer/app/config\";\nimport { authenticator } from \"apps/designer/app/services/auth.server\";\n\nexport default function Logout() {\n  return null;\n}\n\nexport const loader: ActionFunction = async ({ request }) => {\n  await authenticator.logout(request, { redirectTo: config.loginPath });\n};\n", "import { redirect, type LoaderFunction } from \"@remix-run/node\";\nimport { useLoaderData } from \"@remix-run/react\";\nimport { Root, type Data } from \"@webstudio-is/sdk\";\nimport config from \"apps/designer/app/config\";\nimport * as db from \"apps/designer/app/shared/db\";\nimport Document from \"./canvas\";\nimport env, { Env } from \"apps/designer/app/env.server\";\n\n// @todo all this subdomain logic is very hacky\n\ntype Error = { errors: string };\ntype LoaderReturnProps = Promise<\n  (Data & { env: Env }) | (Error & { env: Env }) | Response\n>;\n\nexport const loader: LoaderFunction = async ({\n  request,\n}): LoaderReturnProps => {\n  const host =\n    request.headers.get(\"x-forwarded-host\") ||\n    request.headers.get(\"host\") ||\n    \"\";\n\n  const [userDomain, wstdDomain] = host.split(\".\");\n  // We render the site from a subdomain\n  if (\n    typeof userDomain === \"string\" &&\n    (wstdDomain === \"wstd\" || wstdDomain?.includes(\"localhost\"))\n  ) {\n    try {\n      const project = await db.project.loadByDomain(userDomain);\n      if (project === null) {\n        throw new Error(`Unknown domain \"${userDomain}\"`);\n      }\n      if (project.prodTreeId === null) {\n        throw new Error(`Site is not published`);\n      }\n      const [tree, props, breakpoints] = await Promise.all([\n        db.tree.loadByProject(project, \"production\"),\n        db.props.loadByTreeId(project.prodTreeId),\n        db.breakpoints.load(project.prodTreeId),\n      ]);\n      if (tree === null) {\n        throw new Error(`Tree ${project.prodTreeId} not found`);\n      }\n      if (breakpoints === null) {\n        throw new Error(`Breakpoints for tree ${project.prodTreeId} not found`);\n      }\n      return { tree, props, breakpoints: breakpoints.values, env };\n    } catch (error) {\n      if (error instanceof Error) {\n        return { errors: error.message, env };\n      }\n    }\n  }\n\n  return redirect(config.dashboardPath);\n};\n\nconst Index = () => {\n  const data = useLoaderData<Data | Error>();\n  if (\"errors\" in data) {\n    return <p>{data.errors}</p>;\n  }\n\n  // We render the site from a subdomain\n  if (data.tree && data.props) {\n    const Outlet = () => <Root data={data} />;\n\n    // @todo This is non-standard for Remix, is there a better way?\n    // We need to render essentially the preview route but from the index,\n    // so we have to know the layout and the outlet from here.\n    // Maybe there is a way to tell remix to use the right outlet somehow and avoid passing it?\n    return <Document Outlet={Outlet} />;\n  }\n\n  return null;\n};\n\nexport default Index;\n", "import { LoaderFunction, type MetaFunction } from \"@remix-run/node\";\nimport { Canvas } from \"apps/designer/app/shared/documents/canvas\";\nimport env from \"apps/designer/app/env.server\";\n\nexport const loader: LoaderFunction = () => ({\n  env,\n});\n\nexport const meta: MetaFunction = () => {\n  return { title: \"Webstudio canvas\" };\n};\n\nexport default Canvas;\n", "import { LoaderFunction, MetaFunction } from \"@remix-run/node\";\nimport { Designer } from \"apps/designer/app/shared/documents/designer\";\nimport env from \"apps/designer/app/env.server\";\n\nexport const loader: LoaderFunction = () => ({\n  env,\n});\n\nexport const meta: MetaFunction = () => {\n  return { title: \"Webstudio Login\" };\n};\n\nexport default Designer;\n", "import { LoaderFunction, redirect } from \"@remix-run/node\";\n\nimport { authenticator } from \"apps/designer/app/services/auth.server\";\nimport config from \"apps/designer/app/config\";\nimport env from \"apps/designer/app/env.server\";\n\nimport { Login, links } from \"apps/designer/app/auth\";\nimport { useLoginErrorMessage } from \"apps/designer/app/shared/session\";\n\nexport { links };\n\nexport const loader: LoaderFunction = async ({ request }) => {\n  const user = await authenticator.isAuthenticated(request);\n  if (user) {\n    return redirect(config.dashboardPath);\n  }\n  return {\n    isDevLogin: process.env.DEV_LOGIN === \"true\",\n    env,\n    isGithubEnabled: Boolean(\n      process.env.GH_CLIENT_ID && process.env.GH_CLIENT_SECRET\n    ),\n    isGoogleEnabled: Boolean(\n      process.env.GOOGLE_CLIENT_ID && process.env.GOOGLE_CLIENT_SECRET\n    ),\n  };\n};\n\nconst LoginRoute = () => {\n  const errorMessage = useLoginErrorMessage();\n  return <Login errorMessage={errorMessage} />;\n};\n\nexport default LoginRoute;\n", "import { LinksFunction, MetaFunction } from \"@remix-run/node\";\nimport { Form, useLoaderData } from \"@remix-run/react\";\nimport { useState } from \"react\";\n\nimport {\n  Card,\n  Flex,\n  Heading,\n  Text,\n  TextField,\n} from \"apps/designer/app/shared/design-system\";\nimport interStyles from \"~/shared/font-faces/inter.css\";\n\nimport {\n  GithubIcon,\n  CommitIcon,\n  GoogleIcon,\n} from \"apps/designer/app/shared/icons\";\nimport { LoginButton } from \"./components/login-button\";\nimport loginStyles from \"./login.css\";\n\nexport const links: LinksFunction = () => {\n  return [\n    {\n      rel: \"stylesheet\",\n      href: interStyles,\n    },\n    {\n      rel: \"stylesheet\",\n      href: loginStyles,\n    },\n  ];\n};\n\nexport const meta: MetaFunction = () => {\n  return { title: \"Webstudio Login\" };\n};\n\nexport const Login = ({ errorMessage }: { errorMessage: string }) => {\n  const [isDevLoginOpen, openDevLogin] = useState(false);\n  const data = useLoaderData();\n\n  return (\n    <Flex\n      css={{ height: \"100vh\" }}\n      direction=\"column\"\n      align=\"center\"\n      justify=\"center\"\n    >\n      <Card size={2}>\n        <Flex direction=\"column\" gap=\"4\" align=\"center\">\n          <Heading size=\"2\">Login</Heading>\n          {errorMessage.length ? (\n            <Text css={{ textAlign: \"center\" }} variant=\"red\">\n              {errorMessage}\n            </Text>\n          ) : null}\n          <Flex gap=\"2\" direction=\"column\" align=\"center\">\n            <Form action=\"/auth/github\" method=\"post\">\n              <LoginButton enabled={data.isGithubEnabled}>\n                <Flex gap=\"1\">\n                  <GithubIcon width=\"20\" />\n                  Login with GitHub\n                </Flex>\n              </LoginButton>\n            </Form>\n            <Form action=\"/auth/google\" method=\"post\">\n              <LoginButton enabled={data.isGoogleEnabled}>\n                <Flex gap=\"1\">\n                  <GoogleIcon width=\"20\" />\n                  Login with Google\n                </Flex>\n              </LoginButton>\n            </Form>\n            {data.isDevLogin && (\n              <>\n                {isDevLoginOpen ? (\n                  <Form action=\"/auth/dev\" method=\"post\">\n                    <TextField\n                      size={2}\n                      css={{ width: \"100%\", flexGrow: 1 }}\n                      name=\"secret\"\n                      type=\"text\"\n                      minLength={2}\n                      required\n                      autoFocus\n                      placeholder=\"Place your auth secret here\"\n                    />\n                  </Form>\n                ) : (\n                  <LoginButton\n                    enabled={data.isDevLogin}\n                    isDevLogin\n                    onClick={() => openDevLogin(true)}\n                  >\n                    <Flex gap=\"1\" align=\"center\">\n                      <CommitIcon width=\"20\" />\n                      Dev Login\n                    </Flex>\n                  </LoginButton>\n                )}\n              </>\n            )}\n          </Flex>\n        </Flex>\n      </Card>\n    </Flex>\n  );\n};\n", "import React from \"react\";\nimport { Button, Tooltip } from \"apps/designer/app/shared/design-system\";\nimport env from \"apps/designer/app/shared/env\";\n\nconst isPreviewEnvironment = env.VERCEL_ENV === \"preview\";\n\nexport const LoginButton = ({\n  children,\n  isDevLogin = false,\n  enabled,\n  ...props\n}: {\n  children: React.ReactChild;\n  isDevLogin?: boolean;\n  onClick?: () => void;\n  enabled: boolean;\n}) => {\n  const isSocialLoginInPreviewEnvironment =\n    isPreviewEnvironment && isDevLogin === false;\n  const showTooltip = isSocialLoginInPreviewEnvironment || enabled === false;\n  if (showTooltip) {\n    const content = isSocialLoginInPreviewEnvironment\n      ? \"Social login does not work in preview deployments\"\n      : \"This login is not configured\";\n\n    return (\n      <Tooltip content={content} delayDuration={0}>\n        <span tabIndex={0} style={{ width: \"100%\", display: \"block\" }}>\n          <Button\n            {...props}\n            css={{ width: \"100%\" }}\n            size={3}\n            type=\"submit\"\n            disabled\n          >\n            {children}\n          </Button>\n        </span>\n      </Tooltip>\n    );\n  }\n  return (\n    <Button {...props} css={{ width: \"100%\" }} size={3} type=\"submit\">\n      {children}\n    </Button>\n  );\n};\n", "export default {'version':'6412d0f3','entry':{'module':'/build/entry.client-BADAYHVI.js','imports':['/build/_shared/chunk-B36H54Q2.js','/build/_shared/chunk-MADQQ4W2.js','/build/_shared/chunk-QD7BDOJK.js','/build/_shared/chunk-QPKOW66L.js','/build/_shared/chunk-SRJHFGUQ.js','/build/_shared/chunk-R6VSS7HB.js']},'routes':{'root':{'id':'root','parentId':undefined,'path':'','index':undefined,'caseSensitive':undefined,'module':'/build/root-HIH74YUZ.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/auth/dev':{'id':'routes/auth/dev','parentId':'root','path':'auth/dev','index':undefined,'caseSensitive':undefined,'module':'/build/routes/auth/dev-OY6U6ZZL.js','imports':['/build/_shared/chunk-WWM4X7G7.js','/build/_shared/chunk-TDLYKOPO.js'],'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/auth/github':{'id':'routes/auth/github','parentId':'root','path':'auth/github','index':undefined,'caseSensitive':undefined,'module':'/build/routes/auth/github-VQ7AN4UG.js','imports':['/build/_shared/chunk-WWM4X7G7.js','/build/_shared/chunk-TDLYKOPO.js'],'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/auth/github/callback':{'id':'routes/auth/github/callback','parentId':'routes/auth/github','path':'callback','index':undefined,'caseSensitive':undefined,'module':'/build/routes/auth/github/callback-TALPZT4U.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/auth/google':{'id':'routes/auth/google','parentId':'root','path':'auth/google','index':undefined,'caseSensitive':undefined,'module':'/build/routes/auth/google-IPCRXR2G.js','imports':['/build/_shared/chunk-WWM4X7G7.js','/build/_shared/chunk-TDLYKOPO.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/auth/google/callback':{'id':'routes/auth/google/callback','parentId':'routes/auth/google','path':'callback','index':undefined,'caseSensitive':undefined,'module':'/build/routes/auth/google/callback-SJVT2W6T.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/canvas':{'id':'routes/canvas','parentId':'root','path':'canvas','index':undefined,'caseSensitive':undefined,'module':'/build/routes/canvas-BNYCH64M.js','imports':['/build/_shared/chunk-CHKIVGVF.js','/build/_shared/chunk-VDMDGISW.js','/build/_shared/chunk-6KWPSJTY.js','/build/_shared/chunk-D4F75PJ7.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/canvas/$projectId':{'id':'routes/canvas/$projectId','parentId':'routes/canvas','path':':projectId','index':undefined,'caseSensitive':undefined,'module':'/build/routes/canvas/$projectId-EN7MP3RM.js','imports':['/build/_shared/chunk-6YZOMFAW.js','/build/_shared/chunk-LZQQRXUE.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/dashboard':{'id':'routes/dashboard','parentId':'root','path':'dashboard','index':undefined,'caseSensitive':undefined,'module':'/build/routes/dashboard-GORLGHTU.js','imports':['/build/_shared/chunk-GJEHYJKD.js','/build/_shared/chunk-6KWPSJTY.js','/build/_shared/chunk-D4F75PJ7.js','/build/_shared/chunk-KEIN4CGZ.js','/build/_shared/chunk-LZQQRXUE.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/dashboard/index':{'id':'routes/dashboard/index','parentId':'routes/dashboard','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/dashboard/index-47ACBDYH.js','imports':['/build/_shared/chunk-7YTDWDGG.js','/build/_shared/chunk-WWM4X7G7.js','/build/_shared/chunk-TDLYKOPO.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/designer':{'id':'routes/designer','parentId':'root','path':'designer','index':undefined,'caseSensitive':undefined,'module':'/build/routes/designer-7PTVKO44.js','imports':['/build/_shared/chunk-GJEHYJKD.js','/build/_shared/chunk-6KWPSJTY.js','/build/_shared/chunk-D4F75PJ7.js','/build/_shared/chunk-KEIN4CGZ.js','/build/_shared/chunk-LZQQRXUE.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/designer/$id':{'id':'routes/designer/$id','parentId':'routes/designer','path':':id','index':undefined,'caseSensitive':undefined,'module':'/build/routes/designer/$id-ALVFN3YN.js','imports':['/build/_shared/chunk-6YZOMFAW.js','/build/_shared/chunk-7YTDWDGG.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/index':{'id':'routes/index','parentId':'root','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/index-O6SAICID.js','imports':['/build/_shared/chunk-CHKIVGVF.js','/build/_shared/chunk-VDMDGISW.js','/build/_shared/chunk-6KWPSJTY.js','/build/_shared/chunk-D4F75PJ7.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/login':{'id':'routes/login','parentId':'root','path':'login','index':undefined,'caseSensitive':undefined,'module':'/build/routes/login-BRUOWCYK.js','imports':['/build/_shared/chunk-GJEHYJKD.js','/build/_shared/chunk-6KWPSJTY.js','/build/_shared/chunk-D4F75PJ7.js','/build/_shared/chunk-KEIN4CGZ.js','/build/_shared/chunk-LZQQRXUE.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/login/index':{'id':'routes/login/index','parentId':'routes/login','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/login/index-Y3BTJFU4.js','imports':['/build/_shared/chunk-7YTDWDGG.js','/build/_shared/chunk-WWM4X7G7.js','/build/_shared/chunk-TDLYKOPO.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/logout':{'id':'routes/logout','parentId':'root','path':'logout','index':undefined,'caseSensitive':undefined,'module':'/build/routes/logout-O5E6MPSO.js','imports':['/build/_shared/chunk-TDLYKOPO.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/preview':{'id':'routes/preview','parentId':'root','path':'preview','index':undefined,'caseSensitive':undefined,'module':'/build/routes/preview-DNRQO7NW.js','imports':['/build/_shared/chunk-VDMDGISW.js','/build/_shared/chunk-6KWPSJTY.js','/build/_shared/chunk-D4F75PJ7.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/preview/$projectId':{'id':'routes/preview/$projectId','parentId':'routes/preview','path':':projectId','index':undefined,'caseSensitive':undefined,'module':'/build/routes/preview/$projectId-4SZF7FOL.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/rest/breakpoints.$projectId':{'id':'routes/rest/breakpoints.$projectId','parentId':'root','path':'rest/breakpoints/:projectId','index':undefined,'caseSensitive':undefined,'module':'/build/routes/rest/breakpoints.$projectId-OC77KFX5.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/rest/patch':{'id':'routes/rest/patch','parentId':'root','path':'rest/patch','index':undefined,'caseSensitive':undefined,'module':'/build/routes/rest/patch-NSLESHUG.js','imports':undefined,'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/rest/project/clone.$domain':{'id':'routes/rest/project/clone.$domain','parentId':'root','path':'rest/project/clone/:domain','index':undefined,'caseSensitive':undefined,'module':'/build/routes/rest/project/clone.$domain-KRUZBK37.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/rest/props.$projectId':{'id':'routes/rest/props.$projectId','parentId':'root','path':'rest/props/:projectId','index':undefined,'caseSensitive':undefined,'module':'/build/routes/rest/props.$projectId-JSZ6VLX5.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/rest/publish':{'id':'routes/rest/publish','parentId':'root','path':'rest/publish','index':undefined,'caseSensitive':undefined,'module':'/build/routes/rest/publish-4BQNZ4P3.js','imports':undefined,'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/rest/tree.$projectId':{'id':'routes/rest/tree.$projectId','parentId':'root','path':'rest/tree/:projectId','index':undefined,'caseSensitive':undefined,'module':'/build/routes/rest/tree.$projectId-4GKHHDNV.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false}},'url':'/build/manifest-6412D0F3.js'};", "\nimport * as entryServer from \"/Users/oleg/work/webstudio/webstudio-designer/apps/designer/app/entry.server.tsx\";\nimport * as route0 from \"/Users/oleg/work/webstudio/webstudio-designer/apps/designer/app/root.tsx\";\nimport * as route1 from \"/Users/oleg/work/webstudio/webstudio-designer/apps/designer/app/routes/rest/breakpoints.$projectId.ts\";\nimport * as route2 from \"/Users/oleg/work/webstudio/webstudio-designer/apps/designer/app/routes/rest/project/clone.$domain.ts\";\nimport * as route3 from \"/Users/oleg/work/webstudio/webstudio-designer/apps/designer/app/routes/rest/props.$projectId.ts\";\nimport * as route4 from \"/Users/oleg/work/webstudio/webstudio-designer/apps/designer/app/routes/rest/tree.$projectId.ts\";\nimport * as route5 from \"/Users/oleg/work/webstudio/webstudio-designer/apps/designer/app/routes/rest/publish.ts\";\nimport * as route6 from \"/Users/oleg/work/webstudio/webstudio-designer/apps/designer/app/routes/auth/github.tsx\";\nimport * as route7 from \"/Users/oleg/work/webstudio/webstudio-designer/apps/designer/app/routes/auth/github/callback.tsx\";\nimport * as route8 from \"/Users/oleg/work/webstudio/webstudio-designer/apps/designer/app/routes/auth/google.tsx\";\nimport * as route9 from \"/Users/oleg/work/webstudio/webstudio-designer/apps/designer/app/routes/auth/google/callback.tsx\";\nimport * as route10 from \"/Users/oleg/work/webstudio/webstudio-designer/apps/designer/app/routes/rest/patch.ts\";\nimport * as route11 from \"/Users/oleg/work/webstudio/webstudio-designer/apps/designer/app/routes/dashboard.tsx\";\nimport * as route12 from \"/Users/oleg/work/webstudio/webstudio-designer/apps/designer/app/routes/dashboard/index.tsx\";\nimport * as route13 from \"/Users/oleg/work/webstudio/webstudio-designer/apps/designer/app/routes/auth/dev.tsx\";\nimport * as route14 from \"/Users/oleg/work/webstudio/webstudio-designer/apps/designer/app/routes/designer.tsx\";\nimport * as route15 from \"/Users/oleg/work/webstudio/webstudio-designer/apps/designer/app/routes/designer/$id.tsx\";\nimport * as route16 from \"/Users/oleg/work/webstudio/webstudio-designer/apps/designer/app/routes/preview.tsx\";\nimport * as route17 from \"/Users/oleg/work/webstudio/webstudio-designer/apps/designer/app/routes/preview/$projectId.tsx\";\nimport * as route18 from \"/Users/oleg/work/webstudio/webstudio-designer/apps/designer/app/routes/canvas.tsx\";\nimport * as route19 from \"/Users/oleg/work/webstudio/webstudio-designer/apps/designer/app/routes/canvas/$projectId.tsx\";\nimport * as route20 from \"/Users/oleg/work/webstudio/webstudio-designer/apps/designer/app/routes/logout.tsx\";\nimport * as route21 from \"/Users/oleg/work/webstudio/webstudio-designer/apps/designer/app/routes/index.tsx\";\nimport * as route22 from \"/Users/oleg/work/webstudio/webstudio-designer/apps/designer/app/routes/login.tsx\";\nimport * as route23 from \"/Users/oleg/work/webstudio/webstudio-designer/apps/designer/app/routes/login/index.tsx\";\n  export { default as assets } from \"@remix-run/dev/assets-manifest\";\n  export const entry = { module: entryServer };\n  export const routes = {\n    \"root\": {\n      id: \"root\",\n      parentId: undefined,\n      path: \"\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route0\n    },\n  \"routes/rest/breakpoints.$projectId\": {\n      id: \"routes/rest/breakpoints.$projectId\",\n      parentId: \"root\",\n      path: \"rest/breakpoints/:projectId\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route1\n    },\n  \"routes/rest/project/clone.$domain\": {\n      id: \"routes/rest/project/clone.$domain\",\n      parentId: \"root\",\n      path: \"rest/project/clone/:domain\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route2\n    },\n  \"routes/rest/props.$projectId\": {\n      id: \"routes/rest/props.$projectId\",\n      parentId: \"root\",\n      path: \"rest/props/:projectId\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route3\n    },\n  \"routes/rest/tree.$projectId\": {\n      id: \"routes/rest/tree.$projectId\",\n      parentId: \"root\",\n      path: \"rest/tree/:projectId\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route4\n    },\n  \"routes/rest/publish\": {\n      id: \"routes/rest/publish\",\n      parentId: \"root\",\n      path: \"rest/publish\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route5\n    },\n  \"routes/auth/github\": {\n      id: \"routes/auth/github\",\n      parentId: \"root\",\n      path: \"auth/github\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route6\n    },\n  \"routes/auth/github/callback\": {\n      id: \"routes/auth/github/callback\",\n      parentId: \"routes/auth/github\",\n      path: \"callback\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route7\n    },\n  \"routes/auth/google\": {\n      id: \"routes/auth/google\",\n      parentId: \"root\",\n      path: \"auth/google\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route8\n    },\n  \"routes/auth/google/callback\": {\n      id: \"routes/auth/google/callback\",\n      parentId: \"routes/auth/google\",\n      path: \"callback\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route9\n    },\n  \"routes/rest/patch\": {\n      id: \"routes/rest/patch\",\n      parentId: \"root\",\n      path: \"rest/patch\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route10\n    },\n  \"routes/dashboard\": {\n      id: \"routes/dashboard\",\n      parentId: \"root\",\n      path: \"dashboard\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route11\n    },\n  \"routes/dashboard/index\": {\n      id: \"routes/dashboard/index\",\n      parentId: \"routes/dashboard\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route12\n    },\n  \"routes/auth/dev\": {\n      id: \"routes/auth/dev\",\n      parentId: \"root\",\n      path: \"auth/dev\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route13\n    },\n  \"routes/designer\": {\n      id: \"routes/designer\",\n      parentId: \"root\",\n      path: \"designer\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route14\n    },\n  \"routes/designer/$id\": {\n      id: \"routes/designer/$id\",\n      parentId: \"routes/designer\",\n      path: \":id\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route15\n    },\n  \"routes/preview\": {\n      id: \"routes/preview\",\n      parentId: \"root\",\n      path: \"preview\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route16\n    },\n  \"routes/preview/$projectId\": {\n      id: \"routes/preview/$projectId\",\n      parentId: \"routes/preview\",\n      path: \":projectId\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route17\n    },\n  \"routes/canvas\": {\n      id: \"routes/canvas\",\n      parentId: \"root\",\n      path: \"canvas\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route18\n    },\n  \"routes/canvas/$projectId\": {\n      id: \"routes/canvas/$projectId\",\n      parentId: \"routes/canvas\",\n      path: \":projectId\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route19\n    },\n  \"routes/logout\": {\n      id: \"routes/logout\",\n      parentId: \"root\",\n      path: \"logout\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route20\n    },\n  \"routes/index\": {\n      id: \"routes/index\",\n      parentId: \"root\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route21\n    },\n  \"routes/login\": {\n      id: \"routes/login\",\n      parentId: \"root\",\n      path: \"login\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route22\n    },\n  \"routes/login/index\": {\n      id: \"routes/login/index\",\n      parentId: \"routes/login\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route23\n    }\n  };"],
  "mappings": "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",
  "names": []
}
