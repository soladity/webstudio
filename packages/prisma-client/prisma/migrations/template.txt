import { PrismaClient } from "./client";

// NOTE ON IMPORTS:
//
//   You shouldn't import any code that can change as the project evolves!
//
//   It should be safe to import a library like `uuid` as its API is unlikely to change.
//   For application code, it's better to copy it to the migration directory.
//
//   If you have to import something that may change,
//   be prepared to keep the migration code up to date as well.
//
//   This is necessary because we want to be able to run old migrations at any point.
//   For example, when we setting up a fresh database or making a reset.

export default () => {
  const client = new PrismaClient();
  return client.$transaction(async (prisma) => {
    // This is the body of your migration.
    // Use the `prisma` client to perform database operations.
    //
    // Example:
    //
    // await prisma.user.updateMany({
    //   where: { username: null },
    //   data: { username: "Anonymous" },
    // });
    //
    // If data models' API is not enough, consider using a raw query:
    //
    // await prisma.$executeRaw`UPDATE "User" SET "username" = "email" WHERE "username" IS NULL`;
    //
    //
    // NOTE:
    //   Don't do any schema modifications here like adding a column to a table!
    //   If you need to change schema, edit schema.prisma and create a schema migration.
  });
};
